import { NextRequest, NextResponse } from 'next/server';
import { Resend } from 'resend';

const resend = new Resend(process.env.RESEND_API_KEY);

interface ContactFormData {
  name: string;
  email: string;
  company: string;
  message: string;
}

export async function POST(request: NextRequest) {
  try {
    const body: ContactFormData = await request.json();
    
    // Validation
    if (!body.name || !body.email || !body.message) {
      return NextResponse.json(
        { error: 'Name, email, and message are required' },
        { status: 400 }
      );
    }

    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(body.email)) {
      return NextResponse.json(
        { error: 'Invalid email address' },
        { status: 400 }
      );
    }

    if (!process.env.RESEND_API_KEY) {
      console.error('RESEND_API_KEY not configured');
      return NextResponse.json(
        { error: 'Email service not configured' },
        { status: 500 }
      );
    }

    const { name, email, company, message } = body;

    // Create email content
    const subject = `New Contact Form Submission - ${name}`;
    
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Contact Form Submission</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background-color: #0070f3; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
          .content { background-color: #f9f9f9; padding: 20px; border-radius: 0 0 8px 8px; }
          .field { background-color: white; padding: 15px; margin: 10px 0; border-left: 4px solid #0070f3; border-radius: 4px; }
          .field-label { font-weight: bold; color: #0070f3; margin-bottom: 5px; }
          .field-value { color: #333; word-wrap: break-word; }
          .message-field { background-color: white; padding: 20px; margin: 15px 0; border: 1px solid #e0e0e0; border-radius: 8px; }
          .footer { margin-top: 20px; padding-top: 20px; border-top: 1px solid #ddd; font-size: 12px; color: #666; text-align: center; }
          .reply-button { display: inline-block; padding: 12px 24px; background-color: #0070f3; color: white; text-decoration: none; border-radius: 6px; margin: 15px 0; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üìß Inteliexamen</h1>
            <p>New Contact Form Submission</p>
          </div>
          
          <div class="content">
            <p>Hi Inteliexamen Team!</p>
            
            <p>You have received a new contact form submission from your Inteliexamen website:</p>
            
            <div class="field">
              <div class="field-label">üë§ Name:</div>
              <div class="field-value">${name}</div>
            </div>
            
            <div class="field">
              <div class="field-label">üìß Email:</div>
              <div class="field-value">${email}</div>
            </div>
            
            ${company ? `
            <div class="field">
              <div class="field-label">üè¢ Company:</div>
              <div class="field-value">${company}</div>
            </div>
            ` : ''}
            
            <div class="message-field">
              <div class="field-label">üí¨ Message:</div>
              <div class="field-value">${message.replace(/\n/g, '<br>')}</div>
            </div>
            
            <div style="text-align: center; margin: 20px 0;">
              <a href="mailto:${email}?subject=Re: Your inquiry about Inteliexamen" class="reply-button">
                Reply to ${name}
              </a>
            </div>
            
            <p><strong>Submitted:</strong> ${new Date().toLocaleString()}</p>
            
            <div class="footer">
              <p>This email was automatically generated by the Inteliexamen contact form.</p>
              <p>Reply directly to this email to respond to the sender.</p>
            </div>
          </div>
        </div>
      </body>
      </html>
    `;

    // Send email using Resend
    const result = await resend.emails.send({
      from: 'Contact Form <contact@web.inteliexamen.com>',
      to: ['contact@inteliexamen.com'],
      replyTo: email, // User's email as reply-to
      subject: subject,
      html: htmlContent,
    });

    console.log('Contact form email sent:', result);

    return NextResponse.json({
      success: true,
      message: 'Message sent successfully'
    });

  } catch (error) {
    console.error('Contact form API error:', error);
    
    // Handle Resend-specific errors
    if (error instanceof Error) {
      if (error.message.includes('API key')) {
        return NextResponse.json(
          { error: 'Email service configuration error' },
          { status: 500 }
        );
      }
      if (error.message.includes('rate limit')) {
        return NextResponse.json(
          { error: 'Too many requests. Please try again later.' },
          { status: 429 }
        );
      }
    }
    
    return NextResponse.json(
      { error: 'Failed to send message. Please try again.' },
      { status: 500 }
    );
  }
}
