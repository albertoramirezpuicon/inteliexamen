generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model chatbot_action_list {
  id         Int     @id @default(autoincrement())
  customerid Int
  name       String? @db.VarChar(100)
  status     Int?    @default(1)
}

model chatbot_action_list_item {
  id             Int     @id @default(autoincrement())
  action_list_id Int
  order          Int?
  code           String? @db.VarChar(100)
  status         Int?    @default(1)
}

model chatbot_activities {
  id          Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid  Int
  courseid    Int
  module      String  @db.VarChar(20)
  module_name String? @db.VarChar(45)
  activity    String  @db.VarChar(20)
  code        String  @db.VarChar(20)
  stage       String  @db.VarChar(20)
  response    String? @db.VarChar(5)
  iscorrect   String? @db.VarChar(10)
  action      String  @db.VarChar(20)
  title       String? @db.VarChar(100)
  content     String  @db.VarChar(10000)
  filename    String? @db.VarChar(45)
}

model chatbot_billing_parameters {
  id         Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid Int
  unit       String  @db.VarChar(45)
  currency   String  @db.VarChar(3)
  cost       Decimal @db.Decimal(9, 2)
}

model chatbot_caches {
  id         Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid Int
  name       String @db.VarChar(45)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model chatbot_certificates {
  id                Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  enrolmentid       Int
  token             String   @db.VarChar(45)
  business_name     String   @db.VarChar(100)
  course_fullname   String   @db.VarChar(45)
  course_certifier  String   @db.VarChar(100)
  user_firstname    String   @db.VarChar(100)
  user_lastname     String   @db.VarChar(100)
  certificationdate DateTime @db.DateTime(0)
}

model chatbot_commerces {
  id          Int    @id @unique(map: "id_UNIQUE")
  customerid  Int
  description String @db.VarChar(45)
}

model chatbot_courses {
  id          Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  token       String?  @db.VarChar(45)
  customerid  Int
  fullname    String   @db.VarChar(45)
  description String   @db.VarChar(500)
  startdate   DateTime @db.Date
  enddate     DateTime @db.Date
  certifier   String?  @db.VarChar(100)
  lang        String?  @db.VarChar(2)
}

model chatbot_customers {
  id              Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  token           String? @db.VarChar(45)
  business_name   String  @db.VarChar(100)
  tax_id          String  @db.VarChar(45)
  country         String  @db.VarChar(2)
  phone           String? @db.VarChar(45)
  phone_id        String? @db.VarChar(45)
  test_phone_id   String? @db.VarChar(45)
  chatbot_type    String? @db.VarChar(45)
  start_intention String? @db.VarChar(45)
  languages       String? @db.VarChar(45)
}

model chatbot_enrolment_completions {
  id             Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  enrolmentid    Int
  module         String   @db.VarChar(20)
  activity       String   @db.VarChar(20)
  completiondate DateTime @db.DateTime(0)
}

model chatbot_enrolments {
  id               Int       @id @unique(map: "idenrolments_UNIQUE") @default(autoincrement())
  customerid       Int
  userid           BigInt
  courseid         Int
  firstname        String?   @db.VarChar(100)
  lastname         String?   @db.VarChar(100)
  status           String    @db.VarChar(45)
  startdate        DateTime? @db.DateTime(0)
  lastactivitycode String?   @db.VarChar(45)
  lastactivitydate DateTime? @db.DateTime(0)
}

model chatbot_grades {
  id          Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  enrolmentid Int
  module      String  @db.VarChar(10)
  activity    String  @db.VarChar(45)
  attempts    Int
  grade       Decimal @db.Decimal(9, 2)
}

model chatbot_kbs {
  id         Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid Int
  fullname   String @db.VarChar(45)
}

model chatbot_openai_interactions {
  id              Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  interactiondate DateTime @db.DateTime(0)
  customerid      Int
  input           String   @db.VarChar(500)
  output          String   @db.VarChar(500)
  rating          Int?
}

model chatbot_openai_models {
  id          Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name        String  @db.VarChar(45)
  input_cost  Decimal @db.Decimal(9, 5)
  output_cost Decimal @db.Decimal(9, 5)
}

model chatbot_openai_usage {
  id         Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  usagedate  DateTime @db.DateTime(0)
  customerid Int
  action     String   @db.VarChar(45)
  model      String   @db.VarChar(45)
  input      Int
  output     Int
  cost       Decimal  @db.Decimal(9, 5)
}

model chatbot_pending_messages {
  id          Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  a360_number String @db.VarChar(45)
  user_number String @db.VarChar(45)
  messages    Json
}

model chatbot_powerusers {
  id         Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid Int
  phone      String @db.VarChar(20)
  password   String @db.VarChar(200)
  salt       String @db.VarChar(45)
  role       String @db.VarChar(45)
}

model chatbot_prompts {
  id         Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid String @db.VarChar(45)
  intent     String @db.VarChar(45)
  prompt     String @db.VarChar(4096)
}

model chatbot_replies {
  id         Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid Int
  lang       String @db.VarChar(2)
  shortcode  String @db.VarChar(45)
  reply      String @db.VarChar(255)
}

model chatbot_session_promises {
  id        Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  sessionid Int
  status    String   @db.VarChar(45)
  promise   String   @db.VarChar(200)
  timestamp DateTime @db.DateTime(0)
}

model chatbot_session_values {
  id        Int    @id @default(autoincrement())
  sessionid Int
  keyname   String @db.VarChar(45)
  keyvalue  String @db.VarChar(500)
  timestamp BigInt
}

model chatbot_sessions {
  id          Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid  Int
  userid      BigInt
  username    String? @db.VarChar(45)
  country     String? @db.Char(2)
  created     BigInt
  lastrequest BigInt
  status      String  @db.VarChar(20)
  context     String? @db.VarChar(45)
}

model chatbot_sources {
  id             Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid     Int
  entityid       Int
  content_type   String  @db.VarChar(45)
  analysis_link  String  @db.VarChar(200)
  retrieval_link String? @db.VarChar(200)
  name           String  @db.VarChar(45)
  about          String  @db.VarChar(5000)
  collection     String? @db.VarChar(45)
}

model chatbot_users {
  id                Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  customerid        String  @db.VarChar(45)
  firstname         String  @db.VarChar(100)
  lastname          String  @db.VarChar(100)
  phone             String  @db.VarChar(20)
  category          String? @db.VarChar(45)
  privacy_agreement Int?    @default(0)
}

model genia_bookings {
  id            Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  booking_ref   String   @db.VarChar(6)
  booking_date  DateTime @db.DateTime(0)
  status        String   @db.VarChar(45)
  lang          String   @db.VarChar(2)
  first_name    String   @db.VarChar(45)
  last_name     String   @db.VarChar(45)
  email         String   @db.VarChar(128)
  phone         String   @db.VarChar(22)
  starting_date DateTime @db.DateTime(0)
  user_comments String?  @db.VarChar(250)
}

model innmx_mdl_adminpresets {
  id            BigInt  @id @default(autoincrement())
  userid        BigInt
  name          String  @default("") @db.VarChar(255)
  comments      String? @db.LongText
  site          String  @default("") @db.VarChar(255)
  author        String? @db.VarChar(255)
  moodleversion String  @default("") @db.VarChar(20)
  moodlerelease String  @default("") @db.VarChar(255)
  iscore        Boolean @default(false)
  timecreated   BigInt  @default(0)
  timeimported  BigInt  @default(0)
}

model innmx_mdl_adminpresets_app {
  id            BigInt @id @default(autoincrement())
  adminpresetid BigInt
  userid        BigInt
  time          BigInt

  @@index([adminpresetid], map: "innmx_mdl_admiapp_adm_ix")
}

model innmx_mdl_adminpresets_app_it {
  id                 BigInt @id @default(autoincrement())
  adminpresetapplyid BigInt
  configlogid        BigInt

  @@index([adminpresetapplyid], map: "innmx_mdl_admiappit_adm_ix")
  @@index([configlogid], map: "innmx_mdl_admiappit_con_ix")
}

model innmx_mdl_adminpresets_app_it_a {
  id                 BigInt  @id @default(autoincrement())
  adminpresetapplyid BigInt
  configlogid        BigInt
  itemname           String? @db.VarChar(100)

  @@index([adminpresetapplyid], map: "innmx_mdl_admiappita_adm_ix")
  @@index([configlogid], map: "innmx_mdl_admiappita_con_ix")
}

model innmx_mdl_adminpresets_app_plug {
  id                 BigInt  @id @default(autoincrement())
  adminpresetapplyid BigInt
  plugin             String? @db.VarChar(100)
  name               String  @default("") @db.VarChar(100)
  value              Int     @default(0) @db.SmallInt
  oldvalue           Int     @default(0) @db.SmallInt

  @@index([adminpresetapplyid], map: "innmx_mdl_admiappplug_adm_ix")
}

model innmx_mdl_adminpresets_it {
  id            BigInt  @id @default(autoincrement())
  adminpresetid BigInt
  plugin        String? @db.VarChar(100)
  name          String  @default("") @db.VarChar(100)
  value         String? @db.LongText

  @@index([adminpresetid], map: "innmx_mdl_admiit_adm_ix")
}

model innmx_mdl_adminpresets_it_a {
  id     BigInt  @id @default(autoincrement())
  itemid BigInt
  name   String  @default("") @db.VarChar(100)
  value  String? @db.LongText

  @@index([itemid], map: "innmx_mdl_admiita_ite_ix")
}

model innmx_mdl_adminpresets_plug {
  id            BigInt  @id @default(autoincrement())
  adminpresetid BigInt
  plugin        String? @db.VarChar(100)
  name          String  @default("") @db.VarChar(100)
  enabled       Int     @default(0) @db.SmallInt

  @@index([adminpresetid], map: "innmx_mdl_admiplug_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_indicator_calc {
  id           BigInt   @id @default(autoincrement())
  starttime    BigInt
  endtime      BigInt
  contextid    BigInt
  sampleorigin String   @default("") @db.VarChar(255)
  sampleid     BigInt
  indicator    String   @default("") @db.VarChar(255)
  value        Decimal? @db.Decimal(10, 2)
  timecreated  BigInt

  @@index([contextid], map: "mdl_analindicalc_con_ix")
  @@index([starttime, endtime, contextid], map: "mdl_analindicalc_staendcon_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_models {
  id                   BigInt  @id @default(autoincrement())
  enabled              Boolean @default(false)
  trained              Boolean @default(false)
  name                 String? @db.VarChar(1333)
  target               String  @default("") @db.VarChar(255)
  indicators           String  @db.LongText
  timesplitting        String? @db.VarChar(255)
  predictionsprocessor String? @db.VarChar(255)
  version              BigInt
  contextids           String? @db.LongText
  timecreated          BigInt?
  timemodified         BigInt
  usermodified         BigInt

  @@index([usermodified], map: "innmx_mdl_analmode_use_ix")
  @@index([enabled, trained], map: "mdl_analmode_enatra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_models_log {
  id             BigInt  @id @default(autoincrement())
  modelid        BigInt
  version        BigInt
  evaluationmode String  @default("") @db.VarChar(50)
  target         String  @default("") @db.VarChar(255)
  indicators     String  @db.LongText
  timesplitting  String? @db.VarChar(255)
  score          Decimal @default(0.00000) @db.Decimal(10, 5)
  info           String? @db.LongText
  dir            String  @db.LongText
  timecreated    BigInt
  usermodified   BigInt

  @@index([usermodified], map: "innmx_mdl_analmodelog_use_ix")
  @@index([modelid], map: "mdl_analmodelog_mod_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_predict_samples {
  id            BigInt @id @default(autoincrement())
  modelid       BigInt
  analysableid  BigInt
  timesplitting String @default("") @db.VarChar(255)
  rangeindex    BigInt
  sampleids     String @db.LongText
  timecreated   BigInt @default(0)
  timemodified  BigInt @default(0)

  @@index([modelid], map: "mdl_analpredsamp_mod_ix")
  @@index([modelid, analysableid, timesplitting, rangeindex], map: "mdl_analpredsamp_modanatimr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_prediction_actions {
  id           BigInt @id @default(autoincrement())
  predictionid BigInt
  userid       BigInt
  actionname   String @default("") @db.VarChar(255)
  timecreated  BigInt

  @@index([predictionid], map: "mdl_analpredacti_pre_ix")
  @@index([predictionid, userid, actionname], map: "mdl_analpredacti_preuseact_ix")
  @@index([userid], map: "mdl_analpredacti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_predictions {
  id              BigInt  @id @default(autoincrement())
  modelid         BigInt
  contextid       BigInt
  sampleid        BigInt
  rangeindex      Int     @db.MediumInt
  prediction      Decimal @db.Decimal(10, 2)
  predictionscore Decimal @db.Decimal(10, 5)
  calculations    String  @db.LongText
  timecreated     BigInt  @default(0)
  timestart       BigInt?
  timeend         BigInt?

  @@index([contextid], map: "mdl_analpred_con_ix")
  @@index([modelid], map: "mdl_analpred_mod_ix")
  @@index([modelid, contextid], map: "mdl_analpred_modcon_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_train_samples {
  id            BigInt @id @default(autoincrement())
  modelid       BigInt
  analysableid  BigInt
  timesplitting String @default("") @db.VarChar(255)
  sampleids     String @db.LongText
  timecreated   BigInt @default(0)

  @@index([modelid], map: "mdl_analtraisamp_mod_ix")
  @@index([modelid, analysableid, timesplitting], map: "mdl_analtraisamp_modanatim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_used_analysables {
  id            BigInt @id @default(autoincrement())
  modelid       BigInt
  action        String @default("") @db.VarChar(50)
  analysableid  BigInt
  firstanalysis BigInt
  timeanalysed  BigInt

  @@index([analysableid], map: "mdl_analusedanal_ana_ix")
  @@index([modelid], map: "mdl_analusedanal_mod_ix")
  @@index([modelid, action], map: "mdl_analusedanal_modact_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_analytics_used_files {
  id      BigInt @id @default(autoincrement())
  modelid BigInt @default(0)
  fileid  BigInt @default(0)
  action  String @default("") @db.VarChar(50)
  time    BigInt @default(0)

  @@index([fileid], map: "mdl_analusedfile_fil_ix")
  @@index([modelid], map: "mdl_analusedfile_mod_ix")
  @@index([modelid, action, fileid], map: "mdl_analusedfile_modactfil_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assign {
  id                          BigInt  @id @default(autoincrement())
  course                      BigInt  @default(0)
  name                        String  @default("") @db.VarChar(255)
  intro                       String  @db.LongText
  introformat                 Int     @default(0) @db.SmallInt
  alwaysshowdescription       Int     @default(0) @db.TinyInt
  activity                    String? @db.LongText
  activityformat              Int     @default(0) @db.SmallInt
  submissionattachments       Int     @default(0) @db.TinyInt
  nosubmissions               Int     @default(0) @db.TinyInt
  submissiondrafts            Int     @default(0) @db.TinyInt
  sendnotifications           Int     @default(0) @db.TinyInt
  sendlatenotifications       Int     @default(0) @db.TinyInt
  duedate                     BigInt  @default(0)
  allowsubmissionsfromdate    BigInt  @default(0)
  grade                       BigInt  @default(0)
  timemodified                BigInt  @default(0)
  requiresubmissionstatement  Int     @default(0) @db.TinyInt
  completionsubmit            Int     @default(0) @db.TinyInt
  cutoffdate                  BigInt  @default(0)
  timelimit                   BigInt  @default(0)
  gradingduedate              BigInt  @default(0)
  teamsubmission              Int     @default(0) @db.TinyInt
  requireallteammemberssubmit Int     @default(0) @db.TinyInt
  teamsubmissiongroupingid    BigInt  @default(0)
  blindmarking                Int     @default(0) @db.TinyInt
  hidegrader                  Int     @default(0) @db.TinyInt
  revealidentities            Int     @default(0) @db.TinyInt
  attemptreopenmethod         String  @default("none") @db.VarChar(10)
  maxattempts                 Int     @default(-1) @db.MediumInt
  markingworkflow             Int     @default(0) @db.TinyInt
  markingallocation           Int     @default(0) @db.TinyInt
  sendstudentnotifications    Int     @default(1) @db.TinyInt
  preventsubmissionnotingroup Int     @default(0) @db.TinyInt

  @@index([course], map: "mdl_assi_cou_ix")
  @@index([teamsubmissiongroupingid], map: "mdl_assi_tea_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assign_grades {
  id            BigInt   @id @default(autoincrement())
  assignment    BigInt   @default(0)
  userid        BigInt   @default(0)
  timecreated   BigInt   @default(0)
  timemodified  BigInt   @default(0)
  grader        BigInt   @default(0)
  grade         Decimal? @default(0.00000) @db.Decimal(10, 5)
  attemptnumber BigInt   @default(0)

  @@unique([assignment, userid, attemptnumber], map: "mdl_assigrad_assuseatt_uix")
  @@index([assignment], map: "mdl_assigrad_ass_ix")
  @@index([attemptnumber], map: "mdl_assigrad_att_ix")
  @@index([userid], map: "mdl_assigrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assign_overrides {
  id                       BigInt  @id @default(autoincrement())
  assignid                 BigInt  @default(0)
  groupid                  BigInt?
  userid                   BigInt?
  sortorder                BigInt?
  allowsubmissionsfromdate BigInt?
  duedate                  BigInt?
  cutoffdate               BigInt?
  timelimit                BigInt?

  @@index([assignid], map: "mdl_assiover_ass_ix")
  @@index([groupid], map: "mdl_assiover_gro_ix")
  @@index([userid], map: "mdl_assiover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assign_plugin_config {
  id         BigInt  @id @default(autoincrement())
  assignment BigInt  @default(0)
  plugin     String  @default("") @db.VarChar(28)
  subtype    String  @default("") @db.VarChar(28)
  name       String  @default("") @db.VarChar(28)
  value      String? @db.LongText

  @@index([assignment], map: "mdl_assiplugconf_ass_ix")
  @@index([name], map: "mdl_assiplugconf_nam_ix")
  @@index([plugin], map: "mdl_assiplugconf_plu_ix")
  @@index([subtype], map: "mdl_assiplugconf_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assign_submission {
  id            BigInt  @id @default(autoincrement())
  assignment    BigInt  @default(0)
  userid        BigInt  @default(0)
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)
  timestarted   BigInt?
  status        String? @db.VarChar(10)
  groupid       BigInt  @default(0)
  attemptnumber BigInt  @default(0)
  latest        Int     @default(0) @db.TinyInt

  @@unique([assignment, userid, groupid, attemptnumber], map: "mdl_assisubm_assusegroatt_uix")
  @@index([assignment], map: "mdl_assisubm_ass_ix")
  @@index([assignment, userid, groupid, latest], map: "mdl_assisubm_assusegrolat_ix")
  @@index([attemptnumber], map: "mdl_assisubm_att_ix")
  @@index([userid], map: "mdl_assisubm_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assign_user_flags {
  id               BigInt  @id @default(autoincrement())
  userid           BigInt  @default(0)
  assignment       BigInt  @default(0)
  locked           BigInt  @default(0)
  mailed           Int     @default(0) @db.SmallInt
  extensionduedate BigInt  @default(0)
  workflowstate    String? @db.VarChar(20)
  allocatedmarker  BigInt  @default(0)

  @@index([assignment], map: "mdl_assiuserflag_ass_ix")
  @@index([mailed], map: "mdl_assiuserflag_mai_ix")
  @@index([userid], map: "mdl_assiuserflag_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assign_user_mapping {
  id         BigInt @id @default(autoincrement())
  assignment BigInt @default(0)
  userid     BigInt @default(0)

  @@index([assignment], map: "mdl_assiusermapp_ass_ix")
  @@index([userid], map: "mdl_assiusermapp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignfeedback_comments {
  id            BigInt  @id @default(autoincrement())
  assignment    BigInt  @default(0)
  grade         BigInt  @default(0)
  commenttext   String? @db.LongText
  commentformat Int     @default(0) @db.SmallInt

  @@index([assignment], map: "mdl_assicomm_ass_ix")
  @@index([grade], map: "mdl_assicomm_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignfeedback_editpdf_annot {
  id      BigInt  @id @default(autoincrement())
  gradeid BigInt  @default(0)
  pageno  BigInt  @default(0)
  x       BigInt? @default(0)
  y       BigInt? @default(0)
  endx    BigInt? @default(0)
  endy    BigInt? @default(0)
  path    String? @db.LongText
  type    String? @default("line") @db.VarChar(10)
  colour  String? @default("black") @db.VarChar(10)
  draft   Int     @default(1) @db.TinyInt

  @@index([gradeid], map: "mdl_assieditanno_gra_ix")
  @@index([gradeid, pageno], map: "mdl_assieditanno_grapag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignfeedback_editpdf_cmnt {
  id      BigInt  @id @default(autoincrement())
  gradeid BigInt  @default(0)
  x       BigInt? @default(0)
  y       BigInt? @default(0)
  width   BigInt? @default(120)
  rawtext String? @db.LongText
  pageno  BigInt  @default(0)
  colour  String? @default("black") @db.VarChar(10)
  draft   Int     @default(1) @db.TinyInt

  @@index([gradeid], map: "mdl_assieditcmnt_gra_ix")
  @@index([gradeid, pageno], map: "mdl_assieditcmnt_grapag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignfeedback_editpdf_quick {
  id      BigInt  @id @default(autoincrement())
  userid  BigInt  @default(0)
  rawtext String  @db.LongText
  width   BigInt  @default(120)
  colour  String? @default("yellow") @db.VarChar(10)

  @@index([userid], map: "mdl_assieditquic_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignfeedback_editpdf_rot {
  id           BigInt  @id @default(autoincrement())
  gradeid      BigInt  @default(0)
  pageno       BigInt  @default(0)
  pathnamehash String  @db.LongText
  isrotated    Boolean @default(false)
  degree       BigInt  @default(0)

  @@unique([gradeid, pageno], map: "mdl_assieditrot_grapag_uix")
  @@index([gradeid], map: "mdl_assieditrot_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignfeedback_file {
  id         BigInt @id @default(autoincrement())
  assignment BigInt @default(0)
  grade      BigInt @default(0)
  numfiles   BigInt @default(0)

  @@index([assignment], map: "mdl_assifile_ass2_ix")
  @@index([grade], map: "mdl_assifile_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignment {
  id             BigInt  @id @default(autoincrement())
  course         BigInt  @default(0)
  name           String  @default("") @db.VarChar(255)
  intro          String  @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  assignmenttype String  @default("") @db.VarChar(50)
  resubmit       Int     @default(0) @db.TinyInt
  preventlate    Int     @default(0) @db.TinyInt
  emailteachers  Int     @default(0) @db.TinyInt
  var1           BigInt? @default(0)
  var2           BigInt? @default(0)
  var3           BigInt? @default(0)
  var4           BigInt? @default(0)
  var5           BigInt? @default(0)
  maxbytes       BigInt  @default(100000)
  timedue        BigInt  @default(0)
  timeavailable  BigInt  @default(0)
  grade          BigInt  @default(0)
  timemodified   BigInt  @default(0)

  @@index([course], map: "mdl_assi_cou2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignment_submissions {
  id                BigInt  @id @default(autoincrement())
  assignment        BigInt  @default(0)
  userid            BigInt  @default(0)
  timecreated       BigInt  @default(0)
  timemodified      BigInt  @default(0)
  numfiles          BigInt  @default(0)
  data1             String? @db.LongText
  data2             String? @db.LongText
  grade             BigInt  @default(0)
  submissioncomment String  @db.LongText
  format            Int     @default(0) @db.SmallInt
  teacher           BigInt  @default(0)
  timemarked        BigInt  @default(0)
  mailed            Boolean @default(false)

  @@index([assignment], map: "mdl_assisubm_ass2_ix")
  @@index([mailed], map: "mdl_assisubm_mai_ix")
  @@index([timemarked], map: "mdl_assisubm_tim_ix")
  @@index([userid], map: "mdl_assisubm_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignment_upgrade {
  id          BigInt @id @default(autoincrement())
  oldcmid     BigInt @default(0)
  oldinstance BigInt @default(0)
  newcmid     BigInt @default(0)
  newinstance BigInt @default(0)
  timecreated BigInt @default(0)

  @@index([oldinstance], map: "mdl_assiupgr_old2_ix")
  @@index([oldcmid], map: "mdl_assiupgr_old_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignsubmission_file {
  id         BigInt @id @default(autoincrement())
  assignment BigInt @default(0)
  submission BigInt @default(0)
  numfiles   BigInt @default(0)

  @@index([assignment], map: "mdl_assifile_ass_ix")
  @@index([submission], map: "mdl_assifile_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_assignsubmission_onlinetext {
  id           BigInt  @id @default(autoincrement())
  assignment   BigInt  @default(0)
  submission   BigInt  @default(0)
  onlinetext   String? @db.LongText
  onlineformat Int     @default(0) @db.SmallInt

  @@index([assignment], map: "mdl_assionli_ass_ix")
  @@index([submission], map: "mdl_assionli_sub_ix")
}

model innmx_mdl_auth_lti_linked_login {
  id           BigInt @id @default(autoincrement())
  userid       BigInt
  issuer       String @db.LongText
  issuer256    String @default("") @db.VarChar(64)
  sub          String @default("") @db.VarChar(255)
  sub256       String @default("") @db.VarChar(64)
  timecreated  BigInt
  timemodified BigInt

  @@unique([userid, issuer256, sub256], map: "innmx_mdl_authltilinklogi3_uix")
  @@index([userid], map: "innmx_mdl_authltilinklogi_u_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_auth_oauth2_linked_login {
  id                  BigInt  @id @default(autoincrement())
  timecreated         BigInt
  timemodified        BigInt
  usermodified        BigInt
  userid              BigInt
  issuerid            BigInt
  username            String  @default("") @db.VarChar(255)
  email               String  @db.LongText
  confirmtoken        String  @default("") @db.VarChar(64)
  confirmtokenexpires BigInt?

  @@unique([userid, issuerid, username], map: "mdl_authoautlinklogi_useis_uix")
  @@index([issuerid], map: "mdl_authoautlinklogi_iss_ix")
  @@index([issuerid, username], map: "mdl_authoautlinklogi_issuse_ix")
  @@index([userid], map: "mdl_authoautlinklogi_use2_ix")
  @@index([usermodified], map: "mdl_authoautlinklogi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_backup_controllers {
  id            BigInt  @id @default(autoincrement())
  backupid      String  @unique(map: "mdl_backcont_bac_uix") @default("") @db.VarChar(32)
  operation     String  @default("backup") @db.VarChar(20)
  type          String  @default("") @db.VarChar(10)
  itemid        BigInt
  format        String  @default("") @db.VarChar(20)
  interactive   Int     @db.SmallInt
  purpose       Int     @db.SmallInt
  userid        BigInt
  status        Int     @db.SmallInt
  execution     Int     @db.SmallInt
  executiontime BigInt
  checksum      String  @default("") @db.VarChar(32)
  timecreated   BigInt
  timemodified  BigInt
  progress      Decimal @default(0.00000000000000) @db.Decimal(15, 14)
  controller    String  @db.LongText

  @@index([type, itemid], map: "mdl_backcont_typite_ix")
  @@index([userid], map: "mdl_backcont_use_ix")
  @@index([userid, itemid], map: "mdl_backcont_useite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_backup_courses {
  id            BigInt @id @default(autoincrement())
  courseid      BigInt @unique(map: "mdl_backcour_cou_uix") @default(0)
  laststarttime BigInt @default(0)
  lastendtime   BigInt @default(0)
  laststatus    String @default("5") @db.VarChar(1)
  nextstarttime BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_backup_logs {
  id          BigInt @id @default(autoincrement())
  backupid    String @default("") @db.VarChar(32)
  loglevel    Int    @db.SmallInt
  message     String @db.LongText
  timecreated BigInt

  @@unique([backupid, id], map: "mdl_backlogs_bacid_uix")
  @@index([backupid], map: "mdl_backlogs_bac_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge {
  id               BigInt  @id @default(autoincrement())
  name             String  @default("") @db.VarChar(255)
  description      String? @db.LongText
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)
  usercreated      BigInt
  usermodified     BigInt
  issuername       String  @default("") @db.VarChar(255)
  issuerurl        String  @default("") @db.VarChar(255)
  issuercontact    String? @db.VarChar(255)
  expiredate       BigInt?
  expireperiod     BigInt?
  type             Boolean @default(true)
  courseid         BigInt?
  message          String  @db.LongText
  messagesubject   String  @db.LongText
  attachment       Boolean @default(true)
  notification     Boolean @default(true)
  status           Boolean @default(false)
  nextcron         BigInt?
  version          String? @db.VarChar(255)
  language         String? @db.VarChar(255)
  imageauthorname  String? @db.VarChar(255)
  imageauthoremail String? @db.VarChar(255)
  imageauthorurl   String? @db.VarChar(255)
  imagecaption     String? @db.LongText

  @@index([courseid], map: "mdl_badg_cou_ix")
  @@index([type], map: "mdl_badg_typ_ix")
  @@index([usercreated], map: "mdl_badg_use2_ix")
  @@index([usermodified], map: "mdl_badg_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_alignment {
  id                BigInt  @id @default(autoincrement())
  badgeid           BigInt  @default(0)
  targetname        String  @default("") @db.VarChar(255)
  targeturl         String  @default("") @db.VarChar(255)
  targetdescription String? @db.LongText
  targetframework   String? @db.VarChar(255)
  targetcode        String? @db.VarChar(255)

  @@index([badgeid], map: "mdl_badgalig_bad_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_backpack {
  id                 BigInt  @id @default(autoincrement())
  userid             BigInt  @default(0)
  email              String  @default("") @db.VarChar(100)
  backpackuid        BigInt
  autosync           Boolean @default(false)
  password           String? @db.VarChar(50)
  externalbackpackid BigInt?

  @@unique([userid, externalbackpackid], map: "mdl_badgback_useext_uix")
  @@index([externalbackpackid], map: "mdl_badgback_ext_ix")
  @@index([userid], map: "mdl_badgback_use_ix")
}

model innmx_mdl_badge_backpack_oauth2 {
  id                 BigInt  @id @default(autoincrement())
  usermodified       BigInt  @default(0)
  timecreated        BigInt  @default(0)
  timemodified       BigInt  @default(0)
  userid             BigInt
  issuerid           BigInt
  externalbackpackid BigInt
  token              String  @db.LongText
  refreshtoken       String  @db.LongText
  expires            BigInt?
  scope              String? @db.LongText

  @@index([externalbackpackid], map: "mdl_badgbackoaut_ext_ix")
  @@index([issuerid], map: "mdl_badgbackoaut_iss_ix")
  @@index([userid], map: "mdl_badgbackoaut_use2_ix")
  @@index([usermodified], map: "mdl_badgbackoaut_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_criteria {
  id                BigInt  @id @default(autoincrement())
  badgeid           BigInt  @default(0)
  criteriatype      BigInt?
  method            Boolean @default(true)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt

  @@unique([badgeid, criteriatype], map: "mdl_badgcrit_badcri_uix")
  @@index([badgeid], map: "mdl_badgcrit_bad_ix")
  @@index([criteriatype], map: "mdl_badgcrit_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_criteria_met {
  id       BigInt  @id @default(autoincrement())
  issuedid BigInt?
  critid   BigInt
  userid   BigInt
  datemet  BigInt

  @@index([critid], map: "mdl_badgcritmet_cri_ix")
  @@index([issuedid], map: "mdl_badgcritmet_iss_ix")
  @@index([userid], map: "mdl_badgcritmet_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_criteria_param {
  id     BigInt  @id @default(autoincrement())
  critid BigInt
  name   String  @default("") @db.VarChar(255)
  value  String? @db.VarChar(255)

  @@index([critid], map: "mdl_badgcritpara_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_endorsement {
  id           BigInt  @id @default(autoincrement())
  badgeid      BigInt  @default(0)
  issuername   String  @default("") @db.VarChar(255)
  issuerurl    String  @default("") @db.VarChar(255)
  issueremail  String  @default("") @db.VarChar(255)
  claimid      String? @db.VarChar(255)
  claimcomment String? @db.LongText
  dateissued   BigInt  @default(0)

  @@index([badgeid], map: "mdl_badgendo_bad_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_external {
  id           BigInt  @id @default(autoincrement())
  backpackid   BigInt
  collectionid BigInt
  entityid     String? @db.VarChar(255)
  assertion    String? @db.LongText

  @@index([backpackid], map: "mdl_badgexte_bac_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_external_backpack {
  id              BigInt  @id @default(autoincrement())
  backpackapiurl  String  @unique(map: "mdl_badgexteback_bac_uix") @default("") @db.VarChar(255)
  backpackweburl  String  @unique(map: "mdl_badgexteback_bac2_uix") @default("") @db.VarChar(255)
  apiversion      String  @default("1.0") @db.VarChar(12)
  sortorder       BigInt  @default(0)
  oauth2_issuerid BigInt?

  @@index([oauth2_issuerid], map: "mdl_badgexteback_oau_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_external_identifier {
  id             BigInt @id @default(autoincrement())
  sitebackpackid BigInt
  internalid     String @default("") @db.VarChar(128)
  externalid     String @default("") @db.VarChar(128)
  type           String @default("") @db.VarChar(16)

  @@unique([sitebackpackid, internalid, externalid, type], map: "mdl_badgexteiden_sitintext_uix")
  @@index([sitebackpackid], map: "mdl_badgexteiden_sit_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_issued {
  id             BigInt  @id @default(autoincrement())
  badgeid        BigInt  @default(0)
  userid         BigInt  @default(0)
  uniquehash     String  @db.LongText
  dateissued     BigInt  @default(0)
  dateexpire     BigInt?
  visible        Boolean @default(false)
  issuernotified BigInt?

  @@unique([badgeid, userid], map: "mdl_badgissu_baduse_uix")
  @@index([badgeid], map: "mdl_badgissu_bad_ix")
  @@index([userid], map: "mdl_badgissu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_manual_award {
  id          BigInt @id @default(autoincrement())
  badgeid     BigInt
  recipientid BigInt
  issuerid    BigInt
  issuerrole  BigInt
  datemet     BigInt

  @@index([badgeid], map: "mdl_badgmanuawar_bad_ix")
  @@index([issuerrole], map: "mdl_badgmanuawar_iss2_ix")
  @@index([issuerid], map: "mdl_badgmanuawar_iss_ix")
  @@index([recipientid], map: "mdl_badgmanuawar_rec_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_badge_related {
  id             BigInt  @id @default(autoincrement())
  badgeid        BigInt  @default(0)
  relatedbadgeid BigInt?

  @@unique([badgeid, relatedbadgeid], map: "mdl_badgrela_badrel_uix")
  @@index([badgeid], map: "mdl_badgrela_bad_ix")
  @@index([relatedbadgeid], map: "mdl_badgrela_rel_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_bigbluebuttonbn {
  id                            BigInt  @id @default(autoincrement())
  type                          Int     @default(0) @db.TinyInt
  course                        BigInt  @default(0)
  name                          String  @default("") @db.VarChar(255)
  intro                         String? @db.LongText
  introformat                   Int     @default(1) @db.SmallInt
  meetingid                     String  @default("") @db.VarChar(255)
  moderatorpass                 String  @default("") @db.VarChar(255)
  viewerpass                    String  @default("") @db.VarChar(255)
  wait                          Boolean @default(false)
  record                        Boolean @default(false)
  recordallfromstart            Boolean @default(false)
  recordhidebutton              Boolean @default(false)
  welcome                       String? @db.LongText
  voicebridge                   Int     @default(0) @db.MediumInt
  openingtime                   BigInt  @default(0)
  closingtime                   BigInt  @default(0)
  timecreated                   BigInt  @default(0)
  timemodified                  BigInt  @default(0)
  presentation                  String? @db.LongText
  participants                  String? @db.LongText
  userlimit                     Int     @default(0) @db.SmallInt
  recordings_html               Boolean @default(false)
  recordings_deleted            Boolean @default(true)
  recordings_imported           Boolean @default(false)
  recordings_preview            Boolean @default(false)
  clienttype                    Boolean @default(false)
  muteonstart                   Boolean @default(false)
  disablecam                    Boolean @default(false)
  disablemic                    Boolean @default(false)
  disableprivatechat            Boolean @default(false)
  disablepublicchat             Boolean @default(false)
  disablenote                   Boolean @default(false)
  hideuserlist                  Boolean @default(false)
  lockedlayout                  Boolean @default(false)
  completionattendance          Int     @default(0)
  completionengagementchats     Int     @default(0)
  completionengagementtalks     Int     @default(0)
  completionengagementraisehand Int     @default(0)
  completionengagementpollvotes Int     @default(0)
  completionengagementemojis    Int     @default(0)
  guestallowed                  Int?    @default(0) @db.TinyInt
  mustapproveuser               Int?    @default(1) @db.TinyInt
  guestlinkuid                  String? @db.VarChar(1024)
  guestpassword                 String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_bigbluebuttonbn_logs {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt
  bigbluebuttonbnid BigInt
  userid            BigInt?
  timecreated       BigInt  @default(0)
  meetingid         String  @default("") @db.VarChar(256)
  log               String  @default("") @db.VarChar(32)
  meta              String? @db.LongText

  @@index([courseid], map: "innmx_mdl_bigblogs_cou_ix")
  @@index([courseid, bigbluebuttonbnid, userid, log], map: "innmx_mdl_bigblogs_coubigus_ix")
  @@index([log], map: "innmx_mdl_bigblogs_log_ix")
  @@index([userid, log], map: "innmx_mdl_bigblogs_uselog_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_bigbluebuttonbn_recordings {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt
  bigbluebuttonbnid BigInt
  groupid           BigInt?
  recordingid       String  @default("") @db.VarChar(64)
  headless          Boolean @default(false)
  imported          Boolean @default(false)
  status            Boolean @default(false)
  importeddata      String? @db.LongText
  timecreated       BigInt  @default(0)
  usermodified      BigInt  @default(0)
  timemodified      BigInt  @default(0)

  @@index([bigbluebuttonbnid], map: "innmx_mdl_bigbreco_big_ix")
  @@index([courseid], map: "innmx_mdl_bigbreco_cou_ix")
  @@index([recordingid], map: "innmx_mdl_bigbreco_rec_ix")
  @@index([usermodified], map: "innmx_mdl_bigbreco_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_block {
  id       BigInt  @id @default(autoincrement())
  name     String  @unique(map: "mdl_bloc_nam_uix") @default("") @db.VarChar(40)
  cron     BigInt  @default(0)
  lastcron BigInt  @default(0)
  visible  Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_block_configurable_reports {
  id                BigInt   @id @default(autoincrement())
  courseid          BigInt
  ownerid           BigInt
  visible           Int      @db.SmallInt
  name              String   @default("") @db.VarChar(128)
  summary           String?  @db.LongText
  summaryformat     Int      @default(0) @db.SmallInt
  type              String   @default("") @db.VarChar(128)
  pagination        Int?     @db.SmallInt
  components        String?  @db.LongText
  export            String?  @db.VarChar(255)
  jsordering        Int?     @db.SmallInt
  global            Int      @default(0) @db.SmallInt
  lastexecutiontime BigInt   @default(0)
  cron              Int      @default(0) @db.SmallInt
  remote            Boolean? @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_block_instances {
  id                BigInt  @id @default(autoincrement())
  blockname         String  @default("") @db.VarChar(40)
  parentcontextid   BigInt
  showinsubcontexts Int     @db.SmallInt
  requiredbytheme   Int     @default(0) @db.SmallInt
  pagetypepattern   String  @default("") @db.VarChar(64)
  subpagepattern    String? @db.VarChar(16)
  defaultregion     String  @default("") @db.VarChar(16)
  defaultweight     BigInt
  configdata        String? @db.LongText
  timecreated       BigInt
  timemodified      BigInt

  @@index([parentcontextid], map: "mdl_blocinst_par_ix")
  @@index([parentcontextid, showinsubcontexts, pagetypepattern, subpagepattern], map: "mdl_blocinst_parshopagsub_ix")
  @@index([timemodified], map: "mdl_blocinst_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_block_positions {
  id              BigInt @id @default(autoincrement())
  blockinstanceid BigInt
  contextid       BigInt
  pagetype        String @default("") @db.VarChar(64)
  subpage         String @default("") @db.VarChar(16)
  visible         Int    @db.SmallInt
  region          String @default("") @db.VarChar(16)
  weight          BigInt

  @@unique([blockinstanceid, contextid, pagetype, subpage], map: "mdl_blocposi_bloconpagsub_uix")
  @@index([blockinstanceid], map: "mdl_blocposi_blo_ix")
  @@index([contextid], map: "mdl_blocposi_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_block_recent_activity {
  id          BigInt  @id @default(autoincrement())
  courseid    BigInt
  cmid        BigInt
  timecreated BigInt
  userid      BigInt
  action      Boolean
  modname     String? @db.VarChar(20)

  @@index([courseid, timecreated], map: "mdl_blocreceacti_coutim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_block_recentlyaccesseditems {
  id         BigInt @id @default(autoincrement())
  courseid   BigInt
  cmid       BigInt
  userid     BigInt
  timeaccess BigInt

  @@unique([userid, courseid, cmid], map: "mdl_blocrece_usecoucmi_uix")
  @@index([cmid], map: "mdl_blocrece_cmi_ix")
  @@index([courseid], map: "mdl_blocrece_cou_ix")
  @@index([userid], map: "mdl_blocrece_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_block_rss_client {
  id             BigInt @id @default(autoincrement())
  userid         BigInt @default(0)
  title          String @db.LongText
  preferredtitle String @default("") @db.VarChar(64)
  description    String @db.LongText
  shared         Int    @default(0) @db.TinyInt
  url            String @default("") @db.VarChar(255)
  skiptime       BigInt @default(0)
  skipuntil      BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_blog_association {
  id        BigInt @id @default(autoincrement())
  contextid BigInt
  blogid    BigInt

  @@index([blogid], map: "mdl_blogasso_blo_ix")
  @@index([contextid], map: "mdl_blogasso_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_blog_external {
  id             BigInt  @id @default(autoincrement())
  userid         BigInt
  name           String  @default("") @db.VarChar(255)
  description    String? @db.LongText
  url            String  @db.LongText
  filtertags     String? @db.VarChar(255)
  failedlastsync Boolean @default(false)
  timemodified   BigInt?
  timefetched    BigInt  @default(0)

  @@index([userid], map: "mdl_blogexte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_book {
  id           BigInt  @id @default(autoincrement())
  course       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  numbering    Int     @default(0) @db.SmallInt
  navstyle     Int     @default(1) @db.SmallInt
  customtitles Int     @default(0) @db.TinyInt
  revision     BigInt  @default(0)
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([course], map: "innmx_mdl_book_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_book_chapters {
  id            BigInt @id @default(autoincrement())
  bookid        BigInt @default(0)
  pagenum       BigInt @default(0)
  subchapter    BigInt @default(0)
  title         String @default("") @db.VarChar(255)
  content       String @db.LongText
  contentformat Int    @default(0) @db.SmallInt
  hidden        Int    @default(0) @db.TinyInt
  timecreated   BigInt @default(0)
  timemodified  BigInt @default(0)
  importsrc     String @default("") @db.VarChar(255)

  @@index([bookid], map: "mdl_bookchap_boo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_cache_filters {
  id           BigInt @id @default(autoincrement())
  filter       String @default("") @db.VarChar(32)
  version      BigInt @default(0)
  md5key       String @default("") @db.VarChar(32)
  rawtext      String @db.LongText
  timemodified BigInt @default(0)

  @@index([filter, md5key], map: "mdl_cachfilt_filmd5_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_cache_flags {
  id           BigInt @id @default(autoincrement())
  flagtype     String @default("") @db.VarChar(255)
  name         String @default("") @db.VarChar(255)
  timemodified BigInt @default(0)
  value        String @db.LongText
  expiry       BigInt

  @@index([flagtype], map: "mdl_cachflag_fla_ix")
  @@index([name], map: "mdl_cachflag_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_capabilities {
  id           BigInt @id @default(autoincrement())
  name         String @unique(map: "mdl_capa_nam_uix") @default("") @db.VarChar(255)
  captype      String @default("") @db.VarChar(50)
  contextlevel BigInt @default(0)
  component    String @default("") @db.VarChar(100)
  riskbitmask  BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_chat {
  id           BigInt @id @default(autoincrement())
  course       BigInt @default(0)
  name         String @default("") @db.VarChar(255)
  intro        String @db.LongText
  introformat  Int    @default(0) @db.SmallInt
  keepdays     BigInt @default(0)
  studentlogs  Int    @default(0) @db.SmallInt
  chattime     BigInt @default(0)
  schedule     Int    @default(0) @db.SmallInt
  timemodified BigInt @default(0)

  @@index([course], map: "mdl_chat_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_chat_messages {
  id        BigInt  @id @default(autoincrement())
  chatid    BigInt  @default(0)
  userid    BigInt  @default(0)
  groupid   BigInt  @default(0)
  issystem  Boolean @default(false)
  message   String  @db.LongText
  timestamp BigInt  @default(0)

  @@index([chatid], map: "mdl_chatmess_cha_ix")
  @@index([groupid], map: "mdl_chatmess_gro_ix")
  @@index([timestamp, chatid], map: "mdl_chatmess_timcha_ix")
  @@index([userid], map: "mdl_chatmess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_chat_messages_current {
  id        BigInt  @id @default(autoincrement())
  chatid    BigInt  @default(0)
  userid    BigInt  @default(0)
  groupid   BigInt  @default(0)
  issystem  Boolean @default(false)
  message   String  @db.LongText
  timestamp BigInt  @default(0)

  @@index([chatid], map: "mdl_chatmesscurr_cha_ix")
  @@index([groupid], map: "mdl_chatmesscurr_gro_ix")
  @@index([timestamp, chatid], map: "mdl_chatmesscurr_timcha_ix")
  @@index([userid], map: "mdl_chatmesscurr_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_chat_users {
  id              BigInt @id @default(autoincrement())
  chatid          BigInt @default(0)
  userid          BigInt @default(0)
  groupid         BigInt @default(0)
  version         String @default("") @db.VarChar(16)
  ip              String @default("") @db.VarChar(45)
  firstping       BigInt @default(0)
  lastping        BigInt @default(0)
  lastmessageping BigInt @default(0)
  sid             String @default("") @db.VarChar(32)
  course          BigInt @default(0)
  lang            String @default("") @db.VarChar(30)

  @@index([course], map: "innmx_mdl_chatuser_cou_ix")
  @@index([chatid], map: "mdl_chatuser_cha_ix")
  @@index([groupid], map: "mdl_chatuser_gro_ix")
  @@index([lastping], map: "mdl_chatuser_las_ix")
  @@index([userid], map: "mdl_chatuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_choice {
  id               BigInt  @id @default(autoincrement())
  course           BigInt  @default(0)
  name             String  @default("") @db.VarChar(255)
  intro            String  @db.LongText
  introformat      Int     @default(0) @db.SmallInt
  publish          Int     @default(0) @db.TinyInt
  showresults      Int     @default(0) @db.TinyInt
  display          Int     @default(0) @db.SmallInt
  allowupdate      Int     @default(0) @db.TinyInt
  allowmultiple    Int     @default(0) @db.TinyInt
  showunanswered   Int     @default(0) @db.TinyInt
  includeinactive  Int     @default(1) @db.TinyInt
  limitanswers     Int     @default(0) @db.TinyInt
  timeopen         BigInt  @default(0)
  timeclose        BigInt  @default(0)
  showpreview      Int     @default(0) @db.TinyInt
  timemodified     BigInt  @default(0)
  completionsubmit Boolean @default(false)
  showavailable    Boolean @default(false)

  @@index([course], map: "mdl_choi_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_choice_answers {
  id           BigInt @id @default(autoincrement())
  choiceid     BigInt @default(0)
  userid       BigInt @default(0)
  optionid     BigInt @default(0)
  timemodified BigInt @default(0)

  @@index([choiceid], map: "mdl_choiansw_cho_ix")
  @@index([optionid], map: "mdl_choiansw_opt_ix")
  @@index([userid], map: "mdl_choiansw_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_choice_options {
  id           BigInt  @id @default(autoincrement())
  choiceid     BigInt  @default(0)
  text         String? @db.LongText
  maxanswers   BigInt? @default(0)
  timemodified BigInt  @default(0)

  @@index([choiceid], map: "mdl_choiopti_cho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_cohort {
  id                BigInt  @id @default(autoincrement())
  contextid         BigInt
  name              String  @default("") @db.VarChar(254)
  idnumber          String? @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @db.TinyInt
  visible           Boolean @default(true)
  component         String  @default("") @db.VarChar(100)
  timecreated       BigInt
  timemodified      BigInt
  theme             String? @db.VarChar(50)

  @@index([contextid], map: "mdl_coho_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_cohort_members {
  id        BigInt @id @default(autoincrement())
  cohortid  BigInt @default(0)
  userid    BigInt @default(0)
  timeadded BigInt @default(0)

  @@unique([cohortid, userid], map: "mdl_cohomemb_cohuse_uix")
  @@index([cohortid], map: "mdl_cohomemb_coh_ix")
  @@index([userid], map: "mdl_cohomemb_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_comments {
  id          BigInt  @id @default(autoincrement())
  contextid   BigInt
  component   String? @db.VarChar(255)
  commentarea String  @default("") @db.VarChar(255)
  itemid      BigInt
  content     String  @db.LongText
  format      Int     @default(0) @db.TinyInt
  userid      BigInt
  timecreated BigInt

  @@index([contextid, commentarea, itemid], map: "mdl_comm_concomite_ix")
  @@index([userid], map: "mdl_comm_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency {
  id                    BigInt  @id @default(autoincrement())
  shortname             String? @db.VarChar(100)
  description           String? @db.LongText
  descriptionformat     Int     @default(0) @db.SmallInt
  idnumber              String? @db.VarChar(100)
  competencyframeworkid BigInt
  parentid              BigInt  @default(0)
  path                  String  @default("") @db.VarChar(255)
  sortorder             BigInt
  ruletype              String? @db.VarChar(100)
  ruleoutcome           Int     @default(0) @db.TinyInt
  ruleconfig            String? @db.LongText
  scaleid               BigInt?
  scaleconfiguration    String? @db.LongText
  timecreated           BigInt
  timemodified          BigInt
  usermodified          BigInt?

  @@unique([competencyframeworkid, idnumber], map: "mdl_comp_comidn_uix")
  @@index([scaleid], map: "innmx_mdl_comp_sca_ix")
  @@index([usermodified], map: "innmx_mdl_comp_use_ix")
  @@index([ruleoutcome], map: "mdl_comp_rul_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_coursecomp {
  id           BigInt @id @default(autoincrement())
  courseid     BigInt
  competencyid BigInt
  ruleoutcome  Int    @db.TinyInt
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt
  sortorder    BigInt

  @@unique([courseid, competencyid], map: "mdl_compcour_coucom_uix")
  @@index([usermodified], map: "innmx_mdl_compcour_use2_ix")
  @@index([competencyid], map: "mdl_compcour_com_ix")
  @@index([courseid], map: "mdl_compcour_cou2_ix")
  @@index([courseid, ruleoutcome], map: "mdl_compcour_courul_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_coursecompsetting {
  id                     BigInt  @id @default(autoincrement())
  courseid               BigInt  @unique(map: "mdl_compcour_cou_uix")
  pushratingstouserplans Int?    @db.TinyInt
  timecreated            BigInt
  timemodified           BigInt
  usermodified           BigInt?

  @@index([usermodified], map: "innmx_mdl_compcour_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_evidence {
  id               BigInt  @id @default(autoincrement())
  usercompetencyid BigInt
  contextid        BigInt
  action           Int     @db.TinyInt
  actionuserid     BigInt?
  descidentifier   String  @default("") @db.VarChar(255)
  desccomponent    String  @default("") @db.VarChar(255)
  desca            String? @db.LongText
  url              String? @db.VarChar(255)
  grade            BigInt?
  note             String? @db.LongText
  timecreated      BigInt
  timemodified     BigInt
  usermodified     BigInt

  @@index([actionuserid], map: "innmx_mdl_compevid_act_ix")
  @@index([contextid], map: "innmx_mdl_compevid_con_ix")
  @@index([usermodified], map: "innmx_mdl_compevid_use_ix")
  @@index([usercompetencyid], map: "mdl_compevid_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_framework {
  id                 BigInt  @id @default(autoincrement())
  shortname          String? @db.VarChar(100)
  contextid          BigInt
  idnumber           String? @unique(map: "mdl_compfram_idn_uix") @db.VarChar(100)
  description        String? @db.LongText
  descriptionformat  Int     @default(0) @db.SmallInt
  scaleid            BigInt?
  scaleconfiguration String  @db.LongText
  visible            Int     @default(1) @db.TinyInt
  taxonomies         String  @default("") @db.VarChar(255)
  timecreated        BigInt
  timemodified       BigInt
  usermodified       BigInt?

  @@index([contextid], map: "innmx_mdl_compfram_con_ix")
  @@index([scaleid], map: "innmx_mdl_compfram_sca_ix")
  @@index([usermodified], map: "innmx_mdl_compfram_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_modulecomp {
  id            BigInt  @id @default(autoincrement())
  cmid          BigInt
  timecreated   BigInt
  timemodified  BigInt
  usermodified  BigInt
  sortorder     BigInt
  competencyid  BigInt
  ruleoutcome   Int     @db.TinyInt
  overridegrade Boolean @default(false)

  @@unique([cmid, competencyid], map: "mdl_compmodu_cmicom_uix")
  @@index([usermodified], map: "innmx_mdl_compmodu_use_ix")
  @@index([cmid], map: "mdl_compmodu_cmi_ix")
  @@index([cmid, ruleoutcome], map: "mdl_compmodu_cmirul_ix")
  @@index([competencyid], map: "mdl_compmodu_com_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_plan {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.SmallInt
  userid            BigInt
  templateid        BigInt?
  origtemplateid    BigInt?
  status            Boolean
  duedate           BigInt? @default(0)
  reviewerid        BigInt?
  timecreated       BigInt
  timemodified      BigInt  @default(0)
  usermodified      BigInt

  @@index([usermodified], map: "innmx_mdl_compplan_use_ix")
  @@index([status, duedate], map: "mdl_compplan_stadue_ix")
  @@index([templateid], map: "mdl_compplan_tem_ix")
  @@index([userid, status], map: "mdl_compplan_usesta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_plancomp {
  id           BigInt  @id @default(autoincrement())
  planid       BigInt
  competencyid BigInt
  sortorder    BigInt?
  timecreated  BigInt
  timemodified BigInt?
  usermodified BigInt

  @@unique([planid, competencyid], map: "mdl_compplan_placom_uix")
  @@index([usermodified], map: "innmx_mdl_compplan_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_relatedcomp {
  id                  BigInt  @id @default(autoincrement())
  competencyid        BigInt
  relatedcompetencyid BigInt
  timecreated         BigInt
  timemodified        BigInt?
  usermodified        BigInt

  @@index([competencyid], map: "innmx_mdl_comprela_com_ix")
  @@index([relatedcompetencyid], map: "innmx_mdl_comprela_rel_ix")
  @@index([usermodified], map: "innmx_mdl_comprela_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_template {
  id                BigInt  @id @default(autoincrement())
  shortname         String? @db.VarChar(100)
  contextid         BigInt
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.SmallInt
  visible           Int     @default(1) @db.TinyInt
  duedate           BigInt?
  timecreated       BigInt
  timemodified      BigInt
  usermodified      BigInt?

  @@index([contextid], map: "innmx_mdl_comptemp_con_ix")
  @@index([usermodified], map: "innmx_mdl_comptemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_templatecohort {
  id           BigInt @id @default(autoincrement())
  templateid   BigInt
  cohortid     BigInt
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt

  @@unique([templateid, cohortid], map: "mdl_comptemp_temcoh_uix")
  @@index([usermodified], map: "innmx_mdl_comptemp_use3_ix")
  @@index([templateid], map: "mdl_comptemp_tem2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_templatecomp {
  id           BigInt  @id @default(autoincrement())
  templateid   BigInt
  competencyid BigInt
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt
  sortorder    BigInt?

  @@index([usermodified], map: "innmx_mdl_comptemp_use2_ix")
  @@index([competencyid], map: "mdl_comptemp_com_ix")
  @@index([templateid], map: "mdl_comptemp_tem_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_usercomp {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt
  competencyid BigInt
  status       Int     @default(0) @db.TinyInt
  reviewerid   BigInt?
  proficiency  Int?    @db.TinyInt
  grade        BigInt?
  timecreated  BigInt
  timemodified BigInt?
  usermodified BigInt

  @@unique([userid, competencyid], map: "mdl_compuser_usecom_uix")
  @@index([usermodified], map: "innmx_mdl_compuser_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_usercompcourse {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt
  courseid     BigInt
  competencyid BigInt
  proficiency  Int?    @db.TinyInt
  grade        BigInt?
  timecreated  BigInt
  timemodified BigInt?
  usermodified BigInt

  @@unique([userid, courseid, competencyid], map: "mdl_compuser_usecoucom_uix")
  @@index([usermodified], map: "innmx_mdl_compuser_use3_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_usercompplan {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt
  competencyid BigInt
  planid       BigInt
  proficiency  Int?    @db.TinyInt
  grade        BigInt?
  sortorder    BigInt?
  timecreated  BigInt
  timemodified BigInt?
  usermodified BigInt

  @@unique([userid, competencyid, planid], map: "mdl_compuser_usecompla_uix")
  @@index([usermodified], map: "innmx_mdl_compuser_use4_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_userevidence {
  id                BigInt  @id @default(autoincrement())
  userid            BigInt
  name              String  @default("") @db.VarChar(100)
  description       String  @db.LongText
  descriptionformat Boolean
  url               String  @db.LongText
  timecreated       BigInt
  timemodified      BigInt
  usermodified      BigInt

  @@index([usermodified], map: "innmx_mdl_compuser_use_ix")
  @@index([userid], map: "mdl_compuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_competency_userevidencecomp {
  id             BigInt @id @default(autoincrement())
  userevidenceid BigInt
  competencyid   BigInt
  timecreated    BigInt
  timemodified   BigInt
  usermodified   BigInt

  @@unique([userevidenceid, competencyid], map: "mdl_compuser_usecom2_uix")
  @@index([usermodified], map: "innmx_mdl_compuser_use5_ix")
  @@index([userevidenceid], map: "mdl_compuser_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_config {
  id    BigInt @id @default(autoincrement())
  name  String @unique(map: "mdl_conf_nam_uix") @default("") @db.VarChar(255)
  value String @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_config_log {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt
  timemodified BigInt
  plugin       String? @db.VarChar(100)
  name         String  @default("") @db.VarChar(100)
  value        String? @db.LongText
  oldvalue     String? @db.LongText

  @@index([timemodified], map: "mdl_conflog_tim_ix")
  @@index([userid], map: "mdl_conflog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_config_plugins {
  id     BigInt @id @default(autoincrement())
  plugin String @default("core") @db.VarChar(100)
  name   String @default("") @db.VarChar(100)
  value  String @db.LongText

  @@unique([plugin, name], map: "mdl_confplug_plunam_uix")
}

model innmx_mdl_contentbank_content {
  id           BigInt  @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  contenttype  String  @default("") @db.VarChar(100)
  contextid    BigInt
  visibility   Boolean @default(true)
  instanceid   BigInt?
  configdata   String? @db.LongText
  usercreated  BigInt
  usermodified BigInt?
  timecreated  BigInt  @default(0)
  timemodified BigInt? @default(0)

  @@index([contextid], map: "mdl_contcont_con_ix")
  @@index([contextid, contenttype, instanceid], map: "mdl_contcont_conconins_ix")
  @@index([name], map: "mdl_contcont_nam_ix")
  @@index([usercreated], map: "mdl_contcont_use2_ix")
  @@index([usermodified], map: "mdl_contcont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_context {
  id           BigInt  @id @default(autoincrement())
  contextlevel BigInt  @default(0)
  instanceid   BigInt  @default(0)
  path         String? @db.VarChar(255)
  depth        Int     @default(0) @db.TinyInt
  locked       Int     @default(0) @db.TinyInt

  @@unique([contextlevel, instanceid], map: "mdl_cont_conins_uix")
  @@index([instanceid], map: "mdl_cont_ins_ix")
  @@index([path], map: "mdl_cont_pat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_context_temp {
  id     BigInt @id
  path   String @default("") @db.VarChar(255)
  depth  Int    @db.TinyInt
  locked Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course {
  id                       BigInt   @id @default(autoincrement())
  category                 BigInt   @default(0)
  sortorder                BigInt   @default(0)
  fullname                 String   @default("") @db.VarChar(254)
  shortname                String   @default("") @db.VarChar(255)
  idnumber                 String   @default("") @db.VarChar(100)
  summary                  String?  @db.LongText
  summaryformat            Int      @default(0) @db.TinyInt
  format                   String   @default("topics") @db.VarChar(21)
  showgrades               Int      @default(1) @db.TinyInt
  newsitems                Int      @default(1) @db.MediumInt
  startdate                BigInt   @default(0)
  enddate                  BigInt   @default(0)
  relativedatesmode        Boolean  @default(false)
  marker                   BigInt   @default(0)
  maxbytes                 BigInt   @default(0)
  legacyfiles              Int      @default(0) @db.SmallInt
  showreports              Int      @default(0) @db.SmallInt
  visible                  Boolean  @default(true)
  visibleold               Boolean  @default(true)
  downloadcontent          Boolean?
  groupmode                Int      @default(0) @db.SmallInt
  groupmodeforce           Int      @default(0) @db.SmallInt
  defaultgroupingid        BigInt   @default(0)
  lang                     String   @default("") @db.VarChar(30)
  calendartype             String   @default("") @db.VarChar(30)
  theme                    String   @default("") @db.VarChar(50)
  timecreated              BigInt   @default(0)
  timemodified             BigInt   @default(0)
  requested                Boolean  @default(false)
  enablecompletion         Boolean  @default(false)
  completionnotify         Boolean  @default(false)
  cacherev                 BigInt   @default(0)
  originalcourseid         BigInt?
  showactivitydates        Boolean  @default(false)
  showcompletionconditions Boolean?

  @@index([originalcourseid], map: "innmx_mdl_cour_ori_ix")
  @@index([category], map: "mdl_cour_cat_ix")
  @@index([idnumber], map: "mdl_cour_idn_ix")
  @@index([shortname], map: "mdl_cour_sho_ix")
  @@index([sortorder], map: "mdl_cour_sor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_categories {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("") @db.VarChar(255)
  idnumber          String? @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  parent            BigInt  @default(0)
  sortorder         BigInt  @default(0)
  coursecount       BigInt  @default(0)
  visible           Boolean @default(true)
  visibleold        Boolean @default(true)
  timemodified      BigInt  @default(0)
  depth             BigInt  @default(0)
  path              String  @default("") @db.VarChar(255)
  theme             String? @db.VarChar(50)

  @@index([parent], map: "mdl_courcate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_completion_aggr_methd {
  id           BigInt   @id @default(autoincrement())
  course       BigInt   @default(0)
  criteriatype BigInt?
  method       Boolean  @default(false)
  value        Decimal? @db.Decimal(10, 5)

  @@unique([course, criteriatype], map: "mdl_courcompaggrmeth_coucr_uix")
  @@index([course], map: "mdl_courcompaggrmeth_cou_ix")
  @@index([criteriatype], map: "mdl_courcompaggrmeth_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_completion_crit_compl {
  id            BigInt   @id @default(autoincrement())
  userid        BigInt   @default(0)
  course        BigInt   @default(0)
  criteriaid    BigInt   @default(0)
  gradefinal    Decimal? @db.Decimal(10, 5)
  unenroled     BigInt?
  timecompleted BigInt?

  @@unique([userid, course, criteriaid], map: "mdl_courcompcritcomp_useco_uix")
  @@index([course], map: "mdl_courcompcritcomp_cou_ix")
  @@index([criteriaid], map: "mdl_courcompcritcomp_cri_ix")
  @@index([timecompleted], map: "mdl_courcompcritcomp_tim_ix")
  @@index([userid], map: "mdl_courcompcritcomp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_completion_criteria {
  id             BigInt   @id @default(autoincrement())
  course         BigInt   @default(0)
  criteriatype   BigInt   @default(0)
  module         String?  @db.VarChar(100)
  moduleinstance BigInt?
  courseinstance BigInt?
  enrolperiod    BigInt?
  timeend        BigInt?
  gradepass      Decimal? @db.Decimal(10, 5)
  role           BigInt?

  @@index([course], map: "mdl_courcompcrit_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_completion_defaults {
  id                  BigInt  @id @default(autoincrement())
  course              BigInt
  module              BigInt
  completion          Boolean @default(false)
  completionview      Boolean @default(false)
  completionusegrade  Boolean @default(false)
  completionpassgrade Boolean @default(false)
  completionexpected  BigInt  @default(0)
  customrules         String? @db.LongText

  @@unique([course, module], map: "mdl_courcompdefa_coumod_uix")
  @@index([course], map: "mdl_courcompdefa_cou_ix")
  @@index([module], map: "mdl_courcompdefa_mod_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_completions {
  id            BigInt  @id @default(autoincrement())
  userid        BigInt  @default(0)
  course        BigInt  @default(0)
  timeenrolled  BigInt  @default(0)
  timestarted   BigInt  @default(0)
  timecompleted BigInt?
  reaggregate   BigInt  @default(0)

  @@unique([userid, course], map: "mdl_courcomp_usecou_uix")
  @@index([course], map: "mdl_courcomp_cou_ix")
  @@index([timecompleted], map: "mdl_courcomp_tim_ix")
  @@index([userid], map: "mdl_courcomp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_format_options {
  id        BigInt  @id @default(autoincrement())
  courseid  BigInt
  format    String  @default("") @db.VarChar(21)
  sectionid BigInt  @default(0)
  name      String  @default("") @db.VarChar(100)
  value     String? @db.LongText

  @@unique([courseid, format, sectionid, name], map: "mdl_courformopti_couforsec_uix")
  @@index([courseid], map: "mdl_courformopti_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_modules {
  id                        BigInt   @id @default(autoincrement())
  course                    BigInt   @default(0)
  module                    BigInt   @default(0)
  instance                  BigInt   @default(0)
  section                   BigInt   @default(0)
  idnumber                  String?  @db.VarChar(100)
  added                     BigInt   @default(0)
  score                     Int      @default(0) @db.SmallInt
  indent                    Int      @default(0) @db.MediumInt
  visible                   Boolean  @default(true)
  visibleoncoursepage       Boolean  @default(true)
  visibleold                Boolean  @default(true)
  groupmode                 Int      @default(0) @db.SmallInt
  groupingid                BigInt   @default(0)
  completion                Boolean  @default(false)
  completiongradeitemnumber BigInt?
  completionview            Boolean  @default(false)
  completionexpected        BigInt   @default(0)
  completionpassgrade       Boolean  @default(false)
  showdescription           Boolean  @default(false)
  availability              String?  @db.LongText
  deletioninprogress        Boolean  @default(false)
  downloadcontent           Boolean? @default(true)
  lang                      String?  @db.VarChar(30)

  @@index([course], map: "mdl_courmodu_cou_ix")
  @@index([groupingid], map: "mdl_courmodu_gro_ix")
  @@index([idnumber, course], map: "mdl_courmodu_idncou_ix")
  @@index([instance], map: "mdl_courmodu_ins_ix")
  @@index([module], map: "mdl_courmodu_mod_ix")
  @@index([visible], map: "mdl_courmodu_vis_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_modules_completion {
  id              BigInt  @id @default(autoincrement())
  coursemoduleid  BigInt
  userid          BigInt
  completionstate Boolean
  overrideby      BigInt?
  timemodified    BigInt

  @@unique([userid, coursemoduleid], map: "mdl_courmoducomp_usecou_uix")
  @@index([coursemoduleid], map: "mdl_courmoducomp_cou_ix")
}

model innmx_mdl_course_modules_viewed {
  id             BigInt @id @default(autoincrement())
  coursemoduleid BigInt
  userid         BigInt
  timecreated    BigInt

  @@unique([userid, coursemoduleid], map: "innmx_mdl_courmoduview_use_uix")
  @@index([coursemoduleid], map: "innmx_mdl_courmoduview_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_published {
  id            BigInt   @id @default(autoincrement())
  huburl        String?  @db.VarChar(255)
  courseid      BigInt
  timepublished BigInt
  enrollable    Boolean  @default(true)
  hubcourseid   BigInt
  status        Boolean? @default(false)
  timechecked   BigInt?

  @@index([courseid], map: "innmx_mdl_courpubl_cou_ix")
  @@index([hubcourseid], map: "innmx_mdl_courpubl_hub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_request {
  id            BigInt @id @default(autoincrement())
  fullname      String @default("") @db.VarChar(254)
  shortname     String @default("") @db.VarChar(100)
  summary       String @db.LongText
  summaryformat Int    @default(0) @db.TinyInt
  category      BigInt @default(0)
  reason        String @db.LongText
  requester     BigInt @default(0)
  password      String @default("") @db.VarChar(50)

  @@index([shortname], map: "mdl_courrequ_sho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_course_sections {
  id            BigInt  @id @default(autoincrement())
  course        BigInt  @default(0)
  section       BigInt  @default(0)
  name          String? @db.VarChar(255)
  summary       String? @db.LongText
  summaryformat Int     @default(0) @db.TinyInt
  sequence      String? @db.LongText
  visible       Boolean @default(true)
  availability  String? @db.LongText
  timemodified  BigInt  @default(0)

  @@unique([course, section], map: "mdl_coursect_cousec_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_customcert {
  id            BigInt  @id @default(autoincrement())
  course        BigInt  @default(0)
  templateid    BigInt  @default(0)
  name          String  @default("") @db.VarChar(255)
  intro         String? @db.LongText
  introformat   Int     @default(0) @db.SmallInt
  requiredtime  BigInt  @default(0)
  verifyany     BigInt  @default(0)
  emailstudents Boolean @default(false)
  emailteachers Boolean @default(false)
  emailothers   String? @db.LongText
  protection    String  @default("") @db.VarChar(255)
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)

  @@index([templateid], map: "mdl_cust_tem_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_customcert_elements {
  id           BigInt  @id @default(autoincrement())
  pageid       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  element      String  @default("") @db.VarChar(255)
  data         String? @db.LongText
  font         String? @db.VarChar(255)
  fontsize     BigInt?
  colour       String? @db.VarChar(50)
  posx         BigInt?
  posy         BigInt?
  width        BigInt?
  refpoint     Int?    @db.SmallInt
  sequence     BigInt?
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([pageid], map: "mdl_custelem_pag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_customcert_issues {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt  @default(0)
  customcertid BigInt  @default(0)
  code         String? @db.VarChar(40)
  emailed      Boolean @default(false)
  timecreated  BigInt  @default(0)

  @@index([customcertid], map: "mdl_custissu_cus_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_customcert_pages {
  id           BigInt  @id @default(autoincrement())
  templateid   BigInt  @default(0)
  width        BigInt  @default(0)
  height       BigInt  @default(0)
  leftmargin   BigInt  @default(0)
  rightmargin  BigInt  @default(0)
  sequence     BigInt?
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([templateid], map: "mdl_custpage_tem_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_customcert_templates {
  id           BigInt  @id @default(autoincrement())
  name         String? @db.VarChar(255)
  contextid    BigInt
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([contextid], map: "mdl_custtemp_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_customfield_category {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("") @db.VarChar(400)
  description       String? @db.LongText
  descriptionformat BigInt?
  sortorder         BigInt?
  timecreated       BigInt
  timemodified      BigInt
  component         String  @default("") @db.VarChar(100)
  area              String  @default("") @db.VarChar(100)
  itemid            BigInt  @default(0)
  contextid         BigInt?

  @@index([component, area, itemid, sortorder], map: "mdl_custcate_comareitesor_ix")
  @@index([contextid], map: "mdl_custcate_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_customfield_data {
  id             BigInt   @id @default(autoincrement())
  fieldid        BigInt
  instanceid     BigInt
  intvalue       BigInt?
  decvalue       Decimal? @db.Decimal(10, 5)
  shortcharvalue String?  @db.VarChar(255)
  charvalue      String?  @db.VarChar(1333)
  value          String   @db.LongText
  valueformat    BigInt
  timecreated    BigInt
  timemodified   BigInt
  contextid      BigInt?

  @@unique([instanceid, fieldid], map: "mdl_custdata_insfie_uix")
  @@index([contextid], map: "mdl_custdata_con_ix")
  @@index([fieldid], map: "mdl_custdata_fie_ix")
  @@index([fieldid, decvalue], map: "mdl_custdata_fiedec_ix")
  @@index([fieldid, intvalue], map: "mdl_custdata_fieint_ix")
  @@index([fieldid, shortcharvalue], map: "mdl_custdata_fiesho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_customfield_field {
  id                BigInt  @id @default(autoincrement())
  shortname         String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(400)
  type              String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat BigInt?
  sortorder         BigInt?
  categoryid        BigInt?
  configdata        String? @db.LongText
  timecreated       BigInt
  timemodified      BigInt

  @@index([categoryid], map: "mdl_custfiel_cat_ix")
  @@index([categoryid, sortorder], map: "mdl_custfiel_catsor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_data {
  id                    BigInt  @id @default(autoincrement())
  course                BigInt  @default(0)
  name                  String  @default("") @db.VarChar(255)
  intro                 String  @db.LongText
  introformat           Int     @default(0) @db.SmallInt
  comments              Int     @default(0) @db.SmallInt
  timeavailablefrom     BigInt  @default(0)
  timeavailableto       BigInt  @default(0)
  timeviewfrom          BigInt  @default(0)
  timeviewto            BigInt  @default(0)
  requiredentries       Int     @default(0)
  requiredentriestoview Int     @default(0)
  maxentries            Int     @default(0)
  rssarticles           Int     @default(0) @db.SmallInt
  singletemplate        String? @db.LongText
  listtemplate          String? @db.LongText
  listtemplateheader    String? @db.LongText
  listtemplatefooter    String? @db.LongText
  addtemplate           String? @db.LongText
  rsstemplate           String? @db.LongText
  rsstitletemplate      String? @db.LongText
  csstemplate           String? @db.LongText
  jstemplate            String? @db.LongText
  asearchtemplate       String? @db.LongText
  approval              Int     @default(0) @db.SmallInt
  manageapproved        Int     @default(1) @db.SmallInt
  scale                 BigInt  @default(0)
  assessed              BigInt  @default(0)
  assesstimestart       BigInt  @default(0)
  assesstimefinish      BigInt  @default(0)
  defaultsort           BigInt  @default(0)
  defaultsortdir        Int     @default(0) @db.SmallInt
  editany               Int     @default(0) @db.SmallInt
  notification          BigInt  @default(0)
  timemodified          BigInt  @default(0)
  config                String? @db.LongText
  completionentries     BigInt? @default(0)

  @@index([course], map: "mdl_data_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_data_content {
  id       BigInt  @id @default(autoincrement())
  fieldid  BigInt  @default(0)
  recordid BigInt  @default(0)
  content  String? @db.LongText
  content1 String? @db.LongText
  content2 String? @db.LongText
  content3 String? @db.LongText
  content4 String? @db.LongText

  @@index([fieldid], map: "mdl_datacont_fie_ix")
  @@index([recordid], map: "mdl_datacont_rec_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_data_fields {
  id          BigInt  @id @default(autoincrement())
  dataid      BigInt  @default(0)
  type        String  @default("") @db.VarChar(255)
  name        String  @default("") @db.VarChar(255)
  description String  @db.LongText
  required    Boolean @default(false)
  param1      String? @db.LongText
  param2      String? @db.LongText
  param3      String? @db.LongText
  param4      String? @db.LongText
  param5      String? @db.LongText
  param6      String? @db.LongText
  param7      String? @db.LongText
  param8      String? @db.LongText
  param9      String? @db.LongText
  param10     String? @db.LongText

  @@index([dataid], map: "mdl_datafiel_dat_ix")
  @@index([type, dataid], map: "mdl_datafiel_typdat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_data_records {
  id           BigInt @id @default(autoincrement())
  userid       BigInt @default(0)
  groupid      BigInt @default(0)
  dataid       BigInt @default(0)
  timecreated  BigInt @default(0)
  timemodified BigInt @default(0)
  approved     Int    @default(0) @db.SmallInt

  @@index([userid], map: "innmx_mdl_datareco_use_ix")
  @@index([dataid], map: "mdl_datareco_dat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_editor_atto_autosave {
  id           BigInt  @id @default(autoincrement())
  elementid    String  @default("") @db.VarChar(255)
  contextid    BigInt
  pagehash     String  @default("") @db.VarChar(64)
  userid       BigInt
  drafttext    String  @db.LongText
  draftid      BigInt?
  pageinstance String  @default("") @db.VarChar(64)
  timemodified BigInt  @default(0)

  @@unique([elementid, contextid, userid, pagehash], map: "mdl_editattoauto_eleconuse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol {
  id              BigInt   @id @default(autoincrement())
  enrol           String   @default("") @db.VarChar(20)
  status          BigInt   @default(0)
  courseid        BigInt
  sortorder       BigInt   @default(0)
  name            String?  @db.VarChar(255)
  enrolperiod     BigInt?  @default(0)
  enrolstartdate  BigInt?  @default(0)
  enrolenddate    BigInt?  @default(0)
  expirynotify    Boolean? @default(false)
  expirythreshold BigInt?  @default(0)
  notifyall       Boolean? @default(false)
  password        String?  @db.VarChar(50)
  cost            String?  @db.VarChar(20)
  currency        String?  @db.VarChar(3)
  roleid          BigInt?  @default(0)
  customint1      BigInt?
  customint2      BigInt?
  customint3      BigInt?
  customint4      BigInt?
  customint5      BigInt?
  customint6      BigInt?
  customint7      BigInt?
  customint8      BigInt?
  customchar1     String?  @db.VarChar(255)
  customchar2     String?  @db.VarChar(255)
  customchar3     String?  @db.VarChar(1333)
  customdec1      Decimal? @db.Decimal(12, 7)
  customdec2      Decimal? @db.Decimal(12, 7)
  customtext1     String?  @db.LongText
  customtext2     String?  @db.LongText
  customtext3     String?  @db.LongText
  customtext4     String?  @db.LongText
  timecreated     BigInt   @default(0)
  timemodified    BigInt   @default(0)

  @@index([roleid], map: "innmx_mdl_enro_rol_ix")
  @@index([courseid], map: "mdl_enro_cou_ix")
  @@index([enrol], map: "mdl_enro_enr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_flatfile {
  id           BigInt @id @default(autoincrement())
  action       String @default("") @db.VarChar(30)
  roleid       BigInt
  userid       BigInt
  courseid     BigInt
  timestart    BigInt @default(0)
  timeend      BigInt @default(0)
  timemodified BigInt @default(0)

  @@index([courseid], map: "mdl_enroflat_cou_ix")
  @@index([roleid], map: "mdl_enroflat_rol_ix")
  @@index([userid], map: "mdl_enroflat_use_ix")
}

model innmx_mdl_enrol_lti_app_registration {
  id                       BigInt  @id @default(autoincrement())
  name                     String  @default("") @db.VarChar(255)
  platformid               String? @db.LongText
  clientid                 String? @db.VarChar(1333)
  platformclienthash       String? @unique(map: "innmx_mdl_enroltiappregi_2_uix") @db.VarChar(64)
  authenticationrequesturl String? @db.LongText
  jwksurl                  String? @db.LongText
  accesstokenurl           String? @db.LongText
  uniqueid                 String  @unique(map: "innmx_mdl_enroltiappregi_u_uix") @default("") @db.VarChar(255)
  status                   Boolean @default(false)
  platformuniqueidhash     String? @unique(map: "innmx_mdl_enroltiappregi_3_uix") @db.VarChar(64)
  timecreated              BigInt
  timemodified             BigInt
}

model innmx_mdl_enrol_lti_context {
  id              BigInt  @id @default(autoincrement())
  contextid       String  @default("") @db.VarChar(255)
  ltideploymentid BigInt
  type            String? @db.LongText
  timecreated     BigInt
  timemodified    BigInt

  @@unique([ltideploymentid, contextid], map: "innmx_mdl_enrolticont_ltic_uix")
  @@index([ltideploymentid], map: "innmx_mdl_enrolticont_lti_ix")
}

model innmx_mdl_enrol_lti_deployment {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("") @db.VarChar(255)
  deploymentid      String  @default("") @db.VarChar(255)
  platformid        BigInt
  legacyconsumerkey String? @db.VarChar(255)
  timecreated       BigInt
  timemodified      BigInt

  @@unique([platformid, deploymentid], map: "innmx_mdl_enroltidepl_plad_uix")
  @@index([platformid], map: "innmx_mdl_enroltidepl_pla_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_lti2_consumer {
  id              BigInt  @id @default(autoincrement())
  name            String  @default("") @db.VarChar(50)
  consumerkey256  String  @unique(map: "mdl_enroltilti2cons_con_uix") @default("") @db.VarChar(255)
  consumerkey     String? @db.LongText
  secret          String  @default("") @db.VarChar(1024)
  ltiversion      String? @db.VarChar(10)
  consumername    String? @db.VarChar(255)
  consumerversion String? @db.VarChar(255)
  consumerguid    String? @db.VarChar(1024)
  profile         String? @db.LongText
  toolproxy       String? @db.LongText
  settings        String? @db.LongText
  protected       Boolean
  enabled         Boolean
  enablefrom      BigInt?
  enableuntil     BigInt?
  lastaccess      BigInt?
  created         BigInt
  updated         BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_lti2_context {
  id            BigInt  @id @default(autoincrement())
  consumerid    BigInt
  lticontextkey String  @default("") @db.VarChar(255)
  type          String? @db.VarChar(100)
  settings      String? @db.LongText
  created       BigInt
  updated       BigInt

  @@index([consumerid], map: "mdl_enroltilti2cont_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_lti2_nonce {
  id         BigInt @id @default(autoincrement())
  consumerid BigInt
  value      String @default("") @db.VarChar(64)
  expires    BigInt

  @@index([consumerid], map: "mdl_enroltilti2nonc_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_lti2_resource_link {
  id                    BigInt   @id @default(autoincrement())
  contextid             BigInt?
  consumerid            BigInt?
  ltiresourcelinkkey    String   @default("") @db.VarChar(255)
  settings              String?  @db.LongText
  primaryresourcelinkid BigInt?
  shareapproved         Boolean?
  created               BigInt
  updated               BigInt

  @@index([consumerid], map: "mdl_enroltilti2resolink_co2_ix")
  @@index([contextid], map: "mdl_enroltilti2resolink_con_ix")
  @@index([primaryresourcelinkid], map: "mdl_enroltilti2resolink_pri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_lti2_share_key {
  id             BigInt  @id @default(autoincrement())
  sharekey       String  @unique(map: "mdl_enroltilti2sharkey_sha_uix") @default("") @db.VarChar(32)
  resourcelinkid BigInt  @unique(map: "mdl_enroltilti2sharkey_res_uix")
  autoapprove    Boolean
  expires        BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_lti2_tool_proxy {
  id           BigInt @id @default(autoincrement())
  toolproxykey String @unique(map: "mdl_enroltilti2toolprox_to_uix") @default("") @db.VarChar(32)
  consumerid   BigInt
  toolproxy    String @db.LongText
  created      BigInt
  updated      BigInt

  @@index([consumerid], map: "mdl_enroltilti2toolprox_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_lti2_user_result {
  id                 BigInt @id @default(autoincrement())
  resourcelinkid     BigInt
  ltiuserkey         String @default("") @db.VarChar(255)
  ltiresultsourcedid String @default("") @db.VarChar(1024)
  created            BigInt
  updated            BigInt

  @@index([resourcelinkid], map: "mdl_enroltilti2userresu_res_ix")
}

model innmx_mdl_enrol_lti_resource_link {
  id                    BigInt  @id @default(autoincrement())
  resourcelinkid        String  @default("") @db.VarChar(255)
  resourceid            BigInt
  ltideploymentid       BigInt
  lticontextid          BigInt?
  lineitemsservice      String? @db.VarChar(1333)
  lineitemservice       String? @db.VarChar(1333)
  lineitemscope         String? @db.VarChar(255)
  resultscope           String? @db.VarChar(255)
  scorescope            String? @db.VarChar(255)
  contextmembershipsurl String? @db.VarChar(1333)
  nrpsserviceversions   String? @db.VarChar(255)
  timecreated           BigInt
  timemodified          BigInt

  @@unique([resourcelinkid, ltideploymentid], map: "innmx_mdl_enroltiresolink__uix")
  @@index([lticontextid], map: "innmx_mdl_enroltiresolink_2_ix")
  @@index([ltideploymentid], map: "innmx_mdl_enroltiresolink_l_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_tool_consumer_map {
  id         BigInt @id @default(autoincrement())
  toolid     BigInt
  consumerid BigInt

  @@index([consumerid], map: "mdl_enroltitoolconsmap_con_ix")
  @@index([toolid], map: "mdl_enroltitoolconsmap_too_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_tools {
  id                         BigInt  @id @default(autoincrement())
  enrolid                    BigInt
  contextid                  BigInt
  ltiversion                 String  @default("LTI-1p3") @db.VarChar(15)
  uuid                       String? @unique(map: "innmx_mdl_enroltitool_uui_uix") @db.VarChar(36)
  provisioningmodelearner    Int?    @db.TinyInt
  provisioningmodeinstructor Int?    @db.TinyInt
  institution                String  @default("") @db.VarChar(40)
  lang                       String  @default("en") @db.VarChar(30)
  timezone                   String  @default("99") @db.VarChar(100)
  maxenrolled                BigInt  @default(0)
  maildisplay                Int     @default(2) @db.TinyInt
  city                       String  @default("") @db.VarChar(120)
  country                    String  @default("") @db.VarChar(2)
  gradesync                  Boolean @default(false)
  gradesynccompletion        Boolean @default(false)
  membersync                 Boolean @default(false)
  membersyncmode             Boolean @default(false)
  roleinstructor             BigInt
  rolelearner                BigInt
  secret                     String? @db.LongText
  timecreated                BigInt
  timemodified               BigInt

  @@index([contextid], map: "mdl_enroltitool_con_ix")
  @@index([enrolid], map: "mdl_enroltitool_enr_ix")
}

model innmx_mdl_enrol_lti_user_resource_link {
  id             BigInt @id @default(autoincrement())
  ltiuserid      BigInt
  resourcelinkid BigInt

  @@unique([ltiuserid, resourcelinkid], map: "innmx_mdl_enroltiuserresol_uix")
  @@index([resourcelinkid], map: "innmx_mdl_enroltiuserresol2_ix")
  @@index([ltiuserid], map: "innmx_mdl_enroltiuserresoli_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_lti_users {
  id              BigInt   @id @default(autoincrement())
  userid          BigInt
  toolid          BigInt
  serviceurl      String?  @db.LongText
  sourceid        String?  @db.LongText
  ltideploymentid BigInt?
  consumerkey     String?  @db.LongText
  consumersecret  String?  @db.LongText
  membershipsurl  String?  @db.LongText
  membershipsid   String?  @db.LongText
  lastgrade       Decimal? @db.Decimal(10, 5)
  lastaccess      BigInt?
  timecreated     BigInt?

  @@index([ltideploymentid], map: "innmx_mdl_enroltiuser_lti_ix")
  @@index([toolid], map: "mdl_enroltiuser_too_ix")
  @@index([userid], map: "mdl_enroltiuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_enrol_paypal {
  id                  BigInt @id @default(autoincrement())
  business            String @default("") @db.VarChar(255)
  receiver_email      String @default("") @db.VarChar(255)
  receiver_id         String @default("") @db.VarChar(255)
  item_name           String @default("") @db.VarChar(255)
  courseid            BigInt @default(0)
  userid              BigInt @default(0)
  instanceid          BigInt @default(0)
  memo                String @default("") @db.VarChar(255)
  tax                 String @default("") @db.VarChar(255)
  option_name1        String @default("") @db.VarChar(255)
  option_selection1_x String @default("") @db.VarChar(255)
  option_name2        String @default("") @db.VarChar(255)
  option_selection2_x String @default("") @db.VarChar(255)
  payment_status      String @default("") @db.VarChar(255)
  pending_reason      String @default("") @db.VarChar(255)
  reason_code         String @default("") @db.VarChar(30)
  txn_id              String @default("") @db.VarChar(255)
  parent_txn_id       String @default("") @db.VarChar(255)
  payment_type        String @default("") @db.VarChar(30)
  timeupdated         BigInt @default(0)

  @@index([business], map: "mdl_enropayp_bus_ix")
  @@index([courseid], map: "mdl_enropayp_cou_ix")
  @@index([instanceid], map: "mdl_enropayp_ins_ix")
  @@index([receiver_email], map: "mdl_enropayp_rec_ix")
  @@index([userid], map: "mdl_enropayp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_event {
  id             BigInt  @id @default(autoincrement())
  name           String  @db.LongText
  description    String  @db.LongText
  format         Int     @default(0) @db.SmallInt
  categoryid     BigInt  @default(0)
  courseid       BigInt  @default(0)
  groupid        BigInt  @default(0)
  userid         BigInt  @default(0)
  repeatid       BigInt  @default(0)
  component      String? @db.VarChar(100)
  modulename     String  @default("") @db.VarChar(20)
  instance       BigInt  @default(0)
  type           Int     @default(0) @db.SmallInt
  eventtype      String  @default("") @db.VarChar(20)
  timestart      BigInt  @default(0)
  timeduration   BigInt  @default(0)
  timesort       BigInt?
  visible        Int     @default(1) @db.SmallInt
  uuid           String  @default("") @db.VarChar(255)
  sequence       BigInt  @default(1)
  timemodified   BigInt  @default(0)
  subscriptionid BigInt?
  priority       BigInt?
  location       String? @db.LongText

  @@index([categoryid], map: "mdl_even_cat_ix")
  @@index([component, eventtype, instance], map: "mdl_even_comeveins_ix")
  @@index([courseid], map: "mdl_even_cou_ix")
  @@index([eventtype], map: "mdl_even_eve_ix")
  @@index([groupid, courseid, categoryid, visible, userid], map: "mdl_even_grocoucatvisuse_ix")
  @@index([modulename, instance, eventtype], map: "mdl_even_modinseve_ix")
  @@index([subscriptionid], map: "mdl_even_sub_ix")
  @@index([timeduration], map: "mdl_even_tim2_ix")
  @@index([timestart], map: "mdl_even_tim_ix")
  @@index([type, timesort], map: "mdl_even_typtim_ix")
  @@index([userid], map: "mdl_even_use_ix")
  @@index([uuid], map: "mdl_even_uui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_event_subscriptions {
  id           BigInt  @id @default(autoincrement())
  url          String  @default("") @db.VarChar(255)
  categoryid   BigInt  @default(0)
  courseid     BigInt  @default(0)
  groupid      BigInt  @default(0)
  userid       BigInt  @default(0)
  eventtype    String  @default("") @db.VarChar(20)
  pollinterval BigInt  @default(0)
  lastupdated  BigInt?
  name         String  @default("") @db.VarChar(255)

  @@index([courseid], map: "innmx_mdl_evensubs_cou_ix")
  @@index([userid], map: "innmx_mdl_evensubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_events_handlers {
  id              BigInt  @id @default(autoincrement())
  eventname       String  @default("") @db.VarChar(166)
  component       String  @default("") @db.VarChar(166)
  handlerfile     String  @default("") @db.VarChar(255)
  handlerfunction String? @db.LongText
  schedule        String? @db.VarChar(255)
  status          BigInt  @default(0)
  internal        Int     @default(1) @db.TinyInt

  @@unique([eventname, component], map: "mdl_evenhand_evecom_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_events_queue {
  id          BigInt  @id @default(autoincrement())
  eventdata   String  @db.LongText
  stackdump   String? @db.LongText
  userid      BigInt?
  timecreated BigInt

  @@index([userid], map: "mdl_evenqueu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_events_queue_handlers {
  id            BigInt  @id @default(autoincrement())
  queuedeventid BigInt
  handlerid     BigInt
  status        BigInt?
  errormessage  String? @db.LongText
  timemodified  BigInt

  @@index([handlerid], map: "mdl_evenqueuhand_han_ix")
  @@index([queuedeventid], map: "mdl_evenqueuhand_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_external_functions {
  id           BigInt  @id @default(autoincrement())
  name         String  @unique(map: "mdl_extefunc_nam_uix") @default("") @db.VarChar(200)
  classname    String  @default("") @db.VarChar(100)
  methodname   String  @default("") @db.VarChar(100)
  classpath    String? @db.VarChar(255)
  component    String  @default("") @db.VarChar(100)
  capabilities String? @db.VarChar(255)
  services     String? @db.VarChar(1333)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_external_services {
  id                 BigInt  @id @default(autoincrement())
  name               String  @unique(map: "mdl_exteserv_nam_uix") @default("") @db.VarChar(200)
  enabled            Boolean
  requiredcapability String? @db.VarChar(150)
  restrictedusers    Boolean
  component          String? @db.VarChar(100)
  timecreated        BigInt
  timemodified       BigInt?
  shortname          String? @db.VarChar(255)
  downloadfiles      Boolean @default(false)
  uploadfiles        Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_external_services_functions {
  id                BigInt @id @default(autoincrement())
  externalserviceid BigInt
  functionname      String @default("") @db.VarChar(200)

  @@index([externalserviceid], map: "mdl_exteservfunc_ext_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_external_services_users {
  id                BigInt  @id @default(autoincrement())
  externalserviceid BigInt
  userid            BigInt
  iprestriction     String? @db.VarChar(255)
  validuntil        BigInt?
  timecreated       BigInt?

  @@index([externalserviceid], map: "mdl_exteservuser_ext_ix")
  @@index([userid], map: "mdl_exteservuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_external_tokens {
  id                BigInt  @id @default(autoincrement())
  token             String  @default("") @db.VarChar(128)
  privatetoken      String? @db.VarChar(64)
  tokentype         Int     @db.SmallInt
  userid            BigInt
  externalserviceid BigInt
  sid               String? @db.VarChar(128)
  contextid         BigInt
  creatorid         BigInt  @default(1)
  iprestriction     String? @db.VarChar(255)
  validuntil        BigInt?
  timecreated       BigInt
  lastaccess        BigInt?

  @@index([sid], map: "innmx_mdl_extetoke_sid_ix")
  @@index([contextid], map: "mdl_extetoke_con_ix")
  @@index([creatorid], map: "mdl_extetoke_cre_ix")
  @@index([externalserviceid], map: "mdl_extetoke_ext_ix")
  @@index([token], map: "mdl_extetoke_tok_ix")
  @@index([userid], map: "mdl_extetoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_favourite {
  id           BigInt  @id @default(autoincrement())
  component    String  @default("") @db.VarChar(100)
  itemtype     String  @default("") @db.VarChar(100)
  itemid       BigInt
  contextid    BigInt
  userid       BigInt
  ordering     BigInt?
  timecreated  BigInt
  timemodified BigInt

  @@unique([component, itemtype, itemid, contextid, userid], map: "mdl_favo_comiteiteconuse_uix")
  @@index([contextid], map: "mdl_favo_con_ix")
  @@index([userid], map: "mdl_favo_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_feedback {
  id                      BigInt  @id @default(autoincrement())
  course                  BigInt  @default(0)
  name                    String  @default("") @db.VarChar(255)
  intro                   String  @db.LongText
  introformat             Int     @default(0) @db.SmallInt
  anonymous               Boolean @default(true)
  email_notification      Boolean @default(true)
  multiple_submit         Boolean @default(true)
  autonumbering           Boolean @default(true)
  site_after_submit       String  @default("") @db.VarChar(255)
  page_after_submit       String  @db.LongText
  page_after_submitformat Int     @default(0) @db.TinyInt
  publish_stats           Boolean @default(false)
  timeopen                BigInt  @default(0)
  timeclose               BigInt  @default(0)
  timemodified            BigInt  @default(0)
  completionsubmit        Boolean @default(false)

  @@index([course], map: "mdl_feed_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_feedback_completed {
  id                 BigInt  @id @default(autoincrement())
  feedback           BigInt  @default(0)
  userid             BigInt  @default(0)
  timemodified       BigInt  @default(0)
  random_response    BigInt  @default(0)
  anonymous_response Boolean @default(false)
  courseid           BigInt  @default(0)

  @@index([courseid], map: "innmx_mdl_feedcomp_cou_ix")
  @@index([feedback], map: "mdl_feedcomp_fee_ix")
  @@index([userid], map: "mdl_feedcomp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_feedback_completedtmp {
  id                 BigInt  @id @default(autoincrement())
  feedback           BigInt  @default(0)
  userid             BigInt  @default(0)
  guestid            String  @default("") @db.VarChar(255)
  timemodified       BigInt  @default(0)
  random_response    BigInt  @default(0)
  anonymous_response Boolean @default(false)
  courseid           BigInt  @default(0)

  @@index([feedback], map: "mdl_feedcomp_fee2_ix")
  @@index([userid], map: "mdl_feedcomp_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_feedback_item {
  id           BigInt  @id @default(autoincrement())
  feedback     BigInt  @default(0)
  template     BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  label        String  @default("") @db.VarChar(255)
  presentation String  @db.LongText
  typ          String  @default("") @db.VarChar(255)
  hasvalue     Boolean @default(false)
  position     Int     @default(0) @db.SmallInt
  required     Boolean @default(false)
  dependitem   BigInt  @default(0)
  dependvalue  String  @default("") @db.VarChar(255)
  options      String  @default("") @db.VarChar(255)

  @@index([feedback], map: "mdl_feeditem_fee_ix")
  @@index([template], map: "mdl_feeditem_tem_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_feedback_sitecourse_map {
  id         BigInt @id @default(autoincrement())
  feedbackid BigInt @default(0)
  courseid   BigInt @default(0)

  @@index([courseid], map: "mdl_feedsitemap_cou_ix")
  @@index([feedbackid], map: "mdl_feedsitemap_fee_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_feedback_template {
  id       BigInt  @id @default(autoincrement())
  course   BigInt  @default(0)
  ispublic Boolean @default(false)
  name     String  @default("") @db.VarChar(255)

  @@index([course], map: "mdl_feedtemp_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_feedback_value {
  id            BigInt @id @default(autoincrement())
  course_id     BigInt @default(0)
  item          BigInt @default(0)
  completed     BigInt @default(0)
  tmp_completed BigInt @default(0)
  value         String @db.LongText

  @@unique([completed, item, course_id], map: "mdl_feedvalu_comitecou_uix")
  @@index([course_id], map: "mdl_feedvalu_cou_ix")
  @@index([item], map: "mdl_feedvalu_ite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_feedback_valuetmp {
  id            BigInt @id @default(autoincrement())
  course_id     BigInt @default(0)
  item          BigInt @default(0)
  completed     BigInt @default(0)
  tmp_completed BigInt @default(0)
  value         String @db.LongText

  @@unique([completed, item, course_id], map: "mdl_feedvalu_comitecou2_uix")
  @@index([course_id], map: "mdl_feedvalu_cou2_ix")
  @@index([item], map: "mdl_feedvalu_ite2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_file_conversion {
  id            BigInt  @id @default(autoincrement())
  usermodified  BigInt
  timecreated   BigInt
  timemodified  BigInt
  sourcefileid  BigInt
  targetformat  String  @default("") @db.VarChar(100)
  status        BigInt? @default(0)
  statusmessage String? @db.LongText
  converter     String? @db.VarChar(255)
  destfileid    BigInt?
  data          String? @db.LongText

  @@index([usermodified], map: "innmx_mdl_fileconv_use_ix")
  @@index([destfileid], map: "mdl_fileconv_des_ix")
  @@index([sourcefileid], map: "mdl_fileconv_sou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_files {
  id              BigInt  @id @default(autoincrement())
  contenthash     String  @default("") @db.VarChar(40)
  pathnamehash    String  @unique(map: "mdl_file_pat_uix") @default("") @db.VarChar(40)
  contextid       BigInt
  component       String  @default("") @db.VarChar(100)
  filearea        String  @default("") @db.VarChar(50)
  itemid          BigInt
  filepath        String  @default("") @db.VarChar(255)
  filename        String  @default("") @db.VarChar(255)
  userid          BigInt?
  filesize        BigInt
  mimetype        String? @db.VarChar(100)
  status          BigInt  @default(0)
  source          String? @db.LongText
  author          String? @db.VarChar(255)
  license         String? @db.VarChar(255)
  timecreated     BigInt
  timemodified    BigInt
  sortorder       BigInt  @default(0)
  referencefileid BigInt?

  @@index([filename], map: "innmx_mdl_file_fil_ix")
  @@index([component, filearea, contextid, itemid], map: "mdl_file_comfilconite_ix")
  @@index([contextid], map: "mdl_file_con2_ix")
  @@index([contenthash], map: "mdl_file_con_ix")
  @@index([license], map: "mdl_file_lic_ix")
  @@index([referencefileid], map: "mdl_file_ref_ix")
  @@index([userid], map: "mdl_file_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_files_reference {
  id            BigInt  @id @default(autoincrement())
  repositoryid  BigInt
  lastsync      BigInt?
  reference     String? @db.LongText
  referencehash String  @default("") @db.VarChar(40)

  @@unique([referencehash, repositoryid], map: "mdl_filerefe_refrep_uix")
  @@index([repositoryid], map: "mdl_filerefe_rep_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_filter_active {
  id        BigInt @id @default(autoincrement())
  filter    String @default("") @db.VarChar(32)
  contextid BigInt
  active    Int    @db.SmallInt
  sortorder BigInt @default(0)

  @@unique([contextid, filter], map: "mdl_filtacti_confil_uix")
  @@index([contextid], map: "mdl_filtacti_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_filter_config {
  id        BigInt  @id @default(autoincrement())
  filter    String  @default("") @db.VarChar(32)
  contextid BigInt
  name      String  @default("") @db.VarChar(255)
  value     String? @db.LongText

  @@unique([contextid, filter, name], map: "mdl_filtconf_confilnam_uix")
  @@index([contextid], map: "mdl_filtconf_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_folder {
  id                 BigInt  @id @default(autoincrement())
  course             BigInt  @default(0)
  name               String  @default("") @db.VarChar(255)
  intro              String? @db.LongText
  introformat        Int     @default(0) @db.SmallInt
  revision           BigInt  @default(0)
  timemodified       BigInt  @default(0)
  display            Int     @default(0) @db.SmallInt
  showexpanded       Boolean @default(true)
  showdownloadfolder Boolean @default(true)
  forcedownload      Boolean @default(true)

  @@index([course], map: "mdl_fold_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum {
  id                    BigInt  @id @default(autoincrement())
  course                BigInt  @default(0)
  type                  String  @default("general") @db.VarChar(20)
  name                  String  @default("") @db.VarChar(255)
  intro                 String  @db.LongText
  introformat           Int     @default(0) @db.SmallInt
  duedate               BigInt  @default(0)
  cutoffdate            BigInt  @default(0)
  assessed              BigInt  @default(0)
  assesstimestart       BigInt  @default(0)
  assesstimefinish      BigInt  @default(0)
  scale                 BigInt  @default(0)
  grade_forum           BigInt  @default(0)
  grade_forum_notify    Int     @default(0) @db.SmallInt
  maxbytes              BigInt  @default(0)
  maxattachments        BigInt  @default(1)
  forcesubscribe        Boolean @default(false)
  trackingtype          Int     @default(1) @db.TinyInt
  rsstype               Int     @default(0) @db.TinyInt
  rssarticles           Int     @default(0) @db.TinyInt
  timemodified          BigInt  @default(0)
  warnafter             BigInt  @default(0)
  blockafter            BigInt  @default(0)
  blockperiod           BigInt  @default(0)
  completiondiscussions Int     @default(0)
  completionreplies     Int     @default(0)
  completionposts       Int     @default(0)
  displaywordcount      Boolean @default(false)
  lockdiscussionafter   BigInt  @default(0)

  @@index([course], map: "mdl_foru_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum_digests {
  id         BigInt @id @default(autoincrement())
  userid     BigInt
  forum      BigInt
  maildigest Int    @default(-1) @db.TinyInt

  @@unique([forum, userid, maildigest], map: "mdl_forudige_forusemai_uix")
  @@index([forum], map: "mdl_forudige_for_ix")
  @@index([userid], map: "mdl_forudige_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum_discussion_subs {
  id         BigInt @id @default(autoincrement())
  forum      BigInt
  userid     BigInt
  discussion BigInt
  preference BigInt @default(1)

  @@unique([userid, discussion], map: "mdl_forudiscsubs_usedis_uix")
  @@index([discussion], map: "mdl_forudiscsubs_dis_ix")
  @@index([forum], map: "mdl_forudiscsubs_for_ix")
  @@index([userid], map: "mdl_forudiscsubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum_discussions {
  id           BigInt  @id @default(autoincrement())
  course       BigInt  @default(0)
  forum        BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  firstpost    BigInt  @default(0)
  userid       BigInt  @default(0)
  groupid      BigInt  @default(-1)
  assessed     Boolean @default(true)
  timemodified BigInt  @default(0)
  usermodified BigInt  @default(0)
  timestart    BigInt  @default(0)
  timeend      BigInt  @default(0)
  pinned       Boolean @default(false)
  timelocked   BigInt  @default(0)

  @@index([usermodified], map: "innmx_mdl_forudisc_use_ix")
  @@index([course], map: "mdl_forudisc_cou_ix")
  @@index([forum], map: "mdl_forudisc_for_ix")
  @@index([userid], map: "mdl_forudisc_use_ix")
}

model innmx_mdl_forum_grades {
  id           BigInt   @id @default(autoincrement())
  forum        BigInt
  itemnumber   BigInt
  userid       BigInt
  grade        Decimal? @db.Decimal(10, 5)
  timecreated  BigInt
  timemodified BigInt

  @@unique([forum, itemnumber, userid], map: "mdl_forugrad_foriteuse_uix")
  @@index([forum], map: "mdl_forugrad_for_ix")
  @@index([userid], map: "mdl_forugrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum_posts {
  id             BigInt  @id @default(autoincrement())
  discussion     BigInt  @default(0)
  parent         BigInt  @default(0)
  userid         BigInt  @default(0)
  created        BigInt  @default(0)
  modified       BigInt  @default(0)
  mailed         Int     @default(0) @db.TinyInt
  subject        String  @default("") @db.VarChar(255)
  message        String  @db.LongText
  messageformat  Int     @default(0) @db.TinyInt
  messagetrust   Int     @default(0) @db.TinyInt
  attachment     String  @default("") @db.VarChar(100)
  totalscore     Int     @default(0) @db.SmallInt
  mailnow        BigInt  @default(0)
  deleted        Boolean @default(false)
  privatereplyto BigInt  @default(0)
  wordcount      BigInt?
  charcount      BigInt?

  @@index([created], map: "mdl_forupost_cre_ix")
  @@index([discussion], map: "mdl_forupost_dis_ix")
  @@index([mailed], map: "mdl_forupost_mai_ix")
  @@index([parent], map: "mdl_forupost_par_ix")
  @@index([privatereplyto], map: "mdl_forupost_pri_ix")
  @@index([userid], map: "mdl_forupost_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum_queue {
  id           BigInt @id @default(autoincrement())
  userid       BigInt @default(0)
  discussionid BigInt @default(0)
  postid       BigInt @default(0)
  timemodified BigInt @default(0)

  @@index([discussionid], map: "mdl_foruqueu_dis_ix")
  @@index([postid], map: "mdl_foruqueu_pos_ix")
  @@index([userid], map: "mdl_foruqueu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum_read {
  id           BigInt @id @default(autoincrement())
  userid       BigInt @default(0)
  forumid      BigInt @default(0)
  discussionid BigInt @default(0)
  postid       BigInt @default(0)
  firstread    BigInt @default(0)
  lastread     BigInt @default(0)

  @@index([discussionid, userid], map: "innmx_mdl_foruread_disuse_ix")
  @@index([forumid, userid], map: "innmx_mdl_foruread_foruse_ix")
  @@index([userid], map: "innmx_mdl_foruread_use_ix")
  @@index([postid, userid], map: "mdl_foruread_posuse_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum_subscriptions {
  id     BigInt @id @default(autoincrement())
  userid BigInt @default(0)
  forum  BigInt @default(0)

  @@unique([userid, forum], map: "mdl_forusubs_usefor_uix")
  @@index([forum], map: "mdl_forusubs_for_ix")
  @@index([userid], map: "mdl_forusubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_forum_track_prefs {
  id      BigInt @id @default(autoincrement())
  userid  BigInt @default(0)
  forumid BigInt @default(0)

  @@index([userid, forumid], map: "mdl_forutracpref_usefor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_glossary {
  id                     BigInt @id @default(autoincrement())
  course                 BigInt @default(0)
  name                   String @default("") @db.VarChar(255)
  intro                  String @db.LongText
  introformat            Int    @default(0) @db.SmallInt
  allowduplicatedentries Int    @default(0) @db.TinyInt
  displayformat          String @default("dictionary") @db.VarChar(50)
  mainglossary           Int    @default(0) @db.TinyInt
  showspecial            Int    @default(1) @db.TinyInt
  showalphabet           Int    @default(1) @db.TinyInt
  showall                Int    @default(1) @db.TinyInt
  allowcomments          Int    @default(0) @db.TinyInt
  allowprintview         Int    @default(1) @db.TinyInt
  usedynalink            Int    @default(1) @db.TinyInt
  defaultapproval        Int    @default(1) @db.TinyInt
  approvaldisplayformat  String @default("default") @db.VarChar(50)
  globalglossary         Int    @default(0) @db.TinyInt
  entbypage              Int    @default(10) @db.SmallInt
  editalways             Int    @default(0) @db.TinyInt
  rsstype                Int    @default(0) @db.TinyInt
  rssarticles            Int    @default(0) @db.TinyInt
  assessed               BigInt @default(0)
  assesstimestart        BigInt @default(0)
  assesstimefinish       BigInt @default(0)
  scale                  BigInt @default(0)
  timecreated            BigInt @default(0)
  timemodified           BigInt @default(0)
  completionentries      Int    @default(0)

  @@index([course], map: "mdl_glos_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_glossary_alias {
  id      BigInt @id @default(autoincrement())
  entryid BigInt @default(0)
  alias   String @default("") @db.VarChar(255)

  @@index([entryid], map: "mdl_glosalia_ent_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_glossary_categories {
  id          BigInt @id @default(autoincrement())
  glossaryid  BigInt @default(0)
  name        String @default("") @db.VarChar(255)
  usedynalink Int    @default(1) @db.TinyInt

  @@index([glossaryid], map: "mdl_gloscate_glo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_glossary_entries {
  id               BigInt @id @default(autoincrement())
  glossaryid       BigInt @default(0)
  userid           BigInt @default(0)
  concept          String @default("") @db.VarChar(255)
  definition       String @db.LongText
  definitionformat Int    @default(0) @db.TinyInt
  definitiontrust  Int    @default(0) @db.TinyInt
  attachment       String @default("") @db.VarChar(100)
  timecreated      BigInt @default(0)
  timemodified     BigInt @default(0)
  teacherentry     Int    @default(0) @db.TinyInt
  sourceglossaryid BigInt @default(0)
  usedynalink      Int    @default(1) @db.TinyInt
  casesensitive    Int    @default(0) @db.TinyInt
  fullmatch        Int    @default(1) @db.TinyInt
  approved         Int    @default(1) @db.TinyInt

  @@index([concept], map: "mdl_glosentr_con_ix")
  @@index([glossaryid], map: "mdl_glosentr_glo_ix")
  @@index([userid], map: "mdl_glosentr_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_glossary_entries_categories {
  id         BigInt @id @default(autoincrement())
  categoryid BigInt @default(0)
  entryid    BigInt @default(0)

  @@index([categoryid], map: "mdl_glosentrcate_cat_ix")
  @@index([entryid], map: "mdl_glosentrcate_ent_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_glossary_formats {
  id              BigInt  @id @default(autoincrement())
  name            String  @default("") @db.VarChar(50)
  popupformatname String  @default("") @db.VarChar(50)
  visible         Int     @default(1) @db.TinyInt
  showgroup       Int     @default(1) @db.TinyInt
  showtabs        String? @db.VarChar(100)
  defaultmode     String  @default("") @db.VarChar(50)
  defaulthook     String  @default("") @db.VarChar(50)
  sortkey         String  @default("") @db.VarChar(50)
  sortorder       String  @default("") @db.VarChar(50)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_categories {
  id                  BigInt  @id @default(autoincrement())
  courseid            BigInt
  parent              BigInt?
  depth               BigInt  @default(0)
  path                String? @db.VarChar(255)
  fullname            String  @default("") @db.VarChar(255)
  aggregation         BigInt  @default(0)
  keephigh            BigInt  @default(0)
  droplow             BigInt  @default(0)
  aggregateonlygraded Boolean @default(false)
  aggregateoutcomes   Boolean @default(false)
  timecreated         BigInt
  timemodified        BigInt
  hidden              BigInt  @default(0)

  @@index([courseid], map: "mdl_gradcate_cou_ix")
  @@index([parent], map: "mdl_gradcate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_categories_history {
  id                  BigInt  @id @default(autoincrement())
  action              BigInt  @default(0)
  oldid               BigInt
  source              String? @db.VarChar(255)
  timemodified        BigInt?
  loggeduser          BigInt?
  courseid            BigInt
  parent              BigInt?
  depth               BigInt  @default(0)
  path                String? @db.VarChar(255)
  fullname            String  @default("") @db.VarChar(255)
  aggregation         BigInt  @default(0)
  keephigh            BigInt  @default(0)
  droplow             BigInt  @default(0)
  aggregateonlygraded Boolean @default(false)
  aggregateoutcomes   Boolean @default(false)
  aggregatesubcats    Boolean @default(false)
  hidden              BigInt  @default(0)

  @@index([action], map: "mdl_gradcatehist_act_ix")
  @@index([courseid], map: "mdl_gradcatehist_cou_ix")
  @@index([loggeduser], map: "mdl_gradcatehist_log_ix")
  @@index([oldid], map: "mdl_gradcatehist_old_ix")
  @@index([parent], map: "mdl_gradcatehist_par_ix")
  @@index([timemodified], map: "mdl_gradcatehist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_grades {
  id                BigInt   @id @default(autoincrement())
  itemid            BigInt
  userid            BigInt
  rawgrade          Decimal? @db.Decimal(10, 5)
  rawgrademax       Decimal  @default(100.00000) @db.Decimal(10, 5)
  rawgrademin       Decimal  @default(0.00000) @db.Decimal(10, 5)
  rawscaleid        BigInt?
  usermodified      BigInt?
  finalgrade        Decimal? @db.Decimal(10, 5)
  hidden            BigInt   @default(0)
  locked            BigInt   @default(0)
  locktime          BigInt   @default(0)
  exported          BigInt   @default(0)
  overridden        BigInt   @default(0)
  excluded          BigInt   @default(0)
  feedback          String?  @db.LongText
  feedbackformat    BigInt   @default(0)
  information       String?  @db.LongText
  informationformat BigInt   @default(0)
  timecreated       BigInt?
  timemodified      BigInt?
  aggregationstatus String   @default("unknown") @db.VarChar(10)
  aggregationweight Decimal? @db.Decimal(10, 5)

  @@unique([userid, itemid], map: "mdl_gradgrad_useite_uix")
  @@index([itemid], map: "mdl_gradgrad_ite_ix")
  @@index([locked, locktime], map: "mdl_gradgrad_locloc_ix")
  @@index([rawscaleid], map: "mdl_gradgrad_raw_ix")
  @@index([usermodified], map: "mdl_gradgrad_use2_ix")
  @@index([userid], map: "mdl_gradgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_grades_history {
  id                BigInt   @id @default(autoincrement())
  action            BigInt   @default(0)
  oldid             BigInt
  source            String?  @db.VarChar(255)
  timemodified      BigInt?
  loggeduser        BigInt?
  itemid            BigInt
  userid            BigInt
  rawgrade          Decimal? @db.Decimal(10, 5)
  rawgrademax       Decimal  @default(100.00000) @db.Decimal(10, 5)
  rawgrademin       Decimal  @default(0.00000) @db.Decimal(10, 5)
  rawscaleid        BigInt?
  usermodified      BigInt?
  finalgrade        Decimal? @db.Decimal(10, 5)
  hidden            BigInt   @default(0)
  locked            BigInt   @default(0)
  locktime          BigInt   @default(0)
  exported          BigInt   @default(0)
  overridden        BigInt   @default(0)
  excluded          BigInt   @default(0)
  feedback          String?  @db.LongText
  feedbackformat    BigInt   @default(0)
  information       String?  @db.LongText
  informationformat BigInt   @default(0)

  @@index([action], map: "mdl_gradgradhist_act_ix")
  @@index([itemid], map: "mdl_gradgradhist_ite_ix")
  @@index([loggeduser], map: "mdl_gradgradhist_log_ix")
  @@index([oldid], map: "mdl_gradgradhist_old_ix")
  @@index([rawscaleid], map: "mdl_gradgradhist_raw_ix")
  @@index([timemodified], map: "mdl_gradgradhist_tim_ix")
  @@index([usermodified], map: "mdl_gradgradhist_use2_ix")
  @@index([userid], map: "mdl_gradgradhist_use_ix")
  @@index([userid, itemid, timemodified], map: "mdl_gradgradhist_useitetim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_import_newitem {
  id         BigInt @id @default(autoincrement())
  itemname   String @default("") @db.VarChar(255)
  importcode BigInt
  importer   BigInt

  @@index([importer], map: "mdl_gradimponewi_imp_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_import_values {
  id                 BigInt   @id @default(autoincrement())
  itemid             BigInt?
  newgradeitem       BigInt?
  userid             BigInt
  finalgrade         Decimal? @db.Decimal(10, 5)
  feedback           String?  @db.LongText
  importcode         BigInt
  importer           BigInt?
  importonlyfeedback Boolean? @default(false)

  @@index([userid], map: "innmx_mdl_gradimpovalu_use_ix")
  @@index([importer], map: "mdl_gradimpovalu_imp_ix")
  @@index([itemid], map: "mdl_gradimpovalu_ite_ix")
  @@index([newgradeitem], map: "mdl_gradimpovalu_new_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_items {
  id               BigInt   @id @default(autoincrement())
  courseid         BigInt?
  categoryid       BigInt?
  itemname         String?  @db.VarChar(255)
  itemtype         String   @default("") @db.VarChar(30)
  itemmodule       String?  @db.VarChar(30)
  iteminstance     BigInt?
  itemnumber       BigInt?
  iteminfo         String?  @db.LongText
  idnumber         String?  @db.VarChar(255)
  calculation      String?  @db.LongText
  gradetype        Int      @default(1) @db.SmallInt
  grademax         Decimal  @default(100.00000) @db.Decimal(10, 5)
  grademin         Decimal  @default(0.00000) @db.Decimal(10, 5)
  scaleid          BigInt?
  outcomeid        BigInt?
  gradepass        Decimal  @default(0.00000) @db.Decimal(10, 5)
  multfactor       Decimal  @default(1.00000) @db.Decimal(10, 5)
  plusfactor       Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef  Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef2 Decimal  @default(0.00000) @db.Decimal(10, 5)
  sortorder        BigInt   @default(0)
  display          BigInt   @default(0)
  decimals         Boolean?
  hidden           BigInt   @default(0)
  locked           BigInt   @default(0)
  locktime         BigInt   @default(0)
  needsupdate      BigInt   @default(0)
  weightoverride   Boolean  @default(false)
  timecreated      BigInt?
  timemodified     BigInt?

  @@index([itemtype, itemmodule, iteminstance, courseid], map: "innmx_mdl_graditem_iteiteit_ix")
  @@index([categoryid], map: "mdl_graditem_cat_ix")
  @@index([courseid], map: "mdl_graditem_cou_ix")
  @@index([gradetype], map: "mdl_graditem_gra_ix")
  @@index([idnumber, courseid], map: "mdl_graditem_idncou_ix")
  @@index([itemtype, needsupdate], map: "mdl_graditem_itenee_ix")
  @@index([locked, locktime], map: "mdl_graditem_locloc_ix")
  @@index([outcomeid], map: "mdl_graditem_out_ix")
  @@index([scaleid], map: "mdl_graditem_sca_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_items_history {
  id               BigInt   @id @default(autoincrement())
  action           BigInt   @default(0)
  oldid            BigInt
  source           String?  @db.VarChar(255)
  timemodified     BigInt?
  loggeduser       BigInt?
  courseid         BigInt?
  categoryid       BigInt?
  itemname         String?  @db.VarChar(255)
  itemtype         String   @default("") @db.VarChar(30)
  itemmodule       String?  @db.VarChar(30)
  iteminstance     BigInt?
  itemnumber       BigInt?
  iteminfo         String?  @db.LongText
  idnumber         String?  @db.VarChar(255)
  calculation      String?  @db.LongText
  gradetype        Int      @default(1) @db.SmallInt
  grademax         Decimal  @default(100.00000) @db.Decimal(10, 5)
  grademin         Decimal  @default(0.00000) @db.Decimal(10, 5)
  scaleid          BigInt?
  outcomeid        BigInt?
  gradepass        Decimal  @default(0.00000) @db.Decimal(10, 5)
  multfactor       Decimal  @default(1.00000) @db.Decimal(10, 5)
  plusfactor       Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef  Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef2 Decimal  @default(0.00000) @db.Decimal(10, 5)
  sortorder        BigInt   @default(0)
  hidden           BigInt   @default(0)
  locked           BigInt   @default(0)
  locktime         BigInt   @default(0)
  needsupdate      BigInt   @default(0)
  display          BigInt   @default(0)
  decimals         Boolean?
  weightoverride   Boolean  @default(false)

  @@index([action], map: "mdl_graditemhist_act_ix")
  @@index([categoryid], map: "mdl_graditemhist_cat_ix")
  @@index([courseid], map: "mdl_graditemhist_cou_ix")
  @@index([loggeduser], map: "mdl_graditemhist_log_ix")
  @@index([oldid], map: "mdl_graditemhist_old_ix")
  @@index([outcomeid], map: "mdl_graditemhist_out_ix")
  @@index([scaleid], map: "mdl_graditemhist_sca_ix")
  @@index([timemodified], map: "mdl_graditemhist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_letters {
  id            BigInt  @id @default(autoincrement())
  contextid     BigInt
  lowerboundary Decimal @db.Decimal(10, 5)
  letter        String  @default("") @db.VarChar(255)

  @@unique([contextid, lowerboundary, letter], map: "mdl_gradlett_conlowlet_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_outcomes {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt?
  shortname         String  @default("") @db.VarChar(255)
  fullname          String  @db.LongText
  scaleid           BigInt?
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  timecreated       BigInt?
  timemodified      BigInt?
  usermodified      BigInt?

  @@unique([courseid, shortname], map: "mdl_gradoutc_cousho_uix")
  @@index([courseid], map: "mdl_gradoutc_cou_ix")
  @@index([scaleid], map: "mdl_gradoutc_sca_ix")
  @@index([usermodified], map: "mdl_gradoutc_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_outcomes_courses {
  id        BigInt @id @default(autoincrement())
  courseid  BigInt
  outcomeid BigInt

  @@unique([courseid, outcomeid], map: "mdl_gradoutccour_couout_uix")
  @@index([courseid], map: "mdl_gradoutccour_cou_ix")
  @@index([outcomeid], map: "mdl_gradoutccour_out_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_outcomes_history {
  id                BigInt  @id @default(autoincrement())
  action            BigInt  @default(0)
  oldid             BigInt
  source            String? @db.VarChar(255)
  timemodified      BigInt?
  loggeduser        BigInt?
  courseid          BigInt?
  shortname         String  @default("") @db.VarChar(255)
  fullname          String  @db.LongText
  scaleid           BigInt?
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt

  @@index([action], map: "mdl_gradoutchist_act_ix")
  @@index([courseid], map: "mdl_gradoutchist_cou_ix")
  @@index([loggeduser], map: "mdl_gradoutchist_log_ix")
  @@index([oldid], map: "mdl_gradoutchist_old_ix")
  @@index([scaleid], map: "mdl_gradoutchist_sca_ix")
  @@index([timemodified], map: "mdl_gradoutchist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grade_settings {
  id       BigInt  @id @default(autoincrement())
  courseid BigInt
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@unique([courseid, name], map: "mdl_gradsett_counam_uix")
  @@index([courseid], map: "mdl_gradsett_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grading_areas {
  id           BigInt  @id @default(autoincrement())
  contextid    BigInt
  component    String  @default("") @db.VarChar(100)
  areaname     String  @default("") @db.VarChar(100)
  activemethod String? @db.VarChar(100)

  @@unique([contextid, component, areaname], map: "mdl_gradarea_concomare_uix")
  @@index([contextid], map: "mdl_gradarea_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grading_definitions {
  id                BigInt  @id @default(autoincrement())
  areaid            BigInt
  method            String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(255)
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt
  status            BigInt  @default(0)
  copiedfromid      BigInt?
  timecreated       BigInt
  usercreated       BigInt
  timemodified      BigInt
  usermodified      BigInt
  timecopied        BigInt? @default(0)
  options           String? @db.LongText

  @@unique([areaid, method], map: "mdl_graddefi_aremet_uix")
  @@index([areaid], map: "mdl_graddefi_are_ix")
  @@index([usercreated], map: "mdl_graddefi_use2_ix")
  @@index([usermodified], map: "mdl_graddefi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_grading_instances {
  id             BigInt   @id @default(autoincrement())
  definitionid   BigInt
  raterid        BigInt
  itemid         BigInt?
  rawgrade       Decimal? @db.Decimal(10, 5)
  status         BigInt   @default(0)
  feedback       String?  @db.LongText
  feedbackformat Int?     @db.TinyInt
  timemodified   BigInt

  @@index([definitionid], map: "mdl_gradinst_def_ix")
  @@index([raterid], map: "mdl_gradinst_rat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_gradingform_guide_comments {
  id                BigInt  @id @default(autoincrement())
  definitionid      BigInt
  sortorder         BigInt
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt

  @@index([definitionid], map: "mdl_gradguidcomm_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_gradingform_guide_criteria {
  id                       BigInt  @id @default(autoincrement())
  definitionid             BigInt
  sortorder                BigInt
  shortname                String  @default("") @db.VarChar(255)
  description              String? @db.LongText
  descriptionformat        Int?    @db.TinyInt
  descriptionmarkers       String? @db.LongText
  descriptionmarkersformat Int?    @db.TinyInt
  maxscore                 Decimal @db.Decimal(10, 5)

  @@index([definitionid], map: "mdl_gradguidcrit_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_gradingform_guide_fillings {
  id           BigInt  @id @default(autoincrement())
  instanceid   BigInt
  criterionid  BigInt
  remark       String? @db.LongText
  remarkformat Int?    @db.TinyInt
  score        Decimal @db.Decimal(10, 5)

  @@unique([instanceid, criterionid], map: "mdl_gradguidfill_inscri_uix")
  @@index([criterionid], map: "mdl_gradguidfill_cri_ix")
  @@index([instanceid], map: "mdl_gradguidfill_ins_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_gradingform_rubric_criteria {
  id                BigInt  @id @default(autoincrement())
  definitionid      BigInt
  sortorder         BigInt
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt

  @@index([definitionid], map: "mdl_gradrubrcrit_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_gradingform_rubric_fillings {
  id           BigInt  @id @default(autoincrement())
  instanceid   BigInt
  criterionid  BigInt
  levelid      BigInt?
  remark       String? @db.LongText
  remarkformat Int?    @db.TinyInt

  @@unique([instanceid, criterionid], map: "mdl_gradrubrfill_inscri_uix")
  @@index([criterionid], map: "mdl_gradrubrfill_cri_ix")
  @@index([instanceid], map: "mdl_gradrubrfill_ins_ix")
  @@index([levelid], map: "mdl_gradrubrfill_lev_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_gradingform_rubric_levels {
  id               BigInt  @id @default(autoincrement())
  criterionid      BigInt
  score            Decimal @db.Decimal(10, 5)
  definition       String? @db.LongText
  definitionformat BigInt?

  @@index([criterionid], map: "mdl_gradrubrleve_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_groupings {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt  @default(0)
  name              String  @default("") @db.VarChar(255)
  idnumber          String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  configdata        String? @db.LongText
  timecreated       BigInt  @default(0)
  timemodified      BigInt  @default(0)

  @@index([courseid], map: "mdl_grou_cou2_ix")
  @@index([idnumber], map: "mdl_grou_idn2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_groupings_groups {
  id         BigInt @id @default(autoincrement())
  groupingid BigInt @default(0)
  groupid    BigInt @default(0)
  timeadded  BigInt @default(0)

  @@index([groupid], map: "mdl_grougrou_gro2_ix")
  @@index([groupingid], map: "mdl_grougrou_gro_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_groups {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt
  idnumber          String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(254)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  enrolmentkey      String? @db.VarChar(50)
  picture           BigInt  @default(0)
  timecreated       BigInt  @default(0)
  timemodified      BigInt  @default(0)

  @@index([courseid], map: "mdl_grou_cou_ix")
  @@index([idnumber], map: "mdl_grou_idn_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_groups_members {
  id        BigInt @id @default(autoincrement())
  groupid   BigInt @default(0)
  userid    BigInt @default(0)
  timeadded BigInt @default(0)
  component String @default("") @db.VarChar(100)
  itemid    BigInt @default(0)

  @@unique([userid, groupid], map: "mdl_groumemb_usegro_uix")
  @@index([groupid], map: "mdl_groumemb_gro_ix")
  @@index([userid], map: "mdl_groumemb_use_ix")
}

model innmx_mdl_h5p {
  id             BigInt  @id @default(autoincrement())
  jsoncontent    String  @db.LongText
  mainlibraryid  BigInt
  displayoptions Int?    @db.SmallInt
  pathnamehash   String  @default("") @db.VarChar(40)
  contenthash    String  @default("") @db.VarChar(40)
  filtered       String? @db.LongText
  timecreated    BigInt  @default(0)
  timemodified   BigInt  @default(0)

  @@index([pathnamehash], map: "innmx_mdl_h5p_pat_ix")
  @@index([mainlibraryid], map: "mdl_h5p_mai_ix")
}

model innmx_mdl_h5p_contents_libraries {
  id             BigInt  @id @default(autoincrement())
  h5pid          BigInt
  libraryid      BigInt
  dependencytype String  @default("") @db.VarChar(10)
  dropcss        Boolean
  weight         BigInt

  @@index([h5pid], map: "mdl_h5pcontlibr_h5p_ix")
  @@index([libraryid], map: "mdl_h5pcontlibr_lib_ix")
}

model innmx_mdl_h5p_libraries {
  id               BigInt   @id @default(autoincrement())
  machinename      String   @default("") @db.VarChar(255)
  title            String   @default("") @db.VarChar(255)
  majorversion     Int      @db.SmallInt
  minorversion     Int      @db.SmallInt
  patchversion     Int      @db.SmallInt
  runnable         Boolean
  fullscreen       Boolean  @default(false)
  embedtypes       String   @default("") @db.VarChar(255)
  preloadedjs      String?  @db.LongText
  preloadedcss     String?  @db.LongText
  droplibrarycss   String?  @db.LongText
  semantics        String?  @db.LongText
  addto            String?  @db.LongText
  coremajor        Int?     @db.SmallInt
  coreminor        Int?     @db.SmallInt
  metadatasettings String?  @db.LongText
  tutorial         String?  @db.LongText
  example          String?  @db.LongText
  enabled          Boolean? @default(true)

  @@index([machinename, majorversion, minorversion, patchversion, runnable], map: "mdl_h5plibr_macmajminpatrun_ix")
}

model innmx_mdl_h5p_libraries_cachedassets {
  id        BigInt @id @default(autoincrement())
  libraryid BigInt
  hash      String @default("") @db.VarChar(255)

  @@index([libraryid], map: "mdl_h5plibrcach_lib_ix")
}

model innmx_mdl_h5p_library_dependencies {
  id                BigInt @id @default(autoincrement())
  libraryid         BigInt
  requiredlibraryid BigInt
  dependencytype    String @default("") @db.VarChar(255)

  @@index([libraryid], map: "mdl_h5plibrdepe_lib_ix")
  @@index([requiredlibraryid], map: "mdl_h5plibrdepe_req_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_h5pactivity {
  id             BigInt  @id @default(autoincrement())
  course         BigInt
  name           String  @default("") @db.VarChar(255)
  timecreated    BigInt
  timemodified   BigInt
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  grade          BigInt? @default(0)
  displayoptions Int     @default(0) @db.SmallInt
  enabletracking Boolean @default(true)
  grademethod    Int     @default(1) @db.SmallInt
  reviewmode     Int?    @default(1) @db.SmallInt

  @@index([course], map: "mdl_h5pa_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_h5pactivity_attempts {
  id            BigInt   @id @default(autoincrement())
  h5pactivityid BigInt
  userid        BigInt
  timecreated   BigInt
  timemodified  BigInt
  attempt       Int      @default(1) @db.MediumInt
  rawscore      BigInt?  @default(0)
  maxscore      BigInt?  @default(0)
  scaled        Decimal  @default(0.00000) @db.Decimal(10, 5)
  duration      BigInt?  @default(0)
  completion    Boolean?
  success       Boolean?

  @@unique([h5pactivityid, userid, attempt], map: "mdl_h5paatte_h5puseatt_uix")
  @@index([h5pactivityid], map: "mdl_h5paatte_h5p_ix")
  @@index([h5pactivityid, timecreated], map: "mdl_h5paatte_h5ptim_ix")
  @@index([h5pactivityid, userid], map: "mdl_h5paatte_h5puse_ix")
  @@index([timecreated], map: "mdl_h5paatte_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_h5pactivity_attempts_results {
  id              BigInt   @id @default(autoincrement())
  attemptid       BigInt
  subcontent      String?  @db.VarChar(128)
  timecreated     BigInt
  interactiontype String?  @db.VarChar(128)
  description     String?  @db.LongText
  correctpattern  String?  @db.LongText
  response        String   @db.LongText
  additionals     String?  @db.LongText
  rawscore        BigInt   @default(0)
  maxscore        BigInt   @default(0)
  duration        BigInt?  @default(0)
  completion      Boolean?
  success         Boolean?

  @@index([attemptid], map: "mdl_h5paatteresu_att_ix")
  @@index([attemptid, timecreated], map: "mdl_h5paatteresu_atttim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp {
  id               BigInt  @id @default(autoincrement())
  course           BigInt  @default(0)
  name             String  @default("") @db.VarChar(255)
  intro            String? @db.LongText
  introformat      Int     @default(0) @db.SmallInt
  json_content     String  @db.LongText
  embed_type       String  @default("") @db.VarChar(127)
  disable          BigInt  @default(0)
  main_library_id  BigInt
  content_type     String? @db.VarChar(127)
  authors          String? @db.LongText
  source           String? @db.VarChar(255)
  year_from        Int?    @db.SmallInt
  year_to          Int?    @db.SmallInt
  license          String? @db.VarChar(63)
  license_version  String? @db.VarChar(15)
  changes          String? @db.LongText
  license_extras   String? @db.LongText
  author_comments  String? @db.LongText
  default_language String? @db.VarChar(32)
  filtered         String? @db.LongText
  slug             String  @default("") @db.VarChar(255)
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)
  completionpass   Boolean @default(false)
  shared           BigInt  @default(0)
  synced           BigInt?
  hub_id           BigInt?
  a11y_title       String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_auth {
  id         BigInt @id @default(autoincrement())
  user_id    BigInt @unique(map: "mdl_hvpauth_use_uix")
  created_at BigInt
  secret     String @default("") @db.VarChar(64)
}

model innmx_mdl_hvp_content_hub_cache {
  id           BigInt @id @default(autoincrement())
  language     String @unique(map: "mdl_hvpconthubcach_lan_uix") @default("") @db.VarChar(31)
  json         String @db.LongText
  last_checked BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_content_user_data {
  id                       BigInt  @id @default(autoincrement())
  user_id                  BigInt
  hvp_id                   BigInt
  sub_content_id           BigInt
  data_id                  String? @db.VarChar(127)
  data                     String? @db.LongText
  preloaded                Boolean
  delete_on_content_change Boolean
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_contents_libraries {
  id              BigInt  @id @default(autoincrement())
  hvp_id          BigInt
  library_id      BigInt
  dependency_type String  @default("") @db.VarChar(10)
  drop_css        Boolean
  weight          BigInt

  @@index([drop_css], map: "mdl_hvpcontlibr_dro_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_counters {
  id              BigInt @id @default(autoincrement())
  type            String @default("") @db.VarChar(63)
  library_name    String @default("") @db.VarChar(127)
  library_version String @default("") @db.VarChar(31)
  num             BigInt

  @@index([type, library_name, library_version], map: "mdl_hvpcoun_typliblib_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_events {
  id              BigInt @id @default(autoincrement())
  user_id         BigInt
  created_at      BigInt
  type            String @default("") @db.VarChar(63)
  sub_type        String @default("") @db.VarChar(63)
  content_id      BigInt
  content_title   String @default("") @db.VarChar(255)
  library_name    String @default("") @db.VarChar(127)
  library_version String @default("") @db.VarChar(31)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_libraries {
  id                BigInt  @id @default(autoincrement())
  machine_name      String  @default("") @db.VarChar(255)
  title             String  @default("") @db.VarChar(255)
  major_version     Int     @db.SmallInt
  minor_version     Int     @db.SmallInt
  patch_version     Int     @db.SmallInt
  runnable          Boolean
  fullscreen        Boolean @default(false)
  embed_types       String  @default("") @db.VarChar(255)
  preloaded_js      String? @db.LongText
  preloaded_css     String? @db.LongText
  drop_library_css  String? @db.LongText
  semantics         String  @db.LongText
  restricted        Boolean @default(false)
  tutorial_url      String? @db.VarChar(1000)
  has_icon          Boolean @default(false)
  add_to            String? @db.LongText
  metadata_settings String? @db.LongText

  @@index([machine_name, major_version, minor_version, patch_version, runnable], map: "mdl_hvplibr_macmajminpatrun_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_libraries_cachedassets {
  id         BigInt @id @default(autoincrement())
  library_id BigInt
  hash       String @default("") @db.VarChar(64)

  @@unique([library_id, hash], map: "mdl_hvplibrcach_libhas_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_libraries_hub_cache {
  id                BigInt  @id @default(autoincrement())
  machine_name      String  @default("") @db.VarChar(255)
  major_version     Int     @db.SmallInt
  minor_version     Int     @db.SmallInt
  patch_version     Int     @db.SmallInt
  h5p_major_version Int?    @db.SmallInt
  h5p_minor_version Int?    @db.SmallInt
  title             String  @default("") @db.VarChar(255)
  summary           String  @db.LongText
  description       String  @db.LongText
  icon              String  @default("") @db.VarChar(511)
  created_at        BigInt
  updated_at        BigInt
  is_recommended    Boolean
  popularity        BigInt
  screenshots       String? @db.LongText
  license           String? @db.LongText
  example           String  @default("") @db.VarChar(511)
  tutorial          String? @db.VarChar(511)
  keywords          String? @db.LongText
  categories        String? @db.LongText
  owner             String? @db.VarChar(511)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_libraries_languages {
  id            BigInt @id @default(autoincrement())
  library_id    BigInt
  language_code String @default("") @db.VarChar(255)
  language_json String @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_libraries_libraries {
  id                  BigInt @id @default(autoincrement())
  library_id          BigInt
  required_library_id BigInt
  dependency_type     String @default("") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_tmpfiles {
  id BigInt @id
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_hvp_xapi_results {
  id                        BigInt  @id @default(autoincrement())
  content_id                BigInt
  user_id                   BigInt
  parent_id                 BigInt?
  interaction_type          String  @default("") @db.VarChar(127)
  description               String  @db.LongText
  correct_responses_pattern String  @db.LongText
  response                  String  @db.LongText
  additionals               String  @db.LongText
  raw_score                 Int?    @db.MediumInt
  max_score                 Int?    @db.MediumInt

  @@index([content_id, user_id], map: "mdl_hvpxapiresu_conuse_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_imscp {
  id           BigInt  @id @default(autoincrement())
  course       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  revision     BigInt  @default(0)
  keepold      BigInt  @default(-1)
  structure    String? @db.LongText
  timemodified BigInt  @default(0)

  @@index([course], map: "mdl_imsc_cou_ix")
}

model innmx_mdl_infected_files {
  id              BigInt  @id @default(autoincrement())
  filename        String  @db.LongText
  quarantinedfile String? @db.LongText
  userid          BigInt
  reason          String  @db.LongText
  timecreated     BigInt  @default(0)

  @@index([userid], map: "mdl_infefile_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_label {
  id           BigInt @id @default(autoincrement())
  course       BigInt @default(0)
  name         String @default("") @db.VarChar(255)
  intro        String @db.LongText
  introformat  Int?   @default(0) @db.SmallInt
  timemodified BigInt @default(0)

  @@index([course], map: "mdl_labe_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lesson {
  id                   BigInt   @id @default(autoincrement())
  course               BigInt   @default(0)
  name                 String   @default("") @db.VarChar(255)
  intro                String?  @db.LongText
  introformat          Int      @default(0) @db.SmallInt
  practice             Int      @default(0) @db.SmallInt
  modattempts          Int      @default(0) @db.SmallInt
  usepassword          Int      @default(0) @db.SmallInt
  password             String   @default("") @db.VarChar(32)
  dependency           BigInt   @default(0)
  conditions           String   @db.LongText
  grade                BigInt   @default(0)
  custom               Int      @default(0) @db.SmallInt
  ongoing              Int      @default(0) @db.SmallInt
  usemaxgrade          Int      @default(0) @db.SmallInt
  maxanswers           Int      @default(4) @db.SmallInt
  maxattempts          Int      @default(5) @db.SmallInt
  review               Int      @default(0) @db.SmallInt
  nextpagedefault      Int      @default(0) @db.SmallInt
  feedback             Int      @default(1) @db.SmallInt
  minquestions         Int      @default(0) @db.SmallInt
  maxpages             Int      @default(0) @db.SmallInt
  timelimit            BigInt   @default(0)
  retake               Int      @default(1) @db.SmallInt
  activitylink         BigInt   @default(0)
  mediafile            String   @default("") @db.VarChar(255)
  mediaheight          BigInt   @default(100)
  mediawidth           BigInt   @default(650)
  mediaclose           Int      @default(0) @db.SmallInt
  slideshow            Int      @default(0) @db.SmallInt
  width                BigInt   @default(640)
  height               BigInt   @default(480)
  bgcolor              String   @default("#FFFFFF") @db.VarChar(7)
  displayleft          Int      @default(0) @db.SmallInt
  displayleftif        Int      @default(0) @db.SmallInt
  progressbar          Int      @default(0) @db.SmallInt
  available            BigInt   @default(0)
  deadline             BigInt   @default(0)
  timemodified         BigInt   @default(0)
  completionendreached Boolean? @default(false)
  completiontimespent  BigInt?  @default(0)
  allowofflineattempts Boolean? @default(false)

  @@index([course], map: "mdl_less_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lesson_answers {
  id             BigInt  @id @default(autoincrement())
  lessonid       BigInt  @default(0)
  pageid         BigInt  @default(0)
  jumpto         BigInt  @default(0)
  grade          Int     @default(0) @db.SmallInt
  score          BigInt  @default(0)
  flags          Int     @default(0) @db.SmallInt
  timecreated    BigInt  @default(0)
  timemodified   BigInt  @default(0)
  answer         String? @db.LongText
  answerformat   Int     @default(0) @db.TinyInt
  response       String? @db.LongText
  responseformat Int     @default(0) @db.TinyInt

  @@index([lessonid], map: "mdl_lessansw_les_ix")
  @@index([pageid], map: "mdl_lessansw_pag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lesson_attempts {
  id         BigInt  @id @default(autoincrement())
  lessonid   BigInt  @default(0)
  pageid     BigInt  @default(0)
  userid     BigInt  @default(0)
  answerid   BigInt  @default(0)
  retry      Int     @default(0) @db.SmallInt
  correct    BigInt  @default(0)
  useranswer String? @db.LongText
  timeseen   BigInt  @default(0)

  @@index([answerid], map: "mdl_lessatte_ans_ix")
  @@index([lessonid], map: "mdl_lessatte_les_ix")
  @@index([pageid], map: "mdl_lessatte_pag_ix")
  @@index([userid], map: "mdl_lessatte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lesson_branch {
  id         BigInt @id @default(autoincrement())
  lessonid   BigInt @default(0)
  userid     BigInt @default(0)
  pageid     BigInt @default(0)
  retry      BigInt @default(0)
  flag       Int    @default(0) @db.SmallInt
  timeseen   BigInt @default(0)
  nextpageid BigInt @default(0)

  @@index([lessonid], map: "mdl_lessbran_les_ix")
  @@index([pageid], map: "mdl_lessbran_pag_ix")
  @@index([userid], map: "mdl_lessbran_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lesson_grades {
  id        BigInt @id @default(autoincrement())
  lessonid  BigInt @default(0)
  userid    BigInt @default(0)
  grade     Float  @default(0)
  late      Int    @default(0) @db.SmallInt
  completed BigInt @default(0)

  @@index([lessonid], map: "mdl_lessgrad_les_ix")
  @@index([userid], map: "mdl_lessgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lesson_overrides {
  id          BigInt  @id @default(autoincrement())
  lessonid    BigInt  @default(0)
  groupid     BigInt?
  userid      BigInt?
  available   BigInt?
  deadline    BigInt?
  timelimit   BigInt?
  review      Int?    @db.SmallInt
  maxattempts Int?    @db.SmallInt
  retake      Int?    @db.SmallInt
  password    String? @db.VarChar(32)

  @@index([groupid], map: "mdl_lessover_gro_ix")
  @@index([lessonid], map: "mdl_lessover_les_ix")
  @@index([userid], map: "mdl_lessover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lesson_pages {
  id             BigInt @id @default(autoincrement())
  lessonid       BigInt @default(0)
  prevpageid     BigInt @default(0)
  nextpageid     BigInt @default(0)
  qtype          Int    @default(0) @db.SmallInt
  qoption        Int    @default(0) @db.SmallInt
  layout         Int    @default(1) @db.SmallInt
  display        Int    @default(1) @db.SmallInt
  timecreated    BigInt @default(0)
  timemodified   BigInt @default(0)
  title          String @default("") @db.VarChar(255)
  contents       String @db.LongText
  contentsformat Int    @default(0) @db.TinyInt

  @@index([lessonid], map: "mdl_lesspage_les_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lesson_timer {
  id                  BigInt   @id @default(autoincrement())
  lessonid            BigInt   @default(0)
  userid              BigInt   @default(0)
  starttime           BigInt   @default(0)
  lessontime          BigInt   @default(0)
  completed           Boolean? @default(false)
  timemodifiedoffline BigInt   @default(0)

  @@index([lessonid], map: "mdl_lesstime_les_ix")
  @@index([userid], map: "mdl_lesstime_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_license {
  id        BigInt  @id @default(autoincrement())
  shortname String? @db.VarChar(255)
  fullname  String? @db.LongText
  source    String? @db.VarChar(255)
  enabled   Boolean @default(true)
  version   BigInt  @default(0)
  custom    Boolean @default(false)
  sortorder Int     @default(0) @db.MediumInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lock_db {
  id          BigInt  @id @default(autoincrement())
  resourcekey String  @unique(map: "mdl_lockdb_res_uix") @default("") @db.VarChar(255)
  expires     BigInt?
  owner       String? @db.VarChar(36)

  @@index([expires], map: "mdl_lockdb_exp_ix")
  @@index([owner], map: "mdl_lockdb_own_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_log {
  id     BigInt @id @default(autoincrement())
  time   BigInt @default(0)
  userid BigInt @default(0)
  ip     String @default("") @db.VarChar(45)
  course BigInt @default(0)
  module String @default("") @db.VarChar(20)
  cmid   BigInt @default(0)
  action String @default("") @db.VarChar(40)
  url    String @default("") @db.VarChar(100)
  info   String @default("") @db.VarChar(255)

  @@index([action], map: "mdl_log_act_ix")
  @@index([cmid], map: "mdl_log_cmi_ix")
  @@index([course, module, action], map: "mdl_log_coumodact_ix")
  @@index([time], map: "mdl_log_tim_ix")
  @@index([userid, course], map: "mdl_log_usecou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_log_display {
  id        BigInt @id @default(autoincrement())
  module    String @default("") @db.VarChar(20)
  action    String @default("") @db.VarChar(40)
  mtable    String @default("") @db.VarChar(30)
  field     String @default("") @db.VarChar(200)
  component String @default("") @db.VarChar(100)

  @@unique([module, action], map: "mdl_logdisp_modact_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_log_queries {
  id         BigInt  @id @default(autoincrement())
  qtype      Int     @db.MediumInt
  sqltext    String  @db.LongText
  sqlparams  String? @db.LongText
  error      Int     @default(0) @db.MediumInt
  info       String? @db.LongText
  backtrace  String? @db.LongText
  exectime   Decimal @db.Decimal(10, 5)
  timelogged BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_logstore_standard_log {
  id                BigInt  @id @default(autoincrement())
  eventname         String  @default("") @db.VarChar(255)
  component         String  @default("") @db.VarChar(100)
  action            String  @default("") @db.VarChar(100)
  target            String  @default("") @db.VarChar(100)
  objecttable       String? @db.VarChar(50)
  objectid          BigInt?
  crud              String  @default("") @db.VarChar(1)
  edulevel          Boolean
  contextid         BigInt
  contextlevel      BigInt
  contextinstanceid BigInt
  userid            BigInt
  courseid          BigInt?
  relateduserid     BigInt?
  anonymous         Boolean @default(false)
  other             String? @db.LongText
  timecreated       BigInt
  origin            String? @db.VarChar(10)
  ip                String? @db.VarChar(45)
  realuserid        BigInt?

  @@index([courseid], map: "innmx_mdl_logsstanlog_cou_ix")
  @@index([realuserid], map: "innmx_mdl_logsstanlog_rea_ix")
  @@index([relateduserid], map: "innmx_mdl_logsstanlog_rel_ix")
  @@index([userid], map: "innmx_mdl_logsstanlog_use_ix")
  @@index([contextid], map: "mdl_logsstanlog_con_ix")
  @@index([courseid, anonymous, timecreated], map: "mdl_logsstanlog_couanotim_ix")
  @@index([timecreated], map: "mdl_logsstanlog_tim_ix")
  @@index([userid, contextlevel, contextinstanceid, crud, edulevel, timecreated], map: "mdl_logsstanlog_useconconcr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lti {
  id                            BigInt   @id @default(autoincrement())
  course                        BigInt   @default(0)
  name                          String   @default("") @db.VarChar(255)
  intro                         String?  @db.LongText
  introformat                   Int?     @default(0) @db.SmallInt
  timecreated                   BigInt   @default(0)
  timemodified                  BigInt   @default(0)
  typeid                        BigInt?
  toolurl                       String   @db.LongText
  securetoolurl                 String?  @db.LongText
  instructorchoicesendname      Boolean?
  instructorchoicesendemailaddr Boolean?
  instructorchoiceallowroster   Boolean?
  instructorchoiceallowsetting  Boolean?
  instructorcustomparameters    String?  @db.LongText
  instructorchoiceacceptgrades  Boolean?
  grade                         BigInt   @default(100)
  launchcontainer               Int      @default(1) @db.TinyInt
  resourcekey                   String?  @db.VarChar(255)
  password                      String?  @db.VarChar(255)
  debuglaunch                   Boolean  @default(false)
  showtitlelaunch               Boolean  @default(false)
  showdescriptionlaunch         Boolean  @default(false)
  servicesalt                   String?  @db.VarChar(40)
  icon                          String?  @db.LongText
  secureicon                    String?  @db.LongText

  @@index([course], map: "mdl_lti_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lti_access_tokens {
  id          BigInt  @id @default(autoincrement())
  typeid      BigInt
  scope       String  @db.LongText
  token       String  @unique(map: "mdl_ltiaccetoke_tok_uix") @default("") @db.VarChar(128)
  validuntil  BigInt
  timecreated BigInt
  lastaccess  BigInt?

  @@index([typeid], map: "mdl_ltiaccetoke_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lti_submission {
  id            BigInt  @id @default(autoincrement())
  ltiid         BigInt
  userid        BigInt
  datesubmitted BigInt
  dateupdated   BigInt
  gradepercent  Decimal @db.Decimal(10, 5)
  originalgrade Decimal @db.Decimal(10, 5)
  launchid      BigInt
  state         Int     @db.TinyInt

  @@index([ltiid], map: "mdl_ltisubm_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lti_tool_proxies {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("Tool Provider") @db.VarChar(255)
  regurl            String? @db.LongText
  state             Int     @default(1) @db.TinyInt
  guid              String? @unique(map: "mdl_ltitoolprox_gui_uix") @db.VarChar(255)
  secret            String? @db.VarChar(255)
  vendorcode        String? @db.VarChar(255)
  capabilityoffered String  @db.LongText
  serviceoffered    String  @db.LongText
  toolproxy         String? @db.LongText
  createdby         BigInt
  timecreated       BigInt
  timemodified      BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lti_tool_settings {
  id             BigInt  @id @default(autoincrement())
  toolproxyid    BigInt
  typeid         BigInt?
  course         BigInt?
  coursemoduleid BigInt?
  settings       String  @db.LongText
  timecreated    BigInt
  timemodified   BigInt

  @@index([coursemoduleid], map: "mdl_ltitoolsett_cou2_ix")
  @@index([course], map: "mdl_ltitoolsett_cou_ix")
  @@index([toolproxyid], map: "mdl_ltitoolsett_too_ix")
  @@index([typeid], map: "mdl_ltitoolsett_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lti_types {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("basiclti Activity") @db.VarChar(255)
  baseurl           String  @db.LongText
  tooldomain        String  @default("") @db.VarChar(255)
  state             Int     @default(2) @db.TinyInt
  course            BigInt
  coursevisible     Boolean @default(false)
  ltiversion        String  @default("") @db.VarChar(10)
  clientid          String? @unique(map: "mdl_ltitype_cli_uix") @db.VarChar(255)
  toolproxyid       BigInt?
  enabledcapability String? @db.LongText
  parameter         String? @db.LongText
  icon              String? @db.LongText
  secureicon        String? @db.LongText
  createdby         BigInt
  timecreated       BigInt
  timemodified      BigInt
  description       String? @db.LongText

  @@index([course], map: "mdl_ltitype_cou_ix")
  @@index([tooldomain], map: "mdl_ltitype_too_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_lti_types_config {
  id     BigInt @id @default(autoincrement())
  typeid BigInt
  name   String @default("") @db.VarChar(100)
  value  String @db.LongText

  @@index([typeid], map: "mdl_ltitypeconf_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_ltiservice_gradebookservices {
  id              BigInt  @id @default(autoincrement())
  gradeitemid     BigInt
  courseid        BigInt
  toolproxyid     BigInt?
  typeid          BigInt?
  baseurl         String? @db.LongText
  ltilinkid       BigInt?
  tag             String? @db.VarChar(255)
  resourceid      String? @db.VarChar(512)
  subreviewurl    String? @db.LongText
  subreviewparams String? @db.LongText

  @@index([gradeitemid, courseid], map: "mdl_ltisgrad_gracou_ix")
  @@index([ltilinkid], map: "mdl_ltisgrad_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message {
  id                  BigInt   @id @default(autoincrement())
  useridfrom          BigInt   @default(0)
  useridto            BigInt   @default(0)
  subject             String?  @db.LongText
  fullmessage         String?  @db.LongText
  fullmessageformat   Int?     @default(0) @db.SmallInt
  fullmessagehtml     String?  @db.LongText
  smallmessage        String?  @db.LongText
  notification        Boolean? @default(false)
  contexturl          String?  @db.LongText
  contexturlname      String?  @db.LongText
  timecreated         BigInt   @default(0)
  timeuserfromdeleted BigInt   @default(0)
  timeusertodeleted   BigInt   @default(0)
  component           String?  @db.VarChar(100)
  eventtype           String?  @db.VarChar(100)
  customdata          String?  @db.LongText

  @@index([useridto, timeusertodeleted, notification], map: "mdl_mess_usetimnot2_ix")
  @@index([useridfrom, timeuserfromdeleted, notification], map: "mdl_mess_usetimnot_ix")
  @@index([useridfrom, useridto, timeuserfromdeleted, timeusertodeleted], map: "mdl_mess_useusetimtim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_airnotifier_devices {
  id           BigInt  @id @default(autoincrement())
  userdeviceid BigInt  @unique(map: "mdl_messairndevi_use_uix")
  enable       Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_contact_requests {
  id              BigInt @id @default(autoincrement())
  userid          BigInt
  requesteduserid BigInt
  timecreated     BigInt

  @@unique([userid, requesteduserid], map: "mdl_messcontrequ_usereq_uix")
  @@index([requesteduserid], map: "mdl_messcontrequ_req_ix")
  @@index([userid], map: "mdl_messcontrequ_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_contacts {
  id          BigInt  @id @default(autoincrement())
  userid      BigInt
  contactid   BigInt
  timecreated BigInt?

  @@unique([userid, contactid], map: "mdl_messcont_usecon_uix")
  @@index([contactid], map: "mdl_messcont_con_ix")
  @@index([userid], map: "mdl_messcont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_conversation_actions {
  id             BigInt @id @default(autoincrement())
  userid         BigInt
  conversationid BigInt
  action         BigInt
  timecreated    BigInt

  @@index([conversationid], map: "mdl_messconvacti_con_ix")
  @@index([userid], map: "mdl_messconvacti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_conversation_members {
  id             BigInt @id @default(autoincrement())
  conversationid BigInt
  userid         BigInt
  timecreated    BigInt

  @@index([conversationid], map: "mdl_messconvmemb_con_ix")
  @@index([userid], map: "mdl_messconvmemb_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_conversations {
  id           BigInt  @id @default(autoincrement())
  type         BigInt  @default(1)
  name         String? @db.VarChar(255)
  convhash     String? @db.VarChar(40)
  component    String? @db.VarChar(100)
  itemtype     String? @db.VarChar(100)
  itemid       BigInt?
  contextid    BigInt?
  enabled      Boolean @default(false)
  timecreated  BigInt
  timemodified BigInt?

  @@index([component, itemtype, itemid, contextid], map: "mdl_messconv_comiteitecon_ix")
  @@index([contextid], map: "mdl_messconv_con2_ix")
  @@index([convhash], map: "mdl_messconv_con_ix")
  @@index([type], map: "mdl_messconv_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_email_messages {
  id             BigInt @id @default(autoincrement())
  useridto       BigInt
  conversationid BigInt
  messageid      BigInt

  @@index([conversationid], map: "mdl_messemaimess_con_ix")
  @@index([messageid], map: "mdl_messemaimess_mes_ix")
  @@index([useridto], map: "mdl_messemaimess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_popup {
  id        BigInt  @id @default(autoincrement())
  messageid BigInt
  isread    Boolean @default(false)

  @@unique([messageid, isread], map: "mdl_messpopu_mesisr_uix")
  @@index([isread], map: "mdl_messpopu_isr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_popup_notifications {
  id             BigInt @id @default(autoincrement())
  notificationid BigInt

  @@index([notificationid], map: "mdl_messpopunoti_not_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_processors {
  id      BigInt  @id @default(autoincrement())
  name    String  @default("") @db.VarChar(166)
  enabled Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_providers {
  id         BigInt  @id @default(autoincrement())
  name       String  @default("") @db.VarChar(100)
  component  String  @default("") @db.VarChar(200)
  capability String? @db.VarChar(255)

  @@unique([component, name], map: "mdl_messprov_comnam_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_read {
  id                  BigInt   @id @default(autoincrement())
  useridfrom          BigInt   @default(0)
  useridto            BigInt   @default(0)
  subject             String?  @db.LongText
  fullmessage         String?  @db.LongText
  fullmessageformat   Int?     @default(0) @db.SmallInt
  fullmessagehtml     String?  @db.LongText
  smallmessage        String?  @db.LongText
  notification        Boolean? @default(false)
  contexturl          String?  @db.LongText
  contexturlname      String?  @db.LongText
  timecreated         BigInt   @default(0)
  timeread            BigInt   @default(0)
  timeuserfromdeleted BigInt   @default(0)
  timeusertodeleted   BigInt   @default(0)
  component           String?  @db.VarChar(100)
  eventtype           String?  @db.VarChar(100)

  @@index([notification, timeread], map: "mdl_messread_nottim_ix")
  @@index([useridto, timeusertodeleted, notification], map: "mdl_messread_usetimnot2_ix")
  @@index([useridfrom, timeuserfromdeleted, notification], map: "mdl_messread_usetimnot_ix")
  @@index([useridfrom, useridto, timeuserfromdeleted, timeusertodeleted], map: "mdl_messread_useusetimtim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_user_actions {
  id          BigInt @id @default(autoincrement())
  userid      BigInt
  messageid   BigInt
  action      BigInt
  timecreated BigInt

  @@unique([userid, messageid, action], map: "mdl_messuseracti_usemesact_uix")
  @@index([messageid], map: "mdl_messuseracti_mes_ix")
  @@index([userid], map: "mdl_messuseracti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_message_users_blocked {
  id            BigInt  @id @default(autoincrement())
  userid        BigInt
  blockeduserid BigInt
  timecreated   BigInt?

  @@unique([userid, blockeduserid], map: "mdl_messuserbloc_useblo_uix")
  @@index([blockeduserid], map: "mdl_messuserbloc_blo_ix")
  @@index([userid], map: "mdl_messuserbloc_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_messageinbound_datakeys {
  id          BigInt  @id @default(autoincrement())
  handler     BigInt
  datavalue   BigInt
  datakey     String? @db.VarChar(64)
  timecreated BigInt
  expires     BigInt?

  @@unique([handler, datavalue], map: "mdl_messdata_handat_uix")
  @@index([handler], map: "mdl_messdata_han_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_messageinbound_handlers {
  id                BigInt  @id @default(autoincrement())
  component         String  @default("") @db.VarChar(100)
  classname         String  @unique(map: "mdl_messhand_cla_uix") @default("") @db.VarChar(255)
  defaultexpiration BigInt  @default(86400)
  validateaddress   Boolean @default(true)
  enabled           Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_messageinbound_messagelist {
  id          BigInt @id @default(autoincrement())
  messageid   String @db.LongText
  userid      BigInt
  address     String @db.LongText
  timecreated BigInt

  @@index([userid], map: "mdl_messmess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_messages {
  id                BigInt  @id @default(autoincrement())
  useridfrom        BigInt
  conversationid    BigInt
  subject           String? @db.LongText
  fullmessage       String? @db.LongText
  fullmessageformat Boolean @default(false)
  fullmessagehtml   String? @db.LongText
  smallmessage      String? @db.LongText
  timecreated       BigInt
  fullmessagetrust  Int     @default(0) @db.TinyInt
  customdata        String? @db.LongText

  @@index([conversationid], map: "mdl_mess_con_ix")
  @@index([conversationid, timecreated], map: "mdl_mess_contim_ix")
  @@index([useridfrom], map: "mdl_mess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_application {
  id                BigInt @id @default(autoincrement())
  name              String @default("") @db.VarChar(50)
  display_name      String @default("") @db.VarChar(50)
  xmlrpc_server_url String @default("") @db.VarChar(255)
  sso_land_url      String @default("") @db.VarChar(255)
  sso_jump_url      String @default("") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_host {
  id                 BigInt  @id @default(autoincrement())
  deleted            Boolean @default(false)
  wwwroot            String  @default("") @db.VarChar(255)
  ip_address         String  @default("") @db.VarChar(45)
  name               String  @default("") @db.VarChar(80)
  public_key         String  @db.LongText
  public_key_expires BigInt  @default(0)
  transport          Int     @default(0) @db.TinyInt
  portno             Int     @default(0) @db.MediumInt
  last_connect_time  BigInt  @default(0)
  last_log_id        BigInt  @default(0)
  force_theme        Boolean @default(false)
  theme              String? @db.VarChar(100)
  applicationid      BigInt  @default(1)
  sslverification    Boolean @default(false)

  @@index([last_log_id], map: "innmx_mdl_mnethost_las_ix")
  @@index([applicationid], map: "mdl_mnethost_app_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_host2service {
  id        BigInt  @id @default(autoincrement())
  hostid    BigInt  @default(0)
  serviceid BigInt  @default(0)
  publish   Boolean @default(false)
  subscribe Boolean @default(false)

  @@unique([hostid, serviceid], map: "mdl_mnethost_hosser_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_log {
  id         BigInt @id @default(autoincrement())
  hostid     BigInt @default(0)
  remoteid   BigInt @default(0)
  time       BigInt @default(0)
  userid     BigInt @default(0)
  ip         String @default("") @db.VarChar(45)
  course     BigInt @default(0)
  coursename String @default("") @db.VarChar(40)
  module     String @default("") @db.VarChar(20)
  cmid       BigInt @default(0)
  action     String @default("") @db.VarChar(40)
  url        String @default("") @db.VarChar(100)
  info       String @default("") @db.VarChar(255)

  @@index([hostid, userid, course], map: "mdl_mnetlog_hosusecou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_remote_rpc {
  id           BigInt  @id @default(autoincrement())
  functionname String  @default("") @db.VarChar(40)
  xmlrpcpath   String  @default("") @db.VarChar(80)
  plugintype   String  @default("") @db.VarChar(20)
  pluginname   String  @default("") @db.VarChar(20)
  enabled      Boolean
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_remote_service2rpc {
  id        BigInt @id @default(autoincrement())
  serviceid BigInt @default(0)
  rpcid     BigInt @default(0)

  @@unique([rpcid, serviceid], map: "mdl_mnetremoserv_rpcser_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_rpc {
  id           BigInt   @id @default(autoincrement())
  functionname String   @default("") @db.VarChar(40)
  xmlrpcpath   String   @default("") @db.VarChar(80)
  plugintype   String   @default("") @db.VarChar(20)
  pluginname   String   @default("") @db.VarChar(20)
  enabled      Boolean  @default(false)
  help         String   @db.LongText
  profile      String   @db.LongText
  filename     String   @default("") @db.VarChar(100)
  classname    String?  @db.VarChar(150)
  static       Boolean?

  @@index([enabled, xmlrpcpath], map: "mdl_mnetrpc_enaxml_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_service {
  id          BigInt  @id @default(autoincrement())
  name        String  @default("") @db.VarChar(40)
  description String  @default("") @db.VarChar(40)
  apiversion  String  @default("") @db.VarChar(10)
  offer       Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_service2rpc {
  id        BigInt @id @default(autoincrement())
  serviceid BigInt @default(0)
  rpcid     BigInt @default(0)

  @@unique([rpcid, serviceid], map: "mdl_mnetserv_rpcser_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_session {
  id              BigInt @id @default(autoincrement())
  userid          BigInt @default(0)
  username        String @default("") @db.VarChar(100)
  token           String @unique(map: "mdl_mnetsess_tok_uix") @default("") @db.VarChar(40)
  mnethostid      BigInt @default(0)
  useragent       String @default("") @db.VarChar(40)
  confirm_timeout BigInt @default(0)
  session_id      String @default("") @db.VarChar(40)
  expires         BigInt @default(0)

  @@index([mnethostid], map: "innmx_mdl_mnetsess_mne_ix")
  @@index([userid], map: "innmx_mdl_mnetsess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnet_sso_access_control {
  id           BigInt @id @default(autoincrement())
  username     String @default("") @db.VarChar(100)
  mnet_host_id BigInt @default(0)
  accessctrl   String @default("allow") @db.VarChar(20)

  @@unique([mnet_host_id, username], map: "mdl_mnetssoaccecont_mneuse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnetservice_enrol_courses {
  id            BigInt @id @default(autoincrement())
  hostid        BigInt
  remoteid      BigInt
  categoryid    BigInt
  categoryname  String @default("") @db.VarChar(255)
  sortorder     BigInt @default(0)
  fullname      String @default("") @db.VarChar(254)
  shortname     String @default("") @db.VarChar(100)
  idnumber      String @default("") @db.VarChar(100)
  summary       String @db.LongText
  summaryformat Int?   @default(0) @db.SmallInt
  startdate     BigInt
  roleid        BigInt
  rolename      String @default("") @db.VarChar(255)

  @@unique([hostid, remoteid], map: "mdl_mnetenrocour_hosrem_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_mnetservice_enrol_enrolments {
  id             BigInt @id @default(autoincrement())
  hostid         BigInt
  userid         BigInt
  remotecourseid BigInt
  rolename       String @default("") @db.VarChar(255)
  enroltime      BigInt @default(0)
  enroltype      String @default("") @db.VarChar(20)

  @@index([hostid], map: "mdl_mnetenroenro_hos_ix")
  @@index([userid], map: "mdl_mnetenroenro_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_modules {
  id       BigInt  @id @default(autoincrement())
  name     String  @default("") @db.VarChar(20)
  cron     BigInt  @default(0)
  lastcron BigInt  @default(0)
  search   String  @default("") @db.VarChar(255)
  visible  Boolean @default(true)

  @@index([name], map: "mdl_modu_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_my_pages {
  id        BigInt  @id @default(autoincrement())
  userid    BigInt? @default(0)
  name      String  @default("") @db.VarChar(200)
  private   Boolean @default(true)
  sortorder Int     @default(0) @db.MediumInt

  @@index([userid, private], map: "mdl_mypage_usepri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_notifications {
  id                BigInt  @id @default(autoincrement())
  useridfrom        BigInt
  useridto          BigInt
  subject           String? @db.LongText
  fullmessage       String? @db.LongText
  fullmessageformat Boolean @default(false)
  fullmessagehtml   String? @db.LongText
  smallmessage      String? @db.LongText
  component         String? @db.VarChar(100)
  eventtype         String? @db.VarChar(100)
  contexturl        String? @db.LongText
  contexturlname    String? @db.LongText
  timeread          BigInt?
  timecreated       BigInt
  customdata        String? @db.LongText

  @@index([useridto], map: "mdl_noti_use2_ix")
  @@index([useridfrom], map: "mdl_noti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_oauth2_access_token {
  id           BigInt @id @default(autoincrement())
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt
  issuerid     BigInt @unique(map: "mdl_oautaccetoke_iss_uix")
  token        String @db.LongText
  expires      BigInt
  scope        String @db.LongText

  @@index([usermodified], map: "innmx_mdl_oautaccetoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_oauth2_endpoint {
  id           BigInt @id @default(autoincrement())
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt
  name         String @default("") @db.VarChar(255)
  url          String @db.LongText
  issuerid     BigInt

  @@index([usermodified], map: "innmx_mdl_oautendp_use_ix")
  @@index([issuerid], map: "mdl_oautendp_iss_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_oauth2_issuer {
  id                  BigInt  @id @default(autoincrement())
  timecreated         BigInt
  timemodified        BigInt
  usermodified        BigInt
  name                String  @default("") @db.VarChar(255)
  image               String  @db.LongText
  baseurl             String  @db.LongText
  clientid            String  @db.LongText
  clientsecret        String  @db.LongText
  loginscopes         String  @db.LongText
  loginscopesoffline  String  @db.LongText
  loginparams         String  @db.LongText
  loginparamsoffline  String  @db.LongText
  alloweddomains      String  @db.LongText
  scopessupported     String? @db.LongText
  enabled             Int     @default(1) @db.TinyInt
  showonloginpage     Int     @default(1) @db.TinyInt
  basicauth           Int     @default(0) @db.TinyInt
  sortorder           BigInt
  requireconfirmation Int     @default(1) @db.TinyInt
  servicetype         String? @db.VarChar(255)
  loginpagename       String? @db.VarChar(255)
}

model innmx_mdl_oauth2_refresh_token {
  id           BigInt @id @default(autoincrement())
  timecreated  BigInt
  timemodified BigInt
  userid       BigInt
  issuerid     BigInt
  token        String @db.LongText
  scopehash    String @default("") @db.VarChar(40)

  @@unique([userid, issuerid, scopehash], map: "mdl_oautrefrtoke_useisssco_uix")
  @@index([issuerid], map: "mdl_oautrefrtoke_iss_ix")
  @@index([userid], map: "mdl_oautrefrtoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_oauth2_system_account {
  id            BigInt  @id @default(autoincrement())
  timecreated   BigInt
  timemodified  BigInt
  usermodified  BigInt
  issuerid      BigInt  @unique(map: "mdl_oautsystacco_iss_uix")
  refreshtoken  String  @db.LongText
  grantedscopes String  @db.LongText
  email         String? @db.LongText
  username      String  @db.LongText

  @@index([usermodified], map: "innmx_mdl_oautsystacco_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_oauth2_user_field_mapping {
  id            BigInt @id @default(autoincrement())
  timemodified  BigInt
  timecreated   BigInt
  usermodified  BigInt
  issuerid      BigInt
  externalfield String @default("") @db.VarChar(500)
  internalfield String @default("") @db.VarChar(64)

  @@unique([issuerid, internalfield], map: "mdl_oautuserfielmapp_issin_uix")
  @@index([usermodified], map: "innmx_mdl_oautuserfielmapp__ix")
  @@index([issuerid], map: "mdl_oautuserfielmapp_iss_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_page {
  id              BigInt  @id @default(autoincrement())
  course          BigInt  @default(0)
  name            String  @default("") @db.VarChar(255)
  intro           String? @db.LongText
  introformat     Int     @default(0) @db.SmallInt
  content         String? @db.LongText
  contentformat   Int     @default(0) @db.SmallInt
  legacyfiles     Int     @default(0) @db.SmallInt
  legacyfileslast BigInt?
  display         Int     @default(0) @db.SmallInt
  displayoptions  String? @db.LongText
  revision        BigInt  @default(0)
  timemodified    BigInt  @default(0)

  @@index([course], map: "mdl_page_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_paygw_paypal {
  id         BigInt @id @default(autoincrement())
  paymentid  BigInt @unique(map: "mdl_paygpayp_pay_uix")
  pp_orderid String @default("The ID of the order in PayPal") @db.VarChar(255)
}

model innmx_mdl_payment_accounts {
  id           BigInt  @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  idnumber     String? @db.VarChar(100)
  contextid    BigInt
  enabled      Boolean @default(false)
  archived     Boolean @default(false)
  timecreated  BigInt?
  timemodified BigInt?

  @@index([contextid], map: "innmx_mdl_paymacco_con_ix")
}

model innmx_mdl_payment_gateways {
  id           BigInt  @id @default(autoincrement())
  accountid    BigInt
  gateway      String  @default("") @db.VarChar(100)
  enabled      Boolean @default(true)
  config       String? @db.LongText
  timecreated  BigInt
  timemodified BigInt

  @@index([accountid], map: "mdl_paymgate_acc_ix")
}

model innmx_mdl_payments {
  id           BigInt @id @default(autoincrement())
  component    String @default("") @db.VarChar(100)
  paymentarea  String @default("") @db.VarChar(50)
  itemid       BigInt
  userid       BigInt
  amount       String @default("") @db.VarChar(20)
  currency     String @default("") @db.VarChar(3)
  accountid    BigInt
  gateway      String @default("") @db.VarChar(100)
  timecreated  BigInt @default(0)
  timemodified BigInt @default(0)

  @@index([accountid], map: "mdl_paym_acc_ix")
  @@index([component, paymentarea, itemid], map: "mdl_paym_compayite_ix")
  @@index([gateway], map: "mdl_paym_gat_ix")
  @@index([userid], map: "mdl_paym_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_portfolio_instance {
  id      BigInt  @id @default(autoincrement())
  plugin  String  @default("") @db.VarChar(50)
  name    String  @default("") @db.VarChar(255)
  visible Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_portfolio_instance_config {
  id       BigInt  @id @default(autoincrement())
  instance BigInt
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@index([instance], map: "mdl_portinstconf_ins_ix")
  @@index([name], map: "mdl_portinstconf_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_portfolio_instance_user {
  id       BigInt  @id @default(autoincrement())
  instance BigInt
  userid   BigInt
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@index([instance], map: "mdl_portinstuser_ins_ix")
  @@index([userid], map: "mdl_portinstuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_portfolio_log {
  id               BigInt  @id @default(autoincrement())
  userid           BigInt
  time             BigInt
  portfolio        BigInt
  caller_class     String  @default("") @db.VarChar(150)
  caller_file      String  @default("") @db.VarChar(255)
  caller_component String? @db.VarChar(255)
  caller_sha1      String  @default("") @db.VarChar(255)
  tempdataid       BigInt  @default(0)
  returnurl        String  @default("") @db.VarChar(255)
  continueurl      String  @default("") @db.VarChar(255)

  @@index([tempdataid], map: "innmx_mdl_portlog_tem_ix")
  @@index([portfolio], map: "mdl_portlog_por_ix")
  @@index([userid], map: "mdl_portlog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_portfolio_mahara_queue {
  id         BigInt @id @default(autoincrement())
  transferid BigInt
  token      String @default("") @db.VarChar(50)

  @@index([token], map: "mdl_portmahaqueu_tok_ix")
  @@index([transferid], map: "mdl_portmahaqueu_tra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_portfolio_tempdata {
  id         BigInt  @id @default(autoincrement())
  data       String? @db.LongText
  expirytime BigInt
  userid     BigInt
  instance   BigInt? @default(0)
  queued     Boolean @default(false)

  @@index([instance], map: "mdl_porttemp_ins_ix")
  @@index([userid], map: "mdl_porttemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_post {
  id             BigInt  @id @default(autoincrement())
  module         String  @default("") @db.VarChar(20)
  userid         BigInt  @default(0)
  courseid       BigInt  @default(0)
  groupid        BigInt  @default(0)
  moduleid       BigInt  @default(0)
  coursemoduleid BigInt  @default(0)
  subject        String  @default("") @db.VarChar(128)
  summary        String? @db.LongText
  content        String? @db.LongText
  uniquehash     String  @default("") @db.VarChar(255)
  rating         BigInt  @default(0)
  format         BigInt  @default(0)
  summaryformat  Int     @default(0) @db.TinyInt
  attachment     String? @db.VarChar(100)
  publishstate   String  @default("draft") @db.VarChar(20)
  lastmodified   BigInt  @default(0)
  created        BigInt  @default(0)
  usermodified   BigInt?

  @@unique([id, userid], map: "mdl_post_iduse_uix")
  @@index([coursemoduleid], map: "innmx_mdl_post_cou2_ix")
  @@index([courseid], map: "innmx_mdl_post_cou_ix")
  @@index([lastmodified], map: "mdl_post_las_ix")
  @@index([module], map: "mdl_post_mod_ix")
  @@index([subject], map: "mdl_post_sub_ix")
  @@index([usermodified], map: "mdl_post_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_profiling {
  id                 BigInt @id @default(autoincrement())
  runid              String @unique(map: "mdl_prof_run_uix") @default("") @db.VarChar(32)
  url                String @default("") @db.VarChar(255)
  data               String @db.LongText
  totalexecutiontime BigInt
  totalcputime       BigInt
  totalcalls         BigInt
  totalmemory        BigInt
  runreference       Int    @default(0) @db.TinyInt
  runcomment         String @default("") @db.VarChar(255)
  timecreated        BigInt

  @@index([timecreated, runreference], map: "mdl_prof_timrun_ix")
  @@index([url, runreference], map: "mdl_prof_urlrun_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_ddimageortext {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "mdl_qtypddim_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_ddimageortext_drags {
  id         BigInt @id @default(autoincrement())
  questionid BigInt @default(0)
  no         BigInt @default(0)
  draggroup  BigInt @default(0)
  infinite   Int    @default(0) @db.SmallInt
  label      String @db.LongText

  @@index([questionid], map: "mdl_qtypddimdrag_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_ddimageortext_drops {
  id         BigInt @id @default(autoincrement())
  questionid BigInt @default(0)
  no         BigInt @default(0)
  xleft      BigInt @default(0)
  ytop       BigInt @default(0)
  choice     BigInt @default(0)
  label      String @db.LongText

  @@index([questionid], map: "mdl_qtypddimdrop_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_ddmarker {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
  showmisplaced                  Int    @default(0) @db.SmallInt

  @@index([questionid], map: "mdl_qtypddma_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_ddmarker_drags {
  id         BigInt @id @default(autoincrement())
  questionid BigInt @default(0)
  no         BigInt @default(0)
  label      String @db.LongText
  infinite   Int    @default(0) @db.SmallInt
  noofdrags  BigInt @default(1)

  @@index([questionid], map: "mdl_qtypddmadrag_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_ddmarker_drops {
  id         BigInt  @id @default(autoincrement())
  questionid BigInt  @default(0)
  no         BigInt  @default(0)
  shape      String? @db.VarChar(255)
  coords     String  @db.LongText
  choice     BigInt  @default(0)

  @@index([questionid], map: "mdl_qtypddmadrop_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_essay_options {
  id                     BigInt  @id @default(autoincrement())
  questionid             BigInt  @unique(map: "mdl_qtypessaopti_que_uix")
  responseformat         String  @default("editor") @db.VarChar(16)
  responserequired       Int     @default(1) @db.TinyInt
  responsefieldlines     Int     @default(15) @db.SmallInt
  minwordlimit           BigInt?
  maxwordlimit           BigInt?
  attachments            Int     @default(0) @db.SmallInt
  attachmentsrequired    Int     @default(0) @db.SmallInt
  graderinfo             String? @db.LongText
  graderinfoformat       Int     @default(0) @db.SmallInt
  responsetemplate       String? @db.LongText
  responsetemplateformat Int     @default(0) @db.SmallInt
  maxbytes               BigInt  @default(0)
  filetypeslist          String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_match_options {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @unique(map: "mdl_qtypmatcopti_que_uix") @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_match_subquestions {
  id                 BigInt @id @default(autoincrement())
  questionid         BigInt @default(0)
  questiontext       String @db.LongText
  questiontextformat Int    @default(0) @db.TinyInt
  answertext         String @default("") @db.VarChar(255)

  @@index([questionid], map: "mdl_qtypmatcsubq_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_multichoice_options {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @unique(map: "mdl_qtypmultopti_que_uix") @default(0)
  layout                         Int    @default(0) @db.SmallInt
  single                         Int    @default(0) @db.SmallInt
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  answernumbering                String @default("abc") @db.VarChar(10)
  shownumcorrect                 Int    @default(0) @db.TinyInt
  showstandardinstruction        Int    @default(1) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_randomsamatch_options {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @unique(map: "mdl_qtyprandopti_que_uix") @default(0)
  choose                         BigInt @default(4)
  subcats                        Int    @default(1) @db.TinyInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_qtype_shortanswer_options {
  id         BigInt @id @default(autoincrement())
  questionid BigInt @unique(map: "mdl_qtypshoropti_que_uix") @default(0)
  usecase    Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question {
  id                    BigInt  @id @default(autoincrement())
  parent                BigInt  @default(0)
  name                  String  @default("") @db.VarChar(255)
  questiontext          String  @db.LongText
  questiontextformat    Int     @default(0) @db.TinyInt
  generalfeedback       String  @db.LongText
  generalfeedbackformat Int     @default(0) @db.TinyInt
  defaultmark           Decimal @default(1.0000000) @db.Decimal(12, 7)
  penalty               Decimal @default(0.3333333) @db.Decimal(12, 7)
  qtype                 String  @default("") @db.VarChar(20)
  length                BigInt  @default(1)
  stamp                 String  @default("") @db.VarChar(255)
  timecreated           BigInt  @default(0)
  timemodified          BigInt  @default(0)
  createdby             BigInt?
  modifiedby            BigInt?

  @@index([createdby], map: "mdl_ques_cre_ix")
  @@index([modifiedby], map: "mdl_ques_mod_ix")
  @@index([parent], map: "mdl_ques_par_ix")
  @@index([qtype], map: "mdl_ques_qty_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_answers {
  id             BigInt  @id @default(autoincrement())
  question       BigInt  @default(0)
  answer         String  @db.LongText
  answerformat   Int     @default(0) @db.TinyInt
  fraction       Decimal @default(0.0000000) @db.Decimal(12, 7)
  feedback       String  @db.LongText
  feedbackformat Int     @default(0) @db.TinyInt

  @@index([question], map: "mdl_quesansw_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_attempt_step_data {
  id            BigInt  @id @default(autoincrement())
  attemptstepid BigInt
  name          String  @default("") @db.VarChar(32)
  value         String? @db.LongText

  @@index([attemptstepid], map: "mdl_quesattestepdata_att_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_attempt_steps {
  id                BigInt   @id @default(autoincrement())
  questionattemptid BigInt
  sequencenumber    BigInt
  state             String   @default("") @db.VarChar(13)
  fraction          Decimal? @db.Decimal(12, 7)
  timecreated       BigInt
  userid            BigInt?

  @@unique([questionattemptid, sequencenumber], map: "mdl_quesattestep_queseq_uix")
  @@index([questionattemptid], map: "mdl_quesattestep_que_ix")
  @@index([userid], map: "mdl_quesattestep_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_attempts {
  id              BigInt  @id @default(autoincrement())
  questionusageid BigInt
  slot            BigInt
  behaviour       String  @default("") @db.VarChar(32)
  questionid      BigInt
  variant         BigInt  @default(1)
  maxmark         Decimal @db.Decimal(12, 7)
  minfraction     Decimal @db.Decimal(12, 7)
  maxfraction     Decimal @default(1.0000000) @db.Decimal(12, 7)
  flagged         Boolean @default(false)
  questionsummary String? @db.LongText
  rightanswer     String? @db.LongText
  responsesummary String? @db.LongText
  timemodified    BigInt

  @@unique([questionusageid, slot], map: "mdl_quesatte_queslo_uix")
  @@index([behaviour], map: "mdl_quesatte_beh_ix")
  @@index([questionusageid], map: "mdl_quesatte_que2_ix")
  @@index([questionid], map: "mdl_quesatte_que_ix")
}

model innmx_mdl_question_bank_entries {
  id                 BigInt  @id @default(autoincrement())
  questioncategoryid BigInt  @default(0)
  idnumber           String? @db.VarChar(100)
  ownerid            BigInt?

  @@unique([questioncategoryid, idnumber], map: "innmx_mdl_quesbankentr_que_uix")
  @@index([ownerid], map: "innmx_mdl_quesbankentr_own_ix")
  @@index([questioncategoryid], map: "innmx_mdl_quesbankentr_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_calculated {
  id                  BigInt @id @default(autoincrement())
  question            BigInt @default(0)
  answer              BigInt @default(0)
  tolerance           String @default("0.0") @db.VarChar(20)
  tolerancetype       BigInt @default(1)
  correctanswerlength BigInt @default(2)
  correctanswerformat BigInt @default(2)

  @@index([answer], map: "mdl_quescalc_ans_ix")
  @@index([question], map: "mdl_quescalc_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_calculated_options {
  id                             BigInt  @id @default(autoincrement())
  question                       BigInt  @default(0)
  synchronize                    Int     @default(0) @db.TinyInt
  single                         Int     @default(0) @db.SmallInt
  shuffleanswers                 Int     @default(0) @db.SmallInt
  correctfeedback                String? @db.LongText
  correctfeedbackformat          Int     @default(0) @db.TinyInt
  partiallycorrectfeedback       String? @db.LongText
  partiallycorrectfeedbackformat Int     @default(0) @db.TinyInt
  incorrectfeedback              String? @db.LongText
  incorrectfeedbackformat        Int     @default(0) @db.TinyInt
  answernumbering                String  @default("abc") @db.VarChar(10)
  shownumcorrect                 Int     @default(0) @db.TinyInt

  @@index([question], map: "mdl_quescalcopti_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_categories {
  id         BigInt  @id @default(autoincrement())
  name       String  @default("") @db.VarChar(255)
  contextid  BigInt  @default(0)
  info       String  @db.LongText
  infoformat Int     @default(0) @db.TinyInt
  stamp      String  @default("") @db.VarChar(255)
  parent     BigInt  @default(0)
  sortorder  BigInt  @default(999)
  idnumber   String? @db.VarChar(100)

  @@unique([contextid, idnumber], map: "mdl_quescate_conidn_uix")
  @@unique([contextid, stamp], map: "mdl_quescate_consta_uix")
  @@index([contextid], map: "mdl_quescate_con_ix")
  @@index([parent], map: "mdl_quescate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_dataset_definitions {
  id        BigInt @id @default(autoincrement())
  category  BigInt @default(0)
  name      String @default("") @db.VarChar(255)
  type      BigInt @default(0)
  options   String @default("") @db.VarChar(255)
  itemcount BigInt @default(0)

  @@index([category], map: "mdl_quesdatadefi_cat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_dataset_items {
  id         BigInt @id @default(autoincrement())
  definition BigInt @default(0)
  itemnumber BigInt @default(0)
  value      String @default("") @db.VarChar(255)

  @@index([definition], map: "mdl_quesdataitem_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_datasets {
  id                BigInt @id @default(autoincrement())
  question          BigInt @default(0)
  datasetdefinition BigInt @default(0)

  @@index([datasetdefinition], map: "mdl_quesdata_dat_ix")
  @@index([question], map: "mdl_quesdata_que_ix")
  @@index([question, datasetdefinition], map: "mdl_quesdata_quedat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_ddwtos {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "mdl_quesddwt_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_gapselect {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "mdl_quesgaps_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_hints {
  id             BigInt   @id @default(autoincrement())
  questionid     BigInt
  hint           String   @db.LongText
  hintformat     Int      @default(0) @db.SmallInt
  shownumcorrect Boolean?
  clearwrong     Boolean?
  options        String?  @db.VarChar(255)

  @@index([questionid], map: "mdl_queshint_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_multianswer {
  id       BigInt @id @default(autoincrement())
  question BigInt @default(0)
  sequence String @db.LongText

  @@index([question], map: "mdl_quesmult_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_numerical {
  id        BigInt @id @default(autoincrement())
  question  BigInt @default(0)
  answer    BigInt @default(0)
  tolerance String @default("0.0") @db.VarChar(255)

  @@index([answer], map: "mdl_quesnume_ans_ix")
  @@index([question], map: "mdl_quesnume_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_numerical_options {
  id              BigInt  @id @default(autoincrement())
  question        BigInt  @default(0)
  showunits       Int     @default(0) @db.SmallInt
  unitsleft       Int     @default(0) @db.SmallInt
  unitgradingtype Int     @default(0) @db.SmallInt
  unitpenalty     Decimal @default(0.1000000) @db.Decimal(12, 7)

  @@index([question], map: "mdl_quesnumeopti_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_numerical_units {
  id         BigInt  @id @default(autoincrement())
  question   BigInt  @default(0)
  multiplier Decimal @default(1.0000000000000000000) @db.Decimal(38, 19)
  unit       String  @default("") @db.VarChar(50)

  @@unique([question, unit], map: "mdl_quesnumeunit_queuni_uix")
  @@index([question], map: "mdl_quesnumeunit_que_ix")
}

model innmx_mdl_question_references {
  id                  BigInt  @id @default(autoincrement())
  usingcontextid      BigInt  @default(0)
  component           String? @db.VarChar(100)
  questionarea        String? @db.VarChar(50)
  itemid              BigInt?
  questionbankentryid BigInt  @default(0)
  version             BigInt?

  @@unique([usingcontextid, component, questionarea, itemid], map: "innmx_mdl_quesrefe_usicomq_uix")
  @@index([questionbankentryid], map: "innmx_mdl_quesrefe_que_ix")
  @@index([usingcontextid], map: "innmx_mdl_quesrefe_usi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_response_analysis {
  id           BigInt  @id @default(autoincrement())
  hashcode     String  @default("") @db.VarChar(40)
  whichtries   String  @default("") @db.VarChar(255)
  timemodified BigInt
  questionid   BigInt
  variant      BigInt?
  subqid       String  @default("") @db.VarChar(100)
  aid          String? @db.VarChar(100)
  response     String? @db.LongText
  credit       Decimal @db.Decimal(15, 5)

  @@index([questionid], map: "innmx_mdl_quesrespanal_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_response_count {
  id         BigInt @id @default(autoincrement())
  analysisid BigInt
  try        BigInt
  rcount     BigInt

  @@index([analysisid], map: "mdl_quesrespcoun_ana_ix")
}

model innmx_mdl_question_set_references {
  id                 BigInt  @id @default(autoincrement())
  usingcontextid     BigInt  @default(0)
  component          String? @db.VarChar(100)
  questionarea       String? @db.VarChar(50)
  itemid             BigInt?
  questionscontextid BigInt  @default(0)
  filtercondition    String? @db.LongText

  @@unique([usingcontextid, component, questionarea, itemid], map: "innmx_mdl_quessetrefe_usic_uix")
  @@index([questionscontextid], map: "innmx_mdl_quessetrefe_que_ix")
  @@index([usingcontextid], map: "innmx_mdl_quessetrefe_usi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_statistics {
  id                       BigInt   @id @default(autoincrement())
  hashcode                 String   @default("") @db.VarChar(40)
  timemodified             BigInt
  questionid               BigInt
  slot                     BigInt?
  subquestion              Int      @db.SmallInt
  variant                  BigInt?
  s                        BigInt   @default(0)
  effectiveweight          Decimal? @db.Decimal(15, 5)
  negcovar                 Int      @default(0) @db.TinyInt
  discriminationindex      Decimal? @db.Decimal(15, 5)
  discriminativeefficiency Decimal? @db.Decimal(15, 5)
  sd                       Decimal? @db.Decimal(15, 10)
  facility                 Decimal? @db.Decimal(15, 10)
  subquestions             String?  @db.LongText
  maxmark                  Decimal? @db.Decimal(12, 7)
  positions                String?  @db.LongText
  randomguessscore         Decimal? @db.Decimal(12, 7)

  @@index([questionid], map: "innmx_mdl_quesstat_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_truefalse {
  id                      BigInt @id @default(autoincrement())
  question                BigInt @default(0)
  trueanswer              BigInt @default(0)
  falseanswer             BigInt @default(0)
  showstandardinstruction Int    @default(1) @db.TinyInt

  @@index([question], map: "mdl_questrue_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_question_usages {
  id                 BigInt @id @default(autoincrement())
  contextid          BigInt
  component          String @default("") @db.VarChar(255)
  preferredbehaviour String @default("") @db.VarChar(32)

  @@index([contextid], map: "mdl_quesusag_con_ix")
}

model innmx_mdl_question_versions {
  id                  BigInt @id @default(autoincrement())
  questionbankentryid BigInt @default(0)
  version             BigInt @default(1)
  questionid          BigInt @default(0)
  status              String @default("ready") @db.VarChar(10)

  @@index([questionid], map: "innmx_mdl_quesvers_que2_ix")
  @@index([questionbankentryid], map: "innmx_mdl_quesvers_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz {
  id                          BigInt   @id @default(autoincrement())
  course                      BigInt   @default(0)
  name                        String   @default("") @db.VarChar(255)
  intro                       String   @db.LongText
  introformat                 Int      @default(0) @db.SmallInt
  timeopen                    BigInt   @default(0)
  timeclose                   BigInt   @default(0)
  timelimit                   BigInt   @default(0)
  overduehandling             String   @default("autoabandon") @db.VarChar(16)
  graceperiod                 BigInt   @default(0)
  preferredbehaviour          String   @default("") @db.VarChar(32)
  canredoquestions            Int      @default(0) @db.SmallInt
  attempts                    Int      @default(0) @db.MediumInt
  attemptonlast               Int      @default(0) @db.SmallInt
  grademethod                 Int      @default(1) @db.SmallInt
  decimalpoints               Int      @default(2) @db.SmallInt
  questiondecimalpoints       Int      @default(-1) @db.SmallInt
  reviewattempt               Int      @default(0) @db.MediumInt
  reviewcorrectness           Int      @default(0) @db.MediumInt
  reviewmarks                 Int      @default(0) @db.MediumInt
  reviewspecificfeedback      Int      @default(0) @db.MediumInt
  reviewgeneralfeedback       Int      @default(0) @db.MediumInt
  reviewrightanswer           Int      @default(0) @db.MediumInt
  reviewoverallfeedback       Int      @default(0) @db.MediumInt
  questionsperpage            BigInt   @default(0)
  navmethod                   String   @default("free") @db.VarChar(16)
  shuffleanswers              Int      @default(0) @db.SmallInt
  sumgrades                   Decimal  @default(0.00000) @db.Decimal(10, 5)
  grade                       Decimal  @default(0.00000) @db.Decimal(10, 5)
  timecreated                 BigInt   @default(0)
  timemodified                BigInt   @default(0)
  password                    String   @default("") @db.VarChar(255)
  subnet                      String   @default("") @db.VarChar(255)
  browsersecurity             String   @default("") @db.VarChar(32)
  delay1                      BigInt   @default(0)
  delay2                      BigInt   @default(0)
  showuserpicture             Int      @default(0) @db.SmallInt
  showblocks                  Int      @default(0) @db.SmallInt
  completionattemptsexhausted Boolean? @default(false)
  completionminattempts       BigInt   @default(0)
  allowofflineattempts        Boolean? @default(false)

  @@index([course], map: "mdl_quiz_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_attempts {
  id                         BigInt   @id @default(autoincrement())
  quiz                       BigInt   @default(0)
  userid                     BigInt   @default(0)
  attempt                    Int      @default(0) @db.MediumInt
  uniqueid                   BigInt   @unique(map: "mdl_quizatte_uni_uix") @default(0)
  layout                     String   @db.LongText
  currentpage                BigInt   @default(0)
  preview                    Int      @default(0) @db.SmallInt
  state                      String   @default("inprogress") @db.VarChar(16)
  timestart                  BigInt   @default(0)
  timefinish                 BigInt   @default(0)
  timemodified               BigInt   @default(0)
  timemodifiedoffline        BigInt   @default(0)
  timecheckstate             BigInt?  @default(0)
  sumgrades                  Decimal? @db.Decimal(10, 5)
  gradednotificationsenttime BigInt?

  @@unique([quiz, userid, attempt], map: "mdl_quizatte_quiuseatt_uix")
  @@index([quiz], map: "mdl_quizatte_qui_ix")
  @@index([state, timecheckstate], map: "mdl_quizatte_statim_ix")
  @@index([userid], map: "mdl_quizatte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_feedback {
  id                 BigInt  @id @default(autoincrement())
  quizid             BigInt  @default(0)
  feedbacktext       String  @db.LongText
  feedbacktextformat Int     @default(0) @db.TinyInt
  mingrade           Decimal @default(0.00000) @db.Decimal(10, 5)
  maxgrade           Decimal @default(0.00000) @db.Decimal(10, 5)

  @@index([quizid], map: "mdl_quizfeed_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_grades {
  id           BigInt  @id @default(autoincrement())
  quiz         BigInt  @default(0)
  userid       BigInt  @default(0)
  grade        Decimal @default(0.00000) @db.Decimal(10, 5)
  timemodified BigInt  @default(0)

  @@index([quiz], map: "mdl_quizgrad_qui_ix")
  @@index([userid], map: "mdl_quizgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_overrides {
  id        BigInt  @id @default(autoincrement())
  quiz      BigInt  @default(0)
  groupid   BigInt?
  userid    BigInt?
  timeopen  BigInt?
  timeclose BigInt?
  timelimit BigInt?
  attempts  Int?    @db.MediumInt
  password  String? @db.VarChar(255)

  @@index([groupid], map: "mdl_quizover_gro_ix")
  @@index([quiz], map: "mdl_quizover_qui_ix")
  @@index([userid], map: "mdl_quizover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_overview_regrades {
  id              BigInt   @id @default(autoincrement())
  questionusageid BigInt
  slot            BigInt
  newfraction     Decimal? @db.Decimal(12, 7)
  oldfraction     Decimal? @db.Decimal(12, 7)
  regraded        Int      @db.SmallInt
  timemodified    BigInt

  @@index([questionusageid, slot], map: "mdl_quizoverregr_queslo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_reports {
  id           BigInt  @id @default(autoincrement())
  name         String? @unique(map: "mdl_quizrepo_nam_uix") @db.VarChar(255)
  displayorder BigInt
  capability   String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_sections {
  id               BigInt  @id @default(autoincrement())
  quizid           BigInt
  firstslot        BigInt
  heading          String? @db.VarChar(1333)
  shufflequestions Int     @default(0) @db.SmallInt

  @@unique([quizid, firstslot], map: "mdl_quizsect_quifir_uix")
  @@index([quizid], map: "mdl_quizsect_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_slots {
  id              BigInt  @id @default(autoincrement())
  slot            BigInt
  quizid          BigInt  @default(0)
  page            BigInt
  requireprevious Int     @default(0) @db.SmallInt
  maxmark         Decimal @default(0.0000000) @db.Decimal(12, 7)

  @@unique([quizid, slot], map: "mdl_quizslot_quislo_uix")
  @@index([quizid], map: "mdl_quizslot_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quiz_statistics {
  id                   BigInt   @id @default(autoincrement())
  hashcode             String   @default("") @db.VarChar(40)
  whichattempts        Int      @db.SmallInt
  timemodified         BigInt
  firstattemptscount   BigInt
  highestattemptscount BigInt
  lastattemptscount    BigInt
  allattemptscount     BigInt
  firstattemptsavg     Decimal? @db.Decimal(15, 5)
  highestattemptsavg   Decimal? @db.Decimal(15, 5)
  lastattemptsavg      Decimal? @db.Decimal(15, 5)
  allattemptsavg       Decimal? @db.Decimal(15, 5)
  median               Decimal? @db.Decimal(15, 5)
  standarddeviation    Decimal? @db.Decimal(15, 5)
  skewness             Decimal? @db.Decimal(15, 10)
  kurtosis             Decimal? @db.Decimal(15, 5)
  cic                  Decimal? @db.Decimal(15, 10)
  errorratio           Decimal? @db.Decimal(15, 10)
  standarderror        Decimal? @db.Decimal(15, 10)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quizaccess_seb_quizsettings {
  id                     BigInt   @id @default(autoincrement())
  quizid                 BigInt   @unique(map: "mdl_quizsebquiz_qui_uix")
  cmid                   BigInt   @unique(map: "mdl_quizsebquiz_cmi_uix")
  templateid             BigInt
  requiresafeexambrowser Boolean
  showsebtaskbar         Boolean?
  showwificontrol        Boolean?
  showreloadbutton       Boolean?
  showtime               Boolean?
  showkeyboardlayout     Boolean?
  allowuserquitseb       Boolean?
  quitpassword           String?  @db.LongText
  linkquitseb            String?  @db.LongText
  userconfirmquit        Boolean?
  enableaudiocontrol     Boolean?
  muteonstartup          Boolean?
  allowspellchecking     Boolean?
  allowreloadinexam      Boolean?
  activateurlfiltering   Boolean?
  filterembeddedcontent  Boolean?
  expressionsallowed     String?  @db.LongText
  regexallowed           String?  @db.LongText
  expressionsblocked     String?  @db.LongText
  regexblocked           String?  @db.LongText
  allowedbrowserexamkeys String?  @db.LongText
  showsebdownloadlink    Boolean?
  usermodified           BigInt   @default(0)
  timecreated            BigInt   @default(0)
  timemodified           BigInt   @default(0)

  @@index([templateid], map: "mdl_quizsebquiz_tem_ix")
  @@index([usermodified], map: "mdl_quizsebquiz_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_quizaccess_seb_template {
  id           BigInt  @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  description  String  @db.LongText
  content      String  @db.LongText
  enabled      Boolean
  sortorder    BigInt
  usermodified BigInt  @default(0)
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([usermodified], map: "mdl_quizsebtemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_rating {
  id           BigInt @id @default(autoincrement())
  contextid    BigInt
  component    String @default("") @db.VarChar(100)
  ratingarea   String @default("") @db.VarChar(50)
  itemid       BigInt
  scaleid      BigInt
  rating       BigInt
  userid       BigInt
  timecreated  BigInt
  timemodified BigInt

  @@index([scaleid], map: "innmx_mdl_rati_sca_ix")
  @@index([component, ratingarea, contextid, itemid], map: "mdl_rati_comratconite_ix")
  @@index([contextid], map: "mdl_rati_con_ix")
  @@index([userid], map: "mdl_rati_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_registration_hubs {
  id           BigInt  @id @default(autoincrement())
  token        String  @default("") @db.VarChar(255)
  hubname      String  @default("") @db.VarChar(255)
  huburl       String  @default("") @db.VarChar(255)
  confirmed    Boolean @default(false)
  secret       String? @db.VarChar(255)
  timemodified BigInt  @default(0)
}

model innmx_mdl_reportbuilder_audience {
  id           BigInt  @id @default(autoincrement())
  reportid     BigInt
  heading      String? @db.VarChar(255)
  classname    String  @default("") @db.VarChar(255)
  configdata   String  @db.LongText
  usercreated  BigInt  @default(0)
  usermodified BigInt  @default(0)
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([reportid], map: "innmx_mdl_repoaudi_rep_ix")
  @@index([usermodified], map: "innmx_mdl_repoaudi_use2_ix")
  @@index([usercreated], map: "innmx_mdl_repoaudi_use_ix")
}

model innmx_mdl_reportbuilder_column {
  id               BigInt  @id @default(autoincrement())
  reportid         BigInt  @default(0)
  uniqueidentifier String  @default("") @db.VarChar(255)
  aggregation      String? @db.VarChar(32)
  heading          String? @db.VarChar(255)
  columnorder      BigInt
  sortenabled      Boolean @default(false)
  sortdirection    Boolean
  sortorder        BigInt?
  usercreated      BigInt  @default(0)
  usermodified     BigInt  @default(0)
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)

  @@index([reportid], map: "innmx_mdl_repocolu_rep_ix")
  @@index([usermodified], map: "innmx_mdl_repocolu_use2_ix")
  @@index([usercreated], map: "innmx_mdl_repocolu_use_ix")
}

model innmx_mdl_reportbuilder_filter {
  id               BigInt  @id @default(autoincrement())
  reportid         BigInt  @default(0)
  uniqueidentifier String  @default("") @db.VarChar(255)
  heading          String? @db.VarChar(255)
  iscondition      Boolean @default(false)
  filterorder      BigInt
  usercreated      BigInt  @default(0)
  usermodified     BigInt  @default(0)
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)

  @@index([reportid], map: "innmx_mdl_repofilt_rep_ix")
  @@index([usermodified], map: "innmx_mdl_repofilt_use2_ix")
  @@index([usercreated], map: "innmx_mdl_repofilt_use_ix")
}

model innmx_mdl_reportbuilder_report {
  id            BigInt  @id @default(autoincrement())
  name          String? @db.VarChar(255)
  source        String  @default("") @db.VarChar(255)
  type          Int     @default(0) @db.TinyInt
  uniquerows    Boolean @default(false)
  conditiondata String? @db.LongText
  settingsdata  String? @db.LongText
  contextid     BigInt
  component     String  @default("") @db.VarChar(100)
  area          String  @default("") @db.VarChar(100)
  itemid        BigInt  @default(0)
  usercreated   BigInt  @default(0)
  usermodified  BigInt  @default(0)
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)

  @@index([contextid], map: "innmx_mdl_reporepo_con_ix")
  @@index([usermodified], map: "innmx_mdl_reporepo_use2_ix")
  @@index([usercreated], map: "innmx_mdl_reporepo_use_ix")
}

model innmx_mdl_reportbuilder_schedule {
  id            BigInt  @id @default(autoincrement())
  reportid      BigInt  @default(0)
  name          String  @default("") @db.VarChar(255)
  enabled       Boolean @default(true)
  audiences     String  @db.LongText
  format        String  @default("") @db.VarChar(255)
  subject       String  @default("") @db.VarChar(255)
  message       String  @db.LongText
  messageformat BigInt
  userviewas    BigInt  @default(0)
  timescheduled BigInt  @default(0)
  recurrence    BigInt  @default(0)
  reportempty   BigInt  @default(0)
  timelastsent  BigInt  @default(0)
  timenextsend  BigInt  @default(0)
  usercreated   BigInt  @default(0)
  usermodified  BigInt  @default(0)
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)

  @@index([reportid], map: "innmx_mdl_reposche_rep_ix")
  @@index([usercreated], map: "innmx_mdl_reposche_use2_ix")
  @@index([usermodified], map: "innmx_mdl_reposche_use3_ix")
  @@index([userviewas], map: "innmx_mdl_reposche_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_repository {
  id        BigInt   @id @default(autoincrement())
  type      String   @default("") @db.VarChar(255)
  visible   Boolean? @default(true)
  sortorder BigInt   @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_repository_instance_config {
  id         BigInt  @id @default(autoincrement())
  instanceid BigInt
  name       String  @default("") @db.VarChar(255)
  value      String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_repository_instances {
  id           BigInt  @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  typeid       BigInt
  userid       BigInt  @default(0)
  contextid    BigInt
  username     String? @db.VarChar(255)
  password     String? @db.VarChar(255)
  timecreated  BigInt?
  timemodified BigInt?
  readonly     Boolean @default(false)

  @@index([contextid], map: "innmx_mdl_repoinst_con_ix")
  @@index([userid], map: "innmx_mdl_repoinst_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_repository_onedrive_access {
  id           BigInt @id @default(autoincrement())
  timemodified BigInt
  timecreated  BigInt
  usermodified BigInt
  permissionid String @default("") @db.VarChar(255)
  itemid       String @default("") @db.VarChar(255)

  @@index([usermodified], map: "mdl_repoonedacce_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_resource {
  id              BigInt  @id @default(autoincrement())
  course          BigInt  @default(0)
  name            String  @default("") @db.VarChar(255)
  intro           String? @db.LongText
  introformat     Int     @default(0) @db.SmallInt
  tobemigrated    Int     @default(0) @db.SmallInt
  legacyfiles     Int     @default(0) @db.SmallInt
  legacyfileslast BigInt?
  display         Int     @default(0) @db.SmallInt
  displayoptions  String? @db.LongText
  filterfiles     Int     @default(0) @db.SmallInt
  revision        BigInt  @default(0)
  timemodified    BigInt  @default(0)

  @@index([course], map: "mdl_reso_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_resource_old {
  id           BigInt  @id @default(autoincrement())
  course       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  type         String  @default("") @db.VarChar(30)
  reference    String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  alltext      String  @db.LongText
  popup        String  @db.LongText
  options      String  @default("") @db.VarChar(255)
  timemodified BigInt  @default(0)
  oldid        BigInt  @unique(map: "mdl_resoold_old_uix")
  cmid         BigInt?
  newmodule    String? @db.VarChar(50)
  newid        BigInt?
  migrated     BigInt  @default(0)

  @@index([cmid], map: "mdl_resoold_cmi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role {
  id          BigInt @id @default(autoincrement())
  name        String @default("") @db.VarChar(255)
  shortname   String @unique(map: "mdl_role_sho_uix") @default("") @db.VarChar(100)
  description String @db.LongText
  sortorder   BigInt @unique(map: "mdl_role_sor_uix") @default(0)
  archetype   String @default("") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role_allow_assign {
  id          BigInt @id @default(autoincrement())
  roleid      BigInt @default(0)
  allowassign BigInt @default(0)

  @@unique([roleid, allowassign], map: "mdl_rolealloassi_rolall_uix")
  @@index([allowassign], map: "mdl_rolealloassi_all_ix")
  @@index([roleid], map: "mdl_rolealloassi_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role_allow_override {
  id            BigInt @id @default(autoincrement())
  roleid        BigInt @default(0)
  allowoverride BigInt @default(0)

  @@unique([roleid, allowoverride], map: "mdl_rolealloover_rolall_uix")
  @@index([allowoverride], map: "mdl_rolealloover_all_ix")
  @@index([roleid], map: "mdl_rolealloover_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role_allow_switch {
  id          BigInt @id @default(autoincrement())
  roleid      BigInt
  allowswitch BigInt

  @@unique([roleid, allowswitch], map: "mdl_rolealloswit_rolall_uix")
  @@index([allowswitch], map: "mdl_rolealloswit_all_ix")
  @@index([roleid], map: "mdl_rolealloswit_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role_allow_view {
  id        BigInt @id @default(autoincrement())
  roleid    BigInt
  allowview BigInt

  @@unique([roleid, allowview], map: "mdl_rolealloview_rolall_uix")
  @@index([allowview], map: "mdl_rolealloview_all_ix")
  @@index([roleid], map: "mdl_rolealloview_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role_assignments {
  id           BigInt @id @default(autoincrement())
  roleid       BigInt @default(0)
  contextid    BigInt @default(0)
  userid       BigInt @default(0)
  timemodified BigInt @default(0)
  modifierid   BigInt @default(0)
  component    String @default("") @db.VarChar(100)
  itemid       BigInt @default(0)
  sortorder    BigInt @default(0)

  @@index([component, itemid, userid], map: "mdl_roleassi_comiteuse_ix")
  @@index([contextid], map: "mdl_roleassi_con_ix")
  @@index([roleid], map: "mdl_roleassi_rol_ix")
  @@index([roleid, contextid], map: "mdl_roleassi_rolcon_ix")
  @@index([sortorder], map: "mdl_roleassi_sor_ix")
  @@index([userid], map: "mdl_roleassi_use_ix")
  @@index([userid, contextid, roleid], map: "mdl_roleassi_useconrol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role_capabilities {
  id           BigInt @id @default(autoincrement())
  contextid    BigInt @default(0)
  roleid       BigInt @default(0)
  capability   String @default("") @db.VarChar(255)
  permission   BigInt @default(0)
  timemodified BigInt @default(0)
  modifierid   BigInt @default(0)

  @@unique([roleid, contextid, capability], map: "mdl_rolecapa_rolconcap_uix")
  @@index([capability], map: "mdl_rolecapa_cap_ix")
  @@index([contextid], map: "mdl_rolecapa_con_ix")
  @@index([modifierid], map: "mdl_rolecapa_mod_ix")
  @@index([roleid], map: "mdl_rolecapa_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role_context_levels {
  id           BigInt @id @default(autoincrement())
  roleid       BigInt
  contextlevel BigInt

  @@unique([contextlevel, roleid], map: "mdl_rolecontleve_conrol_uix")
  @@index([roleid], map: "mdl_rolecontleve_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_role_names {
  id        BigInt @id @default(autoincrement())
  roleid    BigInt @default(0)
  contextid BigInt @default(0)
  name      String @default("") @db.VarChar(255)

  @@unique([roleid, contextid], map: "mdl_rolename_rolcon_uix")
  @@index([contextid], map: "mdl_rolename_con_ix")
  @@index([roleid], map: "mdl_rolename_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scale {
  id                BigInt @id @default(autoincrement())
  courseid          BigInt @default(0)
  userid            BigInt @default(0)
  name              String @default("") @db.VarChar(255)
  scale             String @db.LongText
  description       String @db.LongText
  descriptionformat Int    @default(0) @db.TinyInt
  timemodified      BigInt @default(0)

  @@index([userid], map: "innmx_mdl_scal_use_ix")
  @@index([courseid], map: "mdl_scal_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scale_history {
  id           BigInt  @id @default(autoincrement())
  action       BigInt  @default(0)
  oldid        BigInt
  source       String? @db.VarChar(255)
  timemodified BigInt?
  loggeduser   BigInt?
  courseid     BigInt  @default(0)
  userid       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  scale        String  @db.LongText
  description  String  @db.LongText

  @@index([userid], map: "innmx_mdl_scalhist_use_ix")
  @@index([action], map: "mdl_scalhist_act_ix")
  @@index([courseid], map: "mdl_scalhist_cou_ix")
  @@index([loggeduser], map: "mdl_scalhist_log_ix")
  @@index([oldid], map: "mdl_scalhist_old_ix")
  @@index([timemodified], map: "mdl_scalhist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm {
  id                       BigInt   @id @default(autoincrement())
  course                   BigInt   @default(0)
  name                     String   @default("") @db.VarChar(255)
  scormtype                String   @default("local") @db.VarChar(50)
  reference                String   @default("") @db.VarChar(255)
  intro                    String   @db.LongText
  introformat              Int      @default(0) @db.SmallInt
  version                  String   @default("") @db.VarChar(9)
  maxgrade                 Float    @default(0)
  grademethod              Int      @default(0) @db.TinyInt
  whatgrade                BigInt   @default(0)
  maxattempt               BigInt   @default(1)
  forcecompleted           Boolean  @default(false)
  forcenewattempt          Boolean  @default(false)
  lastattemptlock          Boolean  @default(false)
  masteryoverride          Boolean  @default(true)
  displayattemptstatus     Boolean  @default(true)
  displaycoursestructure   Boolean  @default(false)
  updatefreq               Boolean  @default(false)
  sha1hash                 String?  @db.VarChar(40)
  md5hash                  String   @default("") @db.VarChar(32)
  revision                 BigInt   @default(0)
  launch                   BigInt   @default(0)
  skipview                 Boolean  @default(true)
  hidebrowse               Boolean  @default(false)
  hidetoc                  Boolean  @default(false)
  nav                      Boolean  @default(true)
  navpositionleft          BigInt?  @default(-100)
  navpositiontop           BigInt?  @default(-100)
  auto                     Boolean  @default(false)
  popup                    Boolean  @default(false)
  options                  String   @default("") @db.VarChar(255)
  width                    BigInt   @default(100)
  height                   BigInt   @default(600)
  timeopen                 BigInt   @default(0)
  timeclose                BigInt   @default(0)
  timemodified             BigInt   @default(0)
  completionstatusrequired Boolean?
  completionscorerequired  BigInt?
  completionstatusallscos  Boolean?
  autocommit               Boolean  @default(false)

  @@index([course], map: "mdl_scor_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_aicc_session {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt  @default(0)
  scormid      BigInt  @default(0)
  hacpsession  String  @default("") @db.VarChar(255)
  scoid        BigInt? @default(0)
  scormmode    String? @db.VarChar(50)
  scormstatus  String? @db.VarChar(255)
  attempt      BigInt?
  lessonstatus String? @db.VarChar(255)
  sessiontime  String? @db.VarChar(255)
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([scormid], map: "mdl_scoraiccsess_sco_ix")
  @@index([userid], map: "mdl_scoraiccsess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_scoes {
  id           BigInt @id @default(autoincrement())
  scorm        BigInt @default(0)
  manifest     String @default("") @db.VarChar(255)
  organization String @default("") @db.VarChar(255)
  parent       String @default("") @db.VarChar(255)
  identifier   String @default("") @db.VarChar(255)
  launch       String @db.LongText
  scormtype    String @default("") @db.VarChar(5)
  title        String @default("") @db.VarChar(255)
  sortorder    BigInt @default(0)

  @@index([scorm], map: "mdl_scorscoe_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_scoes_data {
  id    BigInt @id @default(autoincrement())
  scoid BigInt @default(0)
  name  String @default("") @db.VarChar(255)
  value String @db.LongText

  @@index([scoid], map: "mdl_scorscoedata_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_scoes_track {
  id           BigInt @id @default(autoincrement())
  userid       BigInt @default(0)
  scormid      BigInt @default(0)
  scoid        BigInt @default(0)
  attempt      BigInt @default(1)
  element      String @default("") @db.VarChar(255)
  value        String @db.LongText
  timemodified BigInt @default(0)

  @@unique([userid, scormid, scoid, attempt, element], map: "mdl_scorscoetrac_usescosco_uix")
  @@index([scoid], map: "mdl_scorscoetrac_sco2_ix")
  @@index([scormid], map: "mdl_scorscoetrac_sco_ix")
  @@index([userid], map: "mdl_scorscoetrac_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_seq_mapinfo {
  id                     BigInt  @id @default(autoincrement())
  scoid                  BigInt  @default(0)
  objectiveid            BigInt  @default(0)
  targetobjectiveid      BigInt  @default(0)
  readsatisfiedstatus    Boolean @default(true)
  readnormalizedmeasure  Boolean @default(true)
  writesatisfiedstatus   Boolean @default(false)
  writenormalizedmeasure Boolean @default(false)

  @@unique([scoid, id, objectiveid], map: "mdl_scorseqmapi_scoidobj_uix")
  @@index([objectiveid], map: "mdl_scorseqmapi_obj_ix")
  @@index([scoid], map: "mdl_scorseqmapi_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_seq_objective {
  id                   BigInt  @id @default(autoincrement())
  scoid                BigInt  @default(0)
  primaryobj           Boolean @default(false)
  objectiveid          String  @default("") @db.VarChar(255)
  satisfiedbymeasure   Boolean @default(true)
  minnormalizedmeasure Float   @default(0.0000) @db.Float

  @@unique([scoid, id], map: "mdl_scorseqobje_scoid_uix")
  @@index([scoid], map: "mdl_scorseqobje_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_seq_rolluprule {
  id                   BigInt @id @default(autoincrement())
  scoid                BigInt @default(0)
  childactivityset     String @default("") @db.VarChar(15)
  minimumcount         BigInt @default(0)
  minimumpercent       Float  @default(0.0000) @db.Float
  conditioncombination String @default("all") @db.VarChar(3)
  action               String @default("") @db.VarChar(15)

  @@unique([scoid, id], map: "mdl_scorseqroll_scoid_uix")
  @@index([scoid], map: "mdl_scorseqroll_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_seq_rolluprulecond {
  id           BigInt @id @default(autoincrement())
  scoid        BigInt @default(0)
  rollupruleid BigInt @default(0)
  operator     String @default("noOp") @db.VarChar(5)
  cond         String @default("") @db.VarChar(25)

  @@unique([scoid, rollupruleid, id], map: "mdl_scorseqroll_scorolid_uix")
  @@index([rollupruleid], map: "mdl_scorseqroll_rol_ix")
  @@index([scoid], map: "mdl_scorseqroll_sco2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_seq_rulecond {
  id                 BigInt @id @default(autoincrement())
  scoid              BigInt @default(0)
  ruleconditionsid   BigInt @default(0)
  refrencedobjective String @default("") @db.VarChar(255)
  measurethreshold   Float  @default(0.0000) @db.Float
  operator           String @default("noOp") @db.VarChar(5)
  cond               String @default("always") @db.VarChar(30)

  @@unique([id, scoid, ruleconditionsid], map: "mdl_scorseqrule_idscorul_uix")
  @@index([ruleconditionsid], map: "mdl_scorseqrule_rul_ix")
  @@index([scoid], map: "mdl_scorseqrule_sco2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_scorm_seq_ruleconds {
  id                   BigInt @id @default(autoincrement())
  scoid                BigInt @default(0)
  conditioncombination String @default("all") @db.VarChar(3)
  ruletype             Int    @default(0) @db.TinyInt
  action               String @default("") @db.VarChar(25)

  @@unique([scoid, id], map: "mdl_scorseqrule_scoid_uix")
  @@index([scoid], map: "mdl_scorseqrule_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_search_index_requests {
  id            BigInt @id @default(autoincrement())
  contextid     BigInt
  searcharea    String @default("") @db.VarChar(255)
  timerequested BigInt
  partialarea   String @default("") @db.VarChar(255)
  partialtime   BigInt
  indexpriority BigInt

  @@index([contextid], map: "mdl_searinderequ_con_ix")
  @@index([indexpriority, timerequested], map: "mdl_searinderequ_indtim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_search_simpledb_index {
  id           BigInt  @id @default(autoincrement())
  docid        String  @unique(map: "mdl_searsimpinde_doc_uix") @default("") @db.VarChar(255)
  itemid       BigInt
  title        String? @db.LongText
  content      String? @db.LongText
  contextid    BigInt
  areaid       String  @default("") @db.VarChar(255)
  type         Boolean
  courseid     BigInt
  owneruserid  BigInt?
  modified     BigInt
  userid       BigInt?
  description1 String? @db.LongText
  description2 String? @db.LongText

  @@index([areaid], map: "innmx_mdl_searsimpinde_are_ix")
  @@index([contextid], map: "innmx_mdl_searsimpinde_con_ix")
  @@index([courseid], map: "innmx_mdl_searsimpinde_cou_ix")
  @@index([owneruserid, contextid], map: "mdl_searsimpinde_owncon_ix")
  @@fulltext([title, content, description1, description2], map: "mdl_search_simpledb_index_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_sessions {
  id           BigInt  @id @default(autoincrement())
  state        BigInt  @default(0)
  sid          String  @unique(map: "mdl_sess_sid_uix") @default("") @db.VarChar(128)
  userid       BigInt
  sessdata     String? @db.LongText
  timecreated  BigInt
  timemodified BigInt
  firstip      String? @db.VarChar(45)
  lastip       String? @db.VarChar(45)

  @@index([state], map: "mdl_sess_sta_ix")
  @@index([timemodified], map: "mdl_sess_tim2_ix")
  @@index([timecreated], map: "mdl_sess_tim_ix")
  @@index([userid], map: "mdl_sess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_stats_daily {
  id       BigInt @id @default(autoincrement())
  courseid BigInt @default(0)
  timeend  BigInt @default(0)
  roleid   BigInt @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    BigInt @default(0)
  stat2    BigInt @default(0)

  @@index([courseid], map: "mdl_statdail_cou_ix")
  @@index([roleid], map: "mdl_statdail_rol_ix")
  @@index([timeend], map: "mdl_statdail_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_stats_monthly {
  id       BigInt @id @default(autoincrement())
  courseid BigInt @default(0)
  timeend  BigInt @default(0)
  roleid   BigInt @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    BigInt @default(0)
  stat2    BigInt @default(0)

  @@index([courseid], map: "mdl_statmont_cou_ix")
  @@index([roleid], map: "mdl_statmont_rol_ix")
  @@index([timeend], map: "mdl_statmont_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_stats_user_daily {
  id          BigInt @id @default(autoincrement())
  courseid    BigInt @default(0)
  userid      BigInt @default(0)
  roleid      BigInt @default(0)
  timeend     BigInt @default(0)
  statsreads  BigInt @default(0)
  statswrites BigInt @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "mdl_statuserdail_cou_ix")
  @@index([roleid], map: "mdl_statuserdail_rol_ix")
  @@index([timeend], map: "mdl_statuserdail_tim_ix")
  @@index([userid], map: "mdl_statuserdail_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_stats_user_monthly {
  id          BigInt @id @default(autoincrement())
  courseid    BigInt @default(0)
  userid      BigInt @default(0)
  roleid      BigInt @default(0)
  timeend     BigInt @default(0)
  statsreads  BigInt @default(0)
  statswrites BigInt @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "mdl_statusermont_cou_ix")
  @@index([roleid], map: "mdl_statusermont_rol_ix")
  @@index([timeend], map: "mdl_statusermont_tim_ix")
  @@index([userid], map: "mdl_statusermont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_stats_user_weekly {
  id          BigInt @id @default(autoincrement())
  courseid    BigInt @default(0)
  userid      BigInt @default(0)
  roleid      BigInt @default(0)
  timeend     BigInt @default(0)
  statsreads  BigInt @default(0)
  statswrites BigInt @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "mdl_statuserweek_cou_ix")
  @@index([roleid], map: "mdl_statuserweek_rol_ix")
  @@index([timeend], map: "mdl_statuserweek_tim_ix")
  @@index([userid], map: "mdl_statuserweek_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_stats_weekly {
  id       BigInt @id @default(autoincrement())
  courseid BigInt @default(0)
  timeend  BigInt @default(0)
  roleid   BigInt @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    BigInt @default(0)
  stat2    BigInt @default(0)

  @@index([courseid], map: "mdl_statweek_cou_ix")
  @@index([roleid], map: "mdl_statweek_rol_ix")
  @@index([timeend], map: "mdl_statweek_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_survey {
  id               BigInt  @id @default(autoincrement())
  course           BigInt  @default(0)
  template         BigInt  @default(0)
  days             Int     @default(0) @db.MediumInt
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)
  name             String  @default("") @db.VarChar(255)
  intro            String  @db.LongText
  introformat      Int     @default(0) @db.SmallInt
  questions        String  @default("") @db.VarChar(255)
  completionsubmit Boolean @default(false)

  @@index([course], map: "mdl_surv_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_survey_analysis {
  id     BigInt @id @default(autoincrement())
  survey BigInt @default(0)
  userid BigInt @default(0)
  notes  String @db.LongText

  @@index([survey], map: "mdl_survanal_sur_ix")
  @@index([userid], map: "mdl_survanal_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_survey_answers {
  id       BigInt @id @default(autoincrement())
  userid   BigInt @default(0)
  survey   BigInt @default(0)
  question BigInt @default(0)
  time     BigInt @default(0)
  answer1  String @db.LongText
  answer2  String @db.LongText

  @@index([question], map: "mdl_survansw_que_ix")
  @@index([survey], map: "mdl_survansw_sur_ix")
  @@index([userid], map: "mdl_survansw_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_survey_questions {
  id        BigInt  @id @default(autoincrement())
  text      String  @default("") @db.VarChar(255)
  shorttext String  @default("") @db.VarChar(30)
  multi     String  @default("") @db.VarChar(100)
  intro     String  @default("") @db.VarChar(50)
  type      Int     @default(0) @db.SmallInt
  options   String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tag {
  id                BigInt  @id @default(autoincrement())
  userid            BigInt
  tagcollid         BigInt
  name              String  @default("") @db.VarChar(255)
  rawname           String  @default("") @db.VarChar(255)
  isstandard        Boolean @default(false)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  flag              Int?    @default(0) @db.SmallInt
  timemodified      BigInt?

  @@unique([tagcollid, name], map: "mdl_tag_tagnam_uix")
  @@index([tagcollid], map: "mdl_tag_tag_ix")
  @@index([tagcollid, isstandard], map: "mdl_tag_tagiss_ix")
  @@index([userid], map: "mdl_tag_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tag_area {
  id               BigInt  @id @default(autoincrement())
  component        String  @default("") @db.VarChar(100)
  itemtype         String  @default("") @db.VarChar(100)
  enabled          Boolean @default(true)
  tagcollid        BigInt
  callback         String? @db.VarChar(100)
  callbackfile     String? @db.VarChar(100)
  showstandard     Boolean @default(false)
  multiplecontexts Boolean @default(false)

  @@unique([component, itemtype], map: "mdl_tagarea_comite_uix")
  @@index([tagcollid], map: "mdl_tagarea_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tag_coll {
  id         BigInt  @id @default(autoincrement())
  name       String? @db.VarChar(255)
  isdefault  Int     @default(0) @db.TinyInt
  component  String? @db.VarChar(100)
  sortorder  Int     @default(0) @db.MediumInt
  searchable Int     @default(1) @db.TinyInt
  customurl  String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tag_correlation {
  id             BigInt @id @default(autoincrement())
  tagid          BigInt
  correlatedtags String @db.LongText

  @@index([tagid], map: "mdl_tagcorr_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tag_instance {
  id           BigInt  @id @default(autoincrement())
  tagid        BigInt
  component    String  @default("") @db.VarChar(100)
  itemtype     String  @default("") @db.VarChar(100)
  itemid       BigInt
  contextid    BigInt?
  tiuserid     BigInt  @default(0)
  ordering     BigInt?
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@unique([component, itemtype, itemid, contextid, tiuserid, tagid], map: "mdl_taginst_comiteiteconti_uix")
  @@index([contextid], map: "mdl_taginst_con_ix")
  @@index([itemtype, component, tagid, contextid], map: "mdl_taginst_itecomtagcon_ix")
  @@index([tagid], map: "mdl_taginst_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_task_adhoc {
  id          BigInt  @id @default(autoincrement())
  component   String  @default("") @db.VarChar(255)
  classname   String  @default("") @db.VarChar(255)
  nextruntime BigInt
  faildelay   BigInt?
  customdata  String? @db.LongText
  userid      BigInt?
  blocking    Int     @default(0) @db.TinyInt
  timestarted BigInt?
  hostname    String? @db.VarChar(255)
  pid         BigInt?
  timecreated BigInt  @default(0)

  @@index([timestarted], map: "innmx_mdl_taskadho_tim_ix")
  @@index([nextruntime], map: "mdl_taskadho_nex_ix")
  @@index([userid], map: "mdl_taskadho_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_task_log {
  id        BigInt  @id @default(autoincrement())
  type      Int     @db.SmallInt
  component String  @default("") @db.VarChar(255)
  classname String  @default("") @db.VarChar(255)
  userid    BigInt
  timestart Decimal @db.Decimal(20, 10)
  timeend   Decimal @db.Decimal(20, 10)
  dbreads   BigInt
  dbwrites  BigInt
  result    Int     @db.TinyInt
  output    String  @db.LongText
  hostname  String? @db.VarChar(255)
  pid       BigInt?

  @@index([userid], map: "innmx_mdl_tasklog_use_ix")
  @@index([classname], map: "mdl_tasklog_cla_ix")
  @@index([timestart], map: "mdl_tasklog_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_task_scheduled {
  id          BigInt  @id @default(autoincrement())
  component   String  @default("") @db.VarChar(255)
  classname   String  @unique(map: "mdl_tasksche_cla_uix") @default("") @db.VarChar(255)
  lastruntime BigInt?
  nextruntime BigInt?
  blocking    Int     @default(0) @db.TinyInt
  minute      String  @default("") @db.VarChar(200)
  hour        String  @default("") @db.VarChar(70)
  day         String  @default("") @db.VarChar(90)
  month       String  @default("") @db.VarChar(30)
  dayofweek   String  @default("") @db.VarChar(25)
  faildelay   BigInt?
  customised  Int     @default(0) @db.TinyInt
  disabled    Boolean @default(false)
  timestarted BigInt?
  hostname    String? @db.VarChar(255)
  pid         BigInt?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tiny_autosave {
  id           BigInt  @id @default(autoincrement())
  elementid    String  @default("") @db.VarChar(255)
  contextid    BigInt
  pagehash     String  @default("") @db.VarChar(64)
  userid       BigInt
  drafttext    String  @db.LongText
  draftid      BigInt?
  pageinstance String  @default("") @db.VarChar(64)
  timemodified BigInt  @default(0)

  @@unique([elementid, contextid, userid, pagehash], map: "innmx_mdl_tinyauto_eleconu_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_areas {
  id          BigInt  @id @default(autoincrement())
  type        Int     @default(0) @db.TinyInt
  contextid   BigInt?
  component   String? @db.VarChar(100)
  tablename   String? @db.VarChar(40)
  fieldorarea String? @db.VarChar(50)
  itemid      BigInt?
  filename    String? @db.VarChar(1333)
  reftable    String? @db.VarChar(40)
  refid       BigInt?
  cmid        BigInt?
  courseid    BigInt?
  categoryid  BigInt?

  @@index([categoryid], map: "mdl_toolbricarea_cat_ix")
  @@index([cmid], map: "mdl_toolbricarea_cmi_ix")
  @@index([contextid], map: "mdl_toolbricarea_con_ix")
  @@index([courseid], map: "mdl_toolbricarea_cou_ix")
  @@index([courseid, cmid], map: "mdl_toolbricarea_coucmi_ix")
  @@index([reftable, refid, type], map: "mdl_toolbricarea_refreftyp_ix")
  @@index([type, contextid, component, fieldorarea, itemid], map: "mdl_toolbricarea_typconcomf_ix")
  @@index([type, tablename, itemid, fieldorarea], map: "mdl_toolbricarea_typtabitef_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_cache_acts {
  id               BigInt   @id @default(autoincrement())
  courseid         BigInt
  status           Boolean?
  component        String?  @db.VarChar(64)
  totalactivities  BigInt?
  failedactivities BigInt?
  passedactivities BigInt?
  errorcount       BigInt?

  @@index([courseid], map: "mdl_toolbriccachacts_cou_ix")
  @@index([status], map: "mdl_toolbriccachacts_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_cache_check {
  id         BigInt   @id @default(autoincrement())
  courseid   BigInt
  status     Boolean?
  checkid    BigInt?
  checkcount BigInt?
  errorcount BigInt?

  @@index([courseid], map: "mdl_toolbriccachchec_cou_ix")
  @@index([errorcount], map: "mdl_toolbriccachchec_err_ix")
  @@index([status], map: "mdl_toolbriccachchec_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_checks {
  id         BigInt  @id @default(autoincrement())
  checktype  String? @db.VarChar(64)
  shortname  String? @db.VarChar(64)
  checkgroup BigInt? @default(0)
  status     Int     @db.SmallInt
  severity   Int     @default(0) @db.TinyInt

  @@index([checkgroup], map: "mdl_toolbricchec_che2_ix")
  @@index([checktype], map: "mdl_toolbricchec_che_ix")
  @@index([status], map: "mdl_toolbricchec_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_content {
  id          BigInt  @id @default(autoincrement())
  areaid      BigInt
  contenthash String  @default("") @db.VarChar(40)
  iscurrent   Boolean @default(false)
  status      Int     @default(0) @db.TinyInt
  timecreated BigInt
  timechecked BigInt?

  @@index([areaid], map: "mdl_toolbriccont_are_ix")
  @@index([iscurrent, areaid], map: "mdl_toolbriccont_iscare_ix")
  @@index([status], map: "mdl_toolbriccont_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_errors {
  id         BigInt  @id @default(autoincrement())
  resultid   BigInt
  linenumber BigInt  @default(0)
  errordata  String? @db.LongText
  htmlcode   String? @db.LongText

  @@index([resultid], map: "mdl_toolbricerro_res_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_process {
  id             BigInt  @id @default(autoincrement())
  courseid       BigInt
  item           String? @db.VarChar(64)
  contextid      BigInt?
  innercontextid BigInt?
  timecreated    BigInt?
  timecompleted  BigInt?

  @@index([timecompleted], map: "mdl_toolbricproc_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_results {
  id         BigInt  @id @default(autoincrement())
  contentid  BigInt?
  checkid    BigInt
  errorcount BigInt  @default(0)

  @@index([checkid], map: "mdl_toolbricresu_che_ix")
  @@index([contentid], map: "mdl_toolbricresu_con_ix")
  @@index([contentid, checkid], map: "mdl_toolbricresu_conche_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_schedule {
  id           BigInt  @id @default(autoincrement())
  contextlevel BigInt  @default(50)
  instanceid   BigInt
  contextid    BigInt?
  status       Int     @default(0) @db.TinyInt
  timeanalyzed BigInt? @default(0)
  timemodified BigInt? @default(0)

  @@unique([contextlevel, instanceid], map: "mdl_toolbricsche_conins_uix")
  @@index([status], map: "mdl_toolbricsche_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_brickfield_summary {
  id                BigInt   @id @default(autoincrement())
  courseid          BigInt
  status            Boolean?
  activities        BigInt?
  activitiespassed  BigInt?
  activitiesfailed  BigInt?
  errorschecktype1  BigInt?
  errorschecktype2  BigInt?
  errorschecktype3  BigInt?
  errorschecktype4  BigInt?
  errorschecktype5  BigInt?
  errorschecktype6  BigInt?
  errorschecktype7  BigInt?
  failedchecktype1  BigInt?
  failedchecktype2  BigInt?
  failedchecktype3  BigInt?
  failedchecktype4  BigInt?
  failedchecktype5  BigInt?
  failedchecktype6  BigInt?
  failedchecktype7  BigInt?
  percentchecktype1 BigInt?
  percentchecktype2 BigInt?
  percentchecktype3 BigInt?
  percentchecktype4 BigInt?
  percentchecktype5 BigInt?
  percentchecktype6 BigInt?
  percentchecktype7 BigInt?

  @@index([courseid], map: "mdl_toolbricsumm_cou_ix")
  @@index([status], map: "mdl_toolbricsumm_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_cohortroles {
  id           BigInt  @id @default(autoincrement())
  cohortid     BigInt
  roleid       BigInt
  userid       BigInt
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt?

  @@unique([cohortid, roleid, userid], map: "mdl_toolcoho_cohroluse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_customlang {
  id             BigInt  @id @default(autoincrement())
  lang           String  @default("") @db.VarChar(20)
  componentid    BigInt
  stringid       String  @default("") @db.VarChar(255)
  original       String  @db.LongText
  master         String? @db.LongText
  local          String? @db.LongText
  timemodified   BigInt
  timecustomized BigInt?
  outdated       Int?    @default(0) @db.SmallInt
  modified       Int?    @default(0) @db.SmallInt

  @@unique([lang, componentid, stringid], map: "mdl_toolcust_lancomstr_uix")
  @@index([componentid], map: "mdl_toolcust_com_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_customlang_components {
  id      BigInt  @id @default(autoincrement())
  name    String  @default("") @db.VarChar(255)
  version String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_dataprivacy_category {
  id                BigInt   @id @default(autoincrement())
  name              String   @default("") @db.VarChar(100)
  description       String?  @db.LongText
  descriptionformat Boolean?
  usermodified      BigInt
  timecreated       BigInt
  timemodified      BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_dataprivacy_ctxexpired {
  id             BigInt  @id @default(autoincrement())
  contextid      BigInt  @unique(map: "mdl_tooldatactxe_con_uix")
  unexpiredroles String? @db.LongText
  expiredroles   String? @db.LongText
  defaultexpired Boolean
  status         Int     @default(0) @db.TinyInt
  usermodified   BigInt
  timecreated    BigInt
  timemodified   BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_dataprivacy_ctxinstance {
  id           BigInt  @id @default(autoincrement())
  contextid    BigInt  @unique(map: "mdl_tooldatactxi_con_uix")
  purposeid    BigInt?
  categoryid   BigInt?
  usermodified BigInt
  timecreated  BigInt
  timemodified BigInt

  @@index([categoryid], map: "mdl_tooldatactxi_cat_ix")
  @@index([purposeid], map: "mdl_tooldatactxi_pur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_dataprivacy_ctxlevel {
  id           BigInt  @id @default(autoincrement())
  contextlevel Int     @unique(map: "mdl_tooldatactxl_con_uix") @db.SmallInt
  purposeid    BigInt?
  categoryid   BigInt?
  usermodified BigInt
  timecreated  BigInt
  timemodified BigInt

  @@index([categoryid], map: "mdl_tooldatactxl_cat_ix")
  @@index([purposeid], map: "mdl_tooldatactxl_pur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_dataprivacy_purpose {
  id                   BigInt   @id @default(autoincrement())
  name                 String   @default("") @db.VarChar(100)
  description          String?  @db.LongText
  descriptionformat    Boolean?
  lawfulbases          String   @db.LongText
  sensitivedatareasons String?  @db.LongText
  retentionperiod      String   @default("") @db.VarChar(255)
  protected            Boolean?
  usermodified         BigInt
  timecreated          BigInt
  timemodified         BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_dataprivacy_purposerole {
  id                   BigInt   @id @default(autoincrement())
  purposeid            BigInt
  roleid               BigInt
  lawfulbases          String?  @db.LongText
  sensitivedatareasons String?  @db.LongText
  retentionperiod      String   @default("") @db.VarChar(255)
  protected            Boolean?
  usermodified         BigInt
  timecreated          BigInt
  timemodified         BigInt

  @@unique([purposeid, roleid], map: "mdl_tooldatapurp_purrol_uix")
  @@index([usermodified], map: "innmx_mdl_tooldatapurp_use_ix")
  @@index([purposeid], map: "mdl_tooldatapurp_pur_ix")
  @@index([roleid], map: "mdl_tooldatapurp_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_dataprivacy_request {
  id               BigInt  @id @default(autoincrement())
  type             BigInt  @default(0)
  comments         String? @db.LongText
  commentsformat   Int     @default(0) @db.TinyInt
  userid           BigInt  @default(0)
  requestedby      BigInt  @default(0)
  status           Int     @default(0) @db.TinyInt
  dpo              BigInt? @default(0)
  dpocomment       String? @db.LongText
  dpocommentformat Int     @default(0) @db.TinyInt
  systemapproved   Int     @default(0) @db.SmallInt
  usermodified     BigInt  @default(0)
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)
  creationmethod   BigInt  @default(0)

  @@index([dpo], map: "mdl_tooldatarequ_dpo_ix")
  @@index([requestedby], map: "mdl_tooldatarequ_req_ix")
  @@index([usermodified], map: "mdl_tooldatarequ_use2_ix")
  @@index([userid], map: "mdl_tooldatarequ_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_monitor_events {
  id                BigInt @id @default(autoincrement())
  eventname         String @default("") @db.VarChar(254)
  contextid         BigInt
  contextlevel      BigInt
  contextinstanceid BigInt
  link              String @default("") @db.VarChar(254)
  courseid          BigInt
  timecreated       BigInt

  @@index([contextinstanceid], map: "innmx_mdl_toolmonieven_con2_ix")
  @@index([contextid], map: "innmx_mdl_toolmonieven_con_ix")
  @@index([courseid], map: "innmx_mdl_toolmonieven_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_monitor_history {
  id       BigInt @id @default(autoincrement())
  sid      BigInt
  userid   BigInt
  timesent BigInt

  @@unique([sid, userid, timesent], map: "mdl_toolmonihist_sidusetim_uix")
  @@index([sid], map: "mdl_toolmonihist_sid_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_monitor_rules {
  id                BigInt  @id @default(autoincrement())
  description       String? @db.LongText
  descriptionformat Boolean
  name              String  @default("") @db.VarChar(254)
  userid            BigInt
  courseid          BigInt
  plugin            String  @default("") @db.VarChar(254)
  eventname         String  @default("") @db.VarChar(254)
  template          String  @db.LongText
  templateformat    Boolean
  frequency         Int     @db.SmallInt
  timewindow        Int     @db.MediumInt
  timemodified      BigInt
  timecreated       BigInt

  @@index([courseid, userid], map: "mdl_toolmonirule_couuse_ix")
  @@index([eventname], map: "mdl_toolmonirule_eve_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_monitor_subscriptions {
  id                   BigInt @id @default(autoincrement())
  courseid             BigInt
  ruleid               BigInt
  cmid                 BigInt
  userid               BigInt
  timecreated          BigInt
  lastnotificationsent BigInt @default(0)
  inactivedate         BigInt @default(0)

  @@index([courseid, userid], map: "mdl_toolmonisubs_couuse_ix")
  @@index([ruleid], map: "mdl_toolmonisubs_rul_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_policy {
  id               BigInt  @id @default(autoincrement())
  sortorder        Int     @default(999) @db.MediumInt
  currentversionid BigInt?

  @@index([currentversionid], map: "mdl_toolpoli_cur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_policy_acceptances {
  id              BigInt   @id @default(autoincrement())
  policyversionid BigInt
  userid          BigInt
  status          Boolean?
  lang            String   @default("") @db.VarChar(30)
  usermodified    BigInt
  timecreated     BigInt
  timemodified    BigInt
  note            String?  @db.LongText

  @@unique([policyversionid, userid], map: "mdl_toolpoliacce_poluse_uix")
  @@index([policyversionid], map: "mdl_toolpoliacce_pol_ix")
  @@index([usermodified], map: "mdl_toolpoliacce_use2_ix")
  @@index([userid], map: "mdl_toolpoliacce_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_policy_versions {
  id             BigInt @id @default(autoincrement())
  name           String @default("") @db.VarChar(1333)
  type           Int    @default(0) @db.SmallInt
  audience       Int    @default(0) @db.SmallInt
  archived       Int    @default(0) @db.SmallInt
  usermodified   BigInt
  timecreated    BigInt
  timemodified   BigInt
  policyid       BigInt
  agreementstyle Int    @default(0) @db.SmallInt
  optional       Int    @default(0) @db.SmallInt
  revision       String @default("") @db.VarChar(1333)
  summary        String @db.LongText
  summaryformat  Int    @db.SmallInt
  content        String @db.LongText
  contentformat  Int    @db.SmallInt

  @@index([policyid], map: "mdl_toolpolivers_pol_ix")
  @@index([usermodified], map: "mdl_toolpolivers_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_recyclebin_category {
  id          BigInt @id @default(autoincrement())
  categoryid  BigInt
  shortname   String @default("") @db.VarChar(255)
  fullname    String @default("") @db.VarChar(255)
  timecreated BigInt

  @@index([categoryid], map: "mdl_toolrecycate_cat_ix")
  @@index([timecreated], map: "mdl_toolrecycate_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_recyclebin_course {
  id          BigInt  @id @default(autoincrement())
  courseid    BigInt
  section     BigInt
  module      BigInt
  name        String? @db.VarChar(255)
  timecreated BigInt  @default(0)

  @@index([courseid], map: "mdl_toolrecycour_cou_ix")
  @@index([timecreated], map: "mdl_toolrecycour_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_usertours_steps {
  id            BigInt  @id @default(autoincrement())
  tourid        BigInt
  title         String? @db.LongText
  content       String? @db.LongText
  contentformat Int     @default(0) @db.SmallInt
  targettype    Int     @db.TinyInt
  targetvalue   String  @db.LongText
  sortorder     BigInt  @default(0)
  configdata    String  @db.LongText

  @@index([tourid], map: "mdl_tooluserstep_tou_ix")
  @@index([tourid, sortorder], map: "mdl_tooluserstep_tousor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_tool_usertours_tours {
  id                 BigInt  @id @default(autoincrement())
  name               String  @default("") @db.VarChar(255)
  description        String? @db.LongText
  pathmatch          String? @db.VarChar(255)
  enabled            Boolean @default(false)
  sortorder          BigInt  @default(0)
  endtourlabel       String? @db.VarChar(255)
  configdata         String  @db.LongText
  displaystepnumbers Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_upgrade_log {
  id            BigInt  @id @default(autoincrement())
  type          BigInt
  plugin        String? @db.VarChar(100)
  version       String? @db.VarChar(100)
  targetversion String? @db.VarChar(100)
  info          String  @default("") @db.VarChar(255)
  details       String? @db.LongText
  backtrace     String? @db.LongText
  userid        BigInt
  timemodified  BigInt

  @@index([timemodified], map: "mdl_upgrlog_tim_ix")
  @@index([type, timemodified], map: "mdl_upgrlog_typtim_ix")
  @@index([userid], map: "mdl_upgrlog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_url {
  id             BigInt  @id @default(autoincrement())
  course         BigInt  @default(0)
  name           String  @default("") @db.VarChar(255)
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  externalurl    String  @db.LongText
  display        Int     @default(0) @db.SmallInt
  displayoptions String? @db.LongText
  parameters     String? @db.LongText
  timemodified   BigInt  @default(0)

  @@index([course], map: "mdl_url_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user {
  id                BigInt  @id @default(autoincrement())
  auth              String  @default("manual") @db.VarChar(20)
  confirmed         Boolean @default(false)
  policyagreed      Boolean @default(false)
  deleted           Boolean @default(false)
  suspended         Boolean @default(false)
  mnethostid        BigInt  @default(0)
  username          String  @default("") @db.VarChar(100)
  password          String  @default("") @db.VarChar(255)
  idnumber          String  @default("") @db.VarChar(255)
  firstname         String  @default("") @db.VarChar(100)
  lastname          String  @default("") @db.VarChar(100)
  email             String  @default("") @db.VarChar(100)
  emailstop         Boolean @default(false)
  phone1            String  @default("") @db.VarChar(20)
  phone2            String  @default("") @db.VarChar(20)
  institution       String  @default("") @db.VarChar(255)
  department        String  @default("") @db.VarChar(255)
  address           String  @default("") @db.VarChar(255)
  city              String  @default("") @db.VarChar(120)
  country           String  @default("") @db.VarChar(2)
  lang              String  @default("en") @db.VarChar(30)
  calendartype      String  @default("gregorian") @db.VarChar(30)
  theme             String  @default("") @db.VarChar(50)
  timezone          String  @default("99") @db.VarChar(100)
  firstaccess       BigInt  @default(0)
  lastaccess        BigInt  @default(0)
  lastlogin         BigInt  @default(0)
  currentlogin      BigInt  @default(0)
  lastip            String  @default("") @db.VarChar(45)
  secret            String  @default("") @db.VarChar(15)
  picture           BigInt  @default(0)
  description       String? @db.LongText
  descriptionformat Int     @default(1) @db.TinyInt
  mailformat        Boolean @default(true)
  maildigest        Boolean @default(false)
  maildisplay       Int     @default(2) @db.TinyInt
  autosubscribe     Boolean @default(true)
  trackforums       Boolean @default(false)
  timecreated       BigInt  @default(0)
  timemodified      BigInt  @default(0)
  trustbitmask      BigInt  @default(0)
  imagealt          String? @db.VarChar(255)
  lastnamephonetic  String? @db.VarChar(255)
  firstnamephonetic String? @db.VarChar(255)
  middlename        String? @db.VarChar(255)
  alternatename     String? @db.VarChar(255)
  moodlenetprofile  String? @db.VarChar(255)

  @@unique([mnethostid, username], map: "mdl_user_mneuse_uix")
  @@index([alternatename], map: "mdl_user_alt_ix")
  @@index([auth], map: "mdl_user_aut_ix")
  @@index([city], map: "mdl_user_cit_ix")
  @@index([confirmed], map: "mdl_user_con_ix")
  @@index([country], map: "mdl_user_cou_ix")
  @@index([deleted], map: "mdl_user_del_ix")
  @@index([email], map: "mdl_user_ema_ix")
  @@index([firstnamephonetic], map: "mdl_user_fir2_ix")
  @@index([firstname], map: "mdl_user_fir_ix")
  @@index([idnumber], map: "mdl_user_idn_ix")
  @@index([lastaccess], map: "mdl_user_las2_ix")
  @@index([lastnamephonetic], map: "mdl_user_las3_ix")
  @@index([lastname], map: "mdl_user_las_ix")
  @@index([middlename], map: "mdl_user_mid_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_devices {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt  @default(0)
  appid        String  @default("") @db.VarChar(128)
  name         String  @default("") @db.VarChar(32)
  model        String  @default("") @db.VarChar(32)
  platform     String  @default("") @db.VarChar(32)
  version      String  @default("") @db.VarChar(32)
  pushid       String  @default("") @db.VarChar(255)
  uuid         String  @default("") @db.VarChar(255)
  publickey    String? @db.LongText
  timecreated  BigInt
  timemodified BigInt

  @@unique([pushid, userid], map: "mdl_userdevi_pususe_uix")
  @@index([userid], map: "mdl_userdevi_use_ix")
  @@index([uuid, userid], map: "mdl_userdevi_uuiuse_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_enrolments {
  id           BigInt @id @default(autoincrement())
  status       BigInt @default(0)
  enrolid      BigInt
  userid       BigInt
  timestart    BigInt @default(0)
  timeend      BigInt @default(2147483647)
  modifierid   BigInt @default(0)
  timecreated  BigInt @default(0)
  timemodified BigInt @default(0)

  @@unique([enrolid, userid], map: "mdl_userenro_enruse_uix")
  @@index([enrolid], map: "mdl_userenro_enr_ix")
  @@index([modifierid], map: "mdl_userenro_mod_ix")
  @@index([userid], map: "mdl_userenro_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_info_category {
  id        BigInt @id @default(autoincrement())
  name      String @default("") @db.VarChar(255)
  sortorder BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_info_data {
  id         BigInt @id @default(autoincrement())
  userid     BigInt @default(0)
  fieldid    BigInt @default(0)
  data       String @db.LongText
  dataformat Int    @default(0) @db.TinyInt

  @@unique([userid, fieldid], map: "mdl_userinfodata_usefie_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_info_field {
  id                BigInt  @id @default(autoincrement())
  shortname         String  @default("shortname") @db.VarChar(255)
  name              String  @db.LongText
  datatype          String  @default("") @db.VarChar(255)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  categoryid        BigInt  @default(0)
  sortorder         BigInt  @default(0)
  required          Int     @default(0) @db.TinyInt
  locked            Int     @default(0) @db.TinyInt
  visible           Int     @default(0) @db.SmallInt
  forceunique       Int     @default(0) @db.TinyInt
  signup            Int     @default(0) @db.TinyInt
  defaultdata       String? @db.LongText
  defaultdataformat Int     @default(0) @db.TinyInt
  param1            String? @db.LongText
  param2            String? @db.LongText
  param3            String? @db.LongText
  param4            String? @db.LongText
  param5            String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_lastaccess {
  id         BigInt @id @default(autoincrement())
  userid     BigInt @default(0)
  courseid   BigInt @default(0)
  timeaccess BigInt @default(0)

  @@unique([userid, courseid], map: "mdl_userlast_usecou_uix")
  @@index([courseid], map: "mdl_userlast_cou_ix")
  @@index([userid], map: "mdl_userlast_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_password_history {
  id          BigInt @id @default(autoincrement())
  userid      BigInt
  hash        String @default("") @db.VarChar(255)
  timecreated BigInt

  @@index([userid], map: "mdl_userpasshist_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_password_resets {
  id              BigInt @id @default(autoincrement())
  userid          BigInt
  timerequested   BigInt
  timererequested BigInt @default(0)
  token           String @default("") @db.VarChar(32)

  @@index([userid], map: "mdl_userpassrese_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_preferences {
  id     BigInt @id @default(autoincrement())
  userid BigInt @default(0)
  name   String @default("") @db.VarChar(255)
  value  String @default("") @db.VarChar(1333)

  @@unique([userid, name], map: "mdl_userpref_usenam_uix")
  @@index([name], map: "mdl_userpref_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_user_private_key {
  id            BigInt  @id @default(autoincrement())
  script        String  @default("") @db.VarChar(128)
  value         String  @default("") @db.VarChar(128)
  userid        BigInt
  instance      BigInt?
  iprestriction String? @db.VarChar(255)
  validuntil    BigInt?
  timecreated   BigInt?

  @@index([script, value], map: "mdl_userprivkey_scrval_ix")
  @@index([userid], map: "mdl_userprivkey_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_wiki {
  id             BigInt  @id @default(autoincrement())
  course         BigInt  @default(0)
  name           String  @default("Wiki") @db.VarChar(255)
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  timecreated    BigInt  @default(0)
  timemodified   BigInt  @default(0)
  firstpagetitle String  @default("First Page") @db.VarChar(255)
  wikimode       String  @default("collaborative") @db.VarChar(20)
  defaultformat  String  @default("creole") @db.VarChar(20)
  forceformat    Boolean @default(true)
  editbegin      BigInt  @default(0)
  editend        BigInt? @default(0)

  @@index([course], map: "mdl_wiki_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_wiki_links {
  id            BigInt  @id @default(autoincrement())
  subwikiid     BigInt  @default(0)
  frompageid    BigInt  @default(0)
  topageid      BigInt  @default(0)
  tomissingpage String? @db.VarChar(255)

  @@index([frompageid], map: "mdl_wikilink_fro_ix")
  @@index([subwikiid], map: "mdl_wikilink_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_wiki_locks {
  id          BigInt  @id @default(autoincrement())
  pageid      BigInt  @default(0)
  sectionname String? @db.VarChar(255)
  userid      BigInt  @default(0)
  lockedat    BigInt  @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_wiki_pages {
  id            BigInt  @id @default(autoincrement())
  subwikiid     BigInt  @default(0)
  title         String  @default("title") @db.VarChar(255)
  cachedcontent String  @db.LongText
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)
  timerendered  BigInt  @default(0)
  userid        BigInt  @default(0)
  pageviews     BigInt  @default(0)
  readonly      Boolean @default(false)

  @@unique([subwikiid, title, userid], map: "mdl_wikipage_subtituse_uix")
  @@index([subwikiid], map: "mdl_wikipage_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_wiki_subwikis {
  id      BigInt @id @default(autoincrement())
  wikiid  BigInt @default(0)
  groupid BigInt @default(0)
  userid  BigInt @default(0)

  @@unique([wikiid, groupid, userid], map: "mdl_wikisubw_wikgrouse_uix")
  @@index([wikiid], map: "mdl_wikisubw_wik_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_wiki_synonyms {
  id          BigInt @id @default(autoincrement())
  subwikiid   BigInt @default(0)
  pageid      BigInt @default(0)
  pagesynonym String @default("Pagesynonym") @db.VarChar(255)

  @@unique([pageid, pagesynonym], map: "mdl_wikisyno_pagpag_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_wiki_versions {
  id            BigInt @id @default(autoincrement())
  pageid        BigInt @default(0)
  content       String @db.LongText
  contentformat String @default("creole") @db.VarChar(20)
  version       Int    @default(0) @db.MediumInt
  timecreated   BigInt @default(0)
  userid        BigInt @default(0)

  @@index([pageid], map: "mdl_wikivers_pag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshop {
  id                       BigInt   @id @default(autoincrement())
  course                   BigInt
  name                     String   @default("") @db.VarChar(255)
  intro                    String?  @db.LongText
  introformat              Int      @default(0) @db.SmallInt
  instructauthors          String?  @db.LongText
  instructauthorsformat    Int      @default(0) @db.SmallInt
  instructreviewers        String?  @db.LongText
  instructreviewersformat  Int      @default(0) @db.SmallInt
  timemodified             BigInt
  phase                    Int?     @default(0) @db.SmallInt
  useexamples              Int?     @default(0) @db.TinyInt
  usepeerassessment        Int?     @default(0) @db.TinyInt
  useselfassessment        Int?     @default(0) @db.TinyInt
  grade                    Decimal? @default(80.00000) @db.Decimal(10, 5)
  gradinggrade             Decimal? @default(20.00000) @db.Decimal(10, 5)
  strategy                 String   @default("") @db.VarChar(30)
  evaluation               String   @default("") @db.VarChar(30)
  gradedecimals            Int?     @default(0) @db.SmallInt
  submissiontypetext       Boolean  @default(true)
  submissiontypefile       Boolean  @default(true)
  nattachments             Int?     @default(1) @db.SmallInt
  submissionfiletypes      String?  @db.VarChar(255)
  latesubmissions          Int?     @default(0) @db.TinyInt
  maxbytes                 BigInt?  @default(100000)
  examplesmode             Int?     @default(0) @db.SmallInt
  submissionstart          BigInt?  @default(0)
  submissionend            BigInt?  @default(0)
  assessmentstart          BigInt?  @default(0)
  assessmentend            BigInt?  @default(0)
  phaseswitchassessment    Int      @default(0) @db.TinyInt
  conclusion               String?  @db.LongText
  conclusionformat         Int      @default(1) @db.SmallInt
  overallfeedbackmode      Int?     @default(1) @db.SmallInt
  overallfeedbackfiles     Int?     @default(0) @db.SmallInt
  overallfeedbackfiletypes String?  @db.VarChar(255)
  overallfeedbackmaxbytes  BigInt?  @default(100000)

  @@index([course], map: "mdl_work_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshop_aggregations {
  id           BigInt   @id @default(autoincrement())
  workshopid   BigInt
  userid       BigInt
  gradinggrade Decimal? @db.Decimal(10, 5)
  timegraded   BigInt?

  @@unique([workshopid, userid], map: "mdl_workaggr_woruse_uix")
  @@index([userid], map: "mdl_workaggr_use_ix")
  @@index([workshopid], map: "mdl_workaggr_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshop_assessments {
  id                       BigInt   @id @default(autoincrement())
  submissionid             BigInt
  reviewerid               BigInt
  weight                   BigInt   @default(1)
  timecreated              BigInt?  @default(0)
  timemodified             BigInt?  @default(0)
  grade                    Decimal? @db.Decimal(10, 5)
  gradinggrade             Decimal? @db.Decimal(10, 5)
  gradinggradeover         Decimal? @db.Decimal(10, 5)
  gradinggradeoverby       BigInt?
  feedbackauthor           String?  @db.LongText
  feedbackauthorformat     Int?     @default(0) @db.SmallInt
  feedbackauthorattachment Int?     @default(0) @db.SmallInt
  feedbackreviewer         String?  @db.LongText
  feedbackreviewerformat   Int?     @default(0) @db.SmallInt

  @@index([gradinggradeoverby], map: "mdl_workasse_gra_ix")
  @@index([reviewerid], map: "mdl_workasse_rev_ix")
  @@index([submissionid], map: "mdl_workasse_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshop_grades {
  id                BigInt   @id @default(autoincrement())
  assessmentid      BigInt
  strategy          String   @default("") @db.VarChar(30)
  dimensionid       BigInt
  grade             Decimal? @db.Decimal(10, 5)
  peercomment       String?  @db.LongText
  peercommentformat Int?     @default(0) @db.SmallInt

  @@unique([assessmentid, strategy, dimensionid], map: "mdl_workgrad_assstrdim_uix")
  @@index([assessmentid], map: "mdl_workgrad_ass_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshop_submissions {
  id                   BigInt   @id @default(autoincrement())
  workshopid           BigInt
  example              Int?     @default(0) @db.TinyInt
  authorid             BigInt
  timecreated          BigInt
  timemodified         BigInt
  title                String   @default("") @db.VarChar(255)
  content              String?  @db.LongText
  contentformat        Int      @default(0) @db.SmallInt
  contenttrust         Int      @default(0) @db.SmallInt
  attachment           Int?     @default(0) @db.TinyInt
  grade                Decimal? @db.Decimal(10, 5)
  gradeover            Decimal? @db.Decimal(10, 5)
  gradeoverby          BigInt?
  feedbackauthor       String?  @db.LongText
  feedbackauthorformat Int?     @default(0) @db.SmallInt
  timegraded           BigInt?
  published            Int?     @default(0) @db.TinyInt
  late                 Int      @default(0) @db.TinyInt

  @@index([authorid], map: "mdl_worksubm_aut_ix")
  @@index([gradeoverby], map: "mdl_worksubm_gra_ix")
  @@index([workshopid], map: "mdl_worksubm_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopallocation_scheduled {
  id            BigInt  @id @default(autoincrement())
  workshopid    BigInt  @unique(map: "mdl_worksche_wor_uix")
  enabled       Int     @default(0) @db.TinyInt
  submissionend BigInt
  timeallocated BigInt?
  settings      String? @db.LongText
  resultstatus  BigInt?
  resultmessage String? @db.VarChar(1333)
  resultlog     String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopeval_best_settings {
  id         BigInt @id @default(autoincrement())
  workshopid BigInt @unique(map: "mdl_workbestsett_wor_uix")
  comparison Int?   @default(5) @db.SmallInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopform_accumulative {
  id                BigInt  @id @default(autoincrement())
  workshopid        BigInt
  sort              BigInt? @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt
  grade             BigInt
  weight            Int?    @default(1) @db.MediumInt

  @@index([workshopid], map: "mdl_workaccu_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopform_comments {
  id                BigInt  @id @default(autoincrement())
  workshopid        BigInt
  sort              BigInt? @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt

  @@index([workshopid], map: "mdl_workcomm_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopform_numerrors {
  id                BigInt  @id @default(autoincrement())
  workshopid        BigInt
  sort              BigInt? @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt
  descriptiontrust  BigInt?
  grade0            String? @db.VarChar(50)
  grade1            String? @db.VarChar(50)
  weight            Int?    @default(1) @db.MediumInt

  @@index([workshopid], map: "mdl_worknume_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopform_numerrors_map {
  id         BigInt  @id @default(autoincrement())
  workshopid BigInt
  nonegative BigInt
  grade      Decimal @db.Decimal(10, 5)

  @@unique([workshopid, nonegative], map: "mdl_worknumemap_wornon_uix")
  @@index([workshopid], map: "mdl_worknumemap_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopform_rubric {
  id                BigInt  @id @default(autoincrement())
  workshopid        BigInt
  sort              BigInt? @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt

  @@index([workshopid], map: "mdl_workrubr_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopform_rubric_config {
  id         BigInt  @id @default(autoincrement())
  workshopid BigInt  @unique(map: "mdl_workrubrconf_wor_uix")
  layout     String? @default("list") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model innmx_mdl_workshopform_rubric_levels {
  id               BigInt  @id @default(autoincrement())
  dimensionid      BigInt
  grade            Decimal @db.Decimal(10, 5)
  definition       String? @db.LongText
  definitionformat Int?    @default(0) @db.SmallInt

  @@index([dimensionid], map: "mdl_workrubrleve_dim_ix")
}

model inteli_assessment_conversations {
  id                          Int                                          @id @default(autoincrement())
  attempt_id                  Int
  message_type                inteli_assessment_conversations_message_type
  message_text                String                                       @db.MediumText
  created_at                  DateTime                                     @default(now()) @db.DateTime(0)
  inteli_assessments_attempts inteli_assessments_attempts                  @relation(fields: [attempt_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inteli_assessment_conversations_ibfk_1")

  @@index([attempt_id], map: "attempt_id")
}

model inteli_assessments {
  id                          Int                           @id @unique(map: "id_UNIQUE") @default(autoincrement())
  institution_id              Int
  teacher_id                  Int
  show_teacher_name           Int                           @default(0) @db.TinyInt
  name                        String                        @db.VarChar(45)
  description                 String                        @db.VarChar(1024)
  difficulty_level            String                        @db.VarChar(45)
  educational_level           String                        @db.VarChar(45)
  output_language             String                        @db.VarChar(45)
  evaluation_context          String                        @db.VarChar(1024)
  case_text                   String                        @db.VarChar(8192)
  questions_per_skill         Int
  available_from              DateTime                      @db.DateTime(0)
  available_until             DateTime                      @db.DateTime(0)
  dispute_period              Int                           @default(3)
  created_at                  DateTime                      @default(now()) @db.DateTime(0)
  updated_at                  DateTime                      @default(now()) @db.DateTime(0)
  status                      inteli_assessments_status     @default(Active)
  inteli_institutions         inteli_institutions           @relation(fields: [institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ia_institution")
  inteli_users                inteli_users                  @relation(fields: [teacher_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ia_user")
  inteli_assessments_attempts inteli_assessments_attempts[]
  inteli_assessments_groups   inteli_assessments_groups[]
  inteli_assessments_skills   inteli_assessments_skills[]

  @@index([institution_id], map: "fk_ia_institution_idx")
  @@index([teacher_id], map: "fk_ia_user_idx")
}

model inteli_assessments_attempts {
  id                              Int                                @id @unique(map: "id_UNIQUE") @default(autoincrement())
  assessment_id                   Int
  user_id                         Int
  final_grade                     Decimal                            @default(0.00) @db.Decimal(9, 2)
  created_at                      DateTime                           @default(now()) @db.DateTime(0)
  updated_at                      DateTime                           @default(now()) @db.DateTime(0)
  completed_at                    DateTime?                          @db.DateTime(0)
  status                          inteli_assessments_attempts_status
  inteli_assessment_conversations inteli_assessment_conversations[]
  inteli_assessments              inteli_assessments                 @relation(fields: [assessment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_aa_assessment")
  inteli_users                    inteli_users                       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_aa_user")
  inteli_assessments_results      inteli_assessments_results[]

  @@index([assessment_id], map: "fk_aa_assessment_idx")
  @@index([user_id], map: "fk_aa_user_idx")
}

model inteli_assessments_disputes {
  id                         Int                                @id @unique(map: "id_UNIQUE") @default(autoincrement())
  result_id                  Int
  status                     inteli_assessments_disputes_status
  student_argument           String?                            @db.VarChar(1024)
  teacher_argument           String?                            @db.VarChar(1024)
  created_at                 DateTime                           @default(now()) @db.DateTime(0)
  update_at                  DateTime                           @default(now()) @db.DateTime(0)
  inteli_assessments_results inteli_assessments_results         @relation(fields: [result_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ad_result")

  @@index([result_id], map: "fk_ad_result_idx")
}

model inteli_assessments_groups {
  id                 Int                @id @unique(map: "id_UNIQUE") @default(autoincrement())
  assessment_id      Int
  group_id           Int
  inteli_assessments inteli_assessments @relation(fields: [assessment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ag_assessment")
  inteli_groups      inteli_groups      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ag_group")

  @@index([assessment_id], map: "fk_ag_assessment_idx")
  @@index([group_id], map: "fk_ag_group_idx")
}

model inteli_assessments_results {
  id                          Int                           @id @unique(map: "id_UNIQUE") @default(autoincrement())
  attempt_id                  Int
  skill_id                    Int
  skill_level_id              Int
  feedback                    String?                       @db.VarChar(1256)
  inteli_assessments_disputes inteli_assessments_disputes[]
  inteli_assessments_attempts inteli_assessments_attempts   @relation(fields: [attempt_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ar_attempt")
  inteli_skills               inteli_skills                 @relation(fields: [skill_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ar_skill")
  inteli_skills_levels        inteli_skills_levels          @relation(fields: [skill_level_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ar_skill_level")

  @@index([attempt_id], map: "fk_ar_attempt_idx")
  @@index([skill_id], map: "fk_ar_skill_idx")
  @@index([skill_level_id], map: "fk_ar_skill_level_idx")
}

model inteli_assessments_skills {
  id                 Int                @id @unique(map: "id_UNIQUE") @default(autoincrement())
  assessment_id      Int
  skill_id           Int
  inteli_assessments inteli_assessments @relation(fields: [assessment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_as_assessment")
  inteli_skills      inteli_skills      @relation(fields: [skill_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_as_skill")

  @@index([assessment_id], map: "fk_as_assessment_idx")
  @@index([skill_id], map: "fk_as_skill_idx")
}

model inteli_domains {
  id                  Int                 @id @unique(map: "id_UNIQUE") @default(autoincrement())
  institution_id      Int
  name                String              @db.VarChar(45)
  description         String              @db.VarChar(1024)
  inteli_institutions inteli_institutions @relation(fields: [institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_institution_domains")
  inteli_skills       inteli_skills[]

  @@index([institution_id], map: "fk_institution_domains")
}

model inteli_groups {
  id                        Int                         @id @unique(map: "id_UNIQUE") @default(autoincrement())
  institution_id            Int
  name                      String                      @unique(map: "name_UNIQUE") @db.VarChar(255)
  description               String                      @db.Text
  created_at                DateTime                    @default(now()) @db.DateTime(0)
  updated_at                DateTime                    @default(now()) @db.DateTime(0)
  inteli_assessments_groups inteli_assessments_groups[]
  inteli_institutions       inteli_institutions         @relation(fields: [institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_institution_groups")
  inteli_users_groups       inteli_users_groups[]

  @@index([institution_id], map: "fk_institution_groups")
}

model inteli_institutions {
  id                 Int                  @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name               String               @db.VarChar(45)
  contact_name       String               @db.VarChar(255)
  contact_email      String               @db.VarChar(255)
  created_at         DateTime             @default(now()) @db.DateTime(0)
  updated_at         DateTime             @default(now()) @db.DateTime(0)
  inteli_assessments inteli_assessments[]
  inteli_domains     inteli_domains[]
  inteli_groups      inteli_groups[]
  inteli_skills      inteli_skills[]
  inteli_users       inteli_users[]
}

model inteli_prompts {
  id      Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  purpose String @db.VarChar(45)
  prompt  String @db.VarChar(1024)
}

model inteli_skills {
  id                         Int                          @id @unique(map: "id_UNIQUE") @default(autoincrement())
  institution_id             Int
  domain_id                  Int
  name                       String                       @db.VarChar(255)
  description                String                       @db.VarChar(1024)
  created_at                 DateTime                     @default(now()) @db.DateTime(0)
  updated_at                 DateTime                     @default(now()) @db.DateTime(0)
  inteli_assessments_results inteli_assessments_results[]
  inteli_assessments_skills  inteli_assessments_skills[]
  inteli_institutions        inteli_institutions          @relation(fields: [institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_institution_skills")
  inteli_domains             inteli_domains               @relation(fields: [domain_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_domain")
  inteli_skills_levels       inteli_skills_levels[]

  @@index([institution_id], map: "fk_institution_skills")
  @@index([domain_id], map: "fk_is_domain_idx")
}

model inteli_skills_levels {
  id                         Int                          @id @unique(map: "id_UNIQUE") @default(autoincrement())
  skill_id                   Int
  order                      Int
  label                      String                       @db.VarChar(45)
  description                String                       @db.VarChar(1024)
  inteli_assessments_results inteli_assessments_results[]
  inteli_skills              inteli_skills                @relation(fields: [skill_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sl_skill")

  @@index([skill_id], map: "fk_sl_skill_idx")
}

model inteli_skills_levels_settings {
  id             Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  institution_id Int
  order          Int
  label          String @db.VarChar(45)
  description    String @db.VarChar(1024)
}

model inteli_users {
  id                          Int                           @id @unique(map: "id_UNIQUE") @default(autoincrement())
  institution_id              Int
  email                       String                        @unique(map: "email_UNIQUE") @db.VarChar(255)
  password                    String                        @db.VarChar(255)
  given_name                  String                        @db.VarChar(45)
  family_name                 String                        @db.VarChar(45)
  role                        inteli_users_role
  language_preference         String                        @default("es") @db.Char(2)
  reset_token                 String?                       @db.VarChar(128)
  reset_token_expiry          DateTime?                     @db.DateTime(0)
  created_at                  DateTime                      @default(now()) @db.DateTime(0)
  updated_at                  DateTime                      @default(now()) @db.DateTime(0)
  inteli_assessments          inteli_assessments[]
  inteli_assessments_attempts inteli_assessments_attempts[]
  inteli_institutions         inteli_institutions           @relation(fields: [institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_institution")
  inteli_users_groups         inteli_users_groups[]

  @@index([institution_id], map: "fk_institution_idx")
}

model inteli_users_groups {
  id            Int           @id @unique(map: "id_UNIQUE") @default(autoincrement())
  user_id       Int
  group_id      Int
  inteli_groups inteli_groups @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "group_id")
  inteli_users  inteli_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id")

  @@index([group_id], map: "group_id_idx")
  @@index([user_id], map: "user_id_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_adminpresets {
  id            BigInt  @id @default(autoincrement())
  userid        BigInt
  name          String  @default("") @db.VarChar(255)
  comments      String? @db.LongText
  site          String  @default("") @db.VarChar(255)
  author        String? @db.VarChar(255)
  moodleversion String  @default("") @db.VarChar(20)
  moodlerelease String  @default("") @db.VarChar(255)
  iscore        Boolean @default(false)
  timecreated   BigInt  @default(0)
  timeimported  BigInt  @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_adminpresets_app {
  id            BigInt @id @default(autoincrement())
  adminpresetid BigInt
  userid        BigInt
  time          BigInt

  @@index([adminpresetid], map: "sandbox_admiapp_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_adminpresets_app_it {
  id                 BigInt @id @default(autoincrement())
  adminpresetapplyid BigInt
  configlogid        BigInt

  @@index([adminpresetapplyid], map: "sandbox_admiappit_adm_ix")
  @@index([configlogid], map: "sandbox_admiappit_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_adminpresets_app_it_a {
  id                 BigInt  @id @default(autoincrement())
  adminpresetapplyid BigInt
  configlogid        BigInt
  itemname           String? @db.VarChar(100)

  @@index([adminpresetapplyid], map: "sandbox_admiappita_adm_ix")
  @@index([configlogid], map: "sandbox_admiappita_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_adminpresets_app_plug {
  id                 BigInt  @id @default(autoincrement())
  adminpresetapplyid BigInt
  plugin             String? @db.VarChar(100)
  name               String  @default("") @db.VarChar(100)
  value              Int     @default(0) @db.SmallInt
  oldvalue           Int     @default(0) @db.SmallInt

  @@index([adminpresetapplyid], map: "sandbox_admiappplug_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_adminpresets_it {
  id            BigInt  @id @default(autoincrement())
  adminpresetid BigInt
  plugin        String? @db.VarChar(100)
  name          String  @default("") @db.VarChar(100)
  value         String? @db.LongText

  @@index([adminpresetid], map: "sandbox_admiit_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_adminpresets_it_a {
  id     BigInt  @id @default(autoincrement())
  itemid BigInt
  name   String  @default("") @db.VarChar(100)
  value  String? @db.LongText

  @@index([itemid], map: "sandbox_admiita_ite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_adminpresets_plug {
  id            BigInt  @id @default(autoincrement())
  adminpresetid BigInt
  plugin        String? @db.VarChar(100)
  name          String  @default("") @db.VarChar(100)
  enabled       Int     @default(0) @db.SmallInt

  @@index([adminpresetid], map: "sandbox_admiplug_adm_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_ai_action_generate_image {
  id            BigInt  @id @default(autoincrement())
  prompt        String? @db.LongText
  numberimages  BigInt
  quality       String  @default("") @db.VarChar(21)
  aspectratio   String? @db.VarChar(20)
  style         String? @db.VarChar(20)
  sourceurl     String? @db.LongText
  revisedprompt String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_ai_action_generate_text {
  id               BigInt  @id @default(autoincrement())
  prompt           String? @db.LongText
  responseid       String? @db.VarChar(128)
  fingerprint      String? @db.VarChar(128)
  generatedcontent String? @db.LongText
  finishreason     String? @db.VarChar(128)
  prompttokens     BigInt?
  completiontoken  BigInt?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_ai_action_register {
  id            BigInt  @id @default(autoincrement())
  actionname    String  @default("") @db.VarChar(100)
  actionid      BigInt
  success       Boolean @default(false)
  userid        BigInt
  contextid     BigInt
  provider      String  @default("") @db.VarChar(100)
  errorcode     Int?    @db.SmallInt
  errormessage  String? @db.LongText
  timecreated   BigInt
  timecompleted BigInt?

  @@unique([actionname, actionid], map: "sandbox_aiactiregi_actact_uix")
  @@index([actionname, provider], map: "sandbox_aiactiregi_actpro_ix")
  @@index([userid], map: "sandbox_aiactiregi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_ai_action_summarise_text {
  id               BigInt  @id @default(autoincrement())
  prompt           String? @db.LongText
  responseid       String? @db.VarChar(128)
  fingerprint      String? @db.VarChar(128)
  generatedcontent String? @db.LongText
  finishreason     String? @db.VarChar(128)
  prompttokens     BigInt?
  completiontoken  BigInt?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_ai_policy_register {
  id           BigInt @id @default(autoincrement())
  userid       BigInt @unique(map: "sandbox_aipoliregi_use_uix")
  contextid    BigInt
  timeaccepted BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_indicator_calc {
  id           BigInt   @id @default(autoincrement())
  starttime    BigInt
  endtime      BigInt
  contextid    BigInt
  sampleorigin String   @default("") @db.VarChar(255)
  sampleid     BigInt
  indicator    String   @default("") @db.VarChar(255)
  value        Decimal? @db.Decimal(10, 2)
  timecreated  BigInt

  @@index([contextid], map: "sandbox_analindicalc_con_ix")
  @@index([starttime, endtime, contextid], map: "sandbox_analindicalc_staend_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_models {
  id                   BigInt  @id @default(autoincrement())
  enabled              Boolean @default(false)
  trained              Boolean @default(false)
  name                 String? @db.VarChar(1333)
  target               String  @default("") @db.VarChar(255)
  indicators           String  @db.LongText
  timesplitting        String? @db.VarChar(255)
  predictionsprocessor String? @db.VarChar(255)
  version              BigInt
  contextids           String? @db.LongText
  timecreated          BigInt?
  timemodified         BigInt
  usermodified         BigInt

  @@index([enabled, trained], map: "sandbox_analmode_enatra_ix")
  @@index([usermodified], map: "sandbox_analmode_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_models_log {
  id             BigInt  @id @default(autoincrement())
  modelid        BigInt
  version        BigInt
  evaluationmode String  @default("") @db.VarChar(50)
  target         String  @default("") @db.VarChar(255)
  indicators     String  @db.LongText
  timesplitting  String? @db.VarChar(255)
  score          Decimal @default(0.00000) @db.Decimal(10, 5)
  info           String? @db.LongText
  dir            String  @db.LongText
  timecreated    BigInt
  usermodified   BigInt

  @@index([modelid], map: "sandbox_analmodelog_mod_ix")
  @@index([usermodified], map: "sandbox_analmodelog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_predict_samples {
  id            BigInt @id @default(autoincrement())
  modelid       BigInt
  analysableid  BigInt
  timesplitting String @default("") @db.VarChar(255)
  rangeindex    BigInt
  sampleids     String @db.LongText
  timecreated   BigInt @default(0)
  timemodified  BigInt @default(0)

  @@index([modelid], map: "sandbox_analpredsamp_mod_ix")
  @@index([modelid, analysableid, timesplitting, rangeindex], map: "sandbox_analpredsamp_modana_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_prediction_actions {
  id           BigInt @id @default(autoincrement())
  predictionid BigInt
  userid       BigInt
  actionname   String @default("") @db.VarChar(255)
  timecreated  BigInt

  @@index([predictionid], map: "sandbox_analpredacti_pre_ix")
  @@index([predictionid, userid, actionname], map: "sandbox_analpredacti_preuse_ix")
  @@index([userid], map: "sandbox_analpredacti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_predictions {
  id              BigInt  @id @default(autoincrement())
  modelid         BigInt
  contextid       BigInt
  sampleid        BigInt
  rangeindex      Int     @db.MediumInt
  prediction      Decimal @db.Decimal(10, 2)
  predictionscore Decimal @db.Decimal(10, 5)
  calculations    String  @db.LongText
  timecreated     BigInt  @default(0)
  timestart       BigInt?
  timeend         BigInt?

  @@index([contextid], map: "sandbox_analpred_con_ix")
  @@index([modelid], map: "sandbox_analpred_mod_ix")
  @@index([modelid, contextid], map: "sandbox_analpred_modcon_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_train_samples {
  id            BigInt @id @default(autoincrement())
  modelid       BigInt
  analysableid  BigInt
  timesplitting String @default("") @db.VarChar(255)
  sampleids     String @db.LongText
  timecreated   BigInt @default(0)

  @@index([modelid], map: "sandbox_analtraisamp_mod_ix")
  @@index([modelid, analysableid, timesplitting], map: "sandbox_analtraisamp_modana_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_used_analysables {
  id            BigInt @id @default(autoincrement())
  modelid       BigInt
  action        String @default("") @db.VarChar(50)
  analysableid  BigInt
  firstanalysis BigInt
  timeanalysed  BigInt

  @@index([analysableid], map: "sandbox_analusedanal_ana_ix")
  @@index([modelid], map: "sandbox_analusedanal_mod_ix")
  @@index([modelid, action], map: "sandbox_analusedanal_modact_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_analytics_used_files {
  id      BigInt @id @default(autoincrement())
  modelid BigInt @default(0)
  fileid  BigInt @default(0)
  action  String @default("") @db.VarChar(50)
  time    BigInt @default(0)

  @@index([fileid], map: "sandbox_analusedfile_fil_ix")
  @@index([modelid], map: "sandbox_analusedfile_mod_ix")
  @@index([modelid, action, fileid], map: "sandbox_analusedfile_modact_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assign {
  id                          BigInt  @id @default(autoincrement())
  course                      BigInt  @default(0)
  name                        String  @default("") @db.VarChar(255)
  intro                       String  @db.LongText
  introformat                 Int     @default(0) @db.SmallInt
  alwaysshowdescription       Int     @default(0) @db.TinyInt
  nosubmissions               Int     @default(0) @db.TinyInt
  submissiondrafts            Int     @default(0) @db.TinyInt
  sendnotifications           Int     @default(0) @db.TinyInt
  sendlatenotifications       Int     @default(0) @db.TinyInt
  duedate                     BigInt  @default(0)
  allowsubmissionsfromdate    BigInt  @default(0)
  grade                       BigInt  @default(0)
  timemodified                BigInt  @default(0)
  requiresubmissionstatement  Int     @default(0) @db.TinyInt
  completionsubmit            Int     @default(0) @db.TinyInt
  cutoffdate                  BigInt  @default(0)
  gradingduedate              BigInt  @default(0)
  teamsubmission              Int     @default(0) @db.TinyInt
  requireallteammemberssubmit Int     @default(0) @db.TinyInt
  teamsubmissiongroupingid    BigInt  @default(0)
  blindmarking                Int     @default(0) @db.TinyInt
  hidegrader                  Int     @default(0) @db.TinyInt
  revealidentities            Int     @default(0) @db.TinyInt
  attemptreopenmethod         String  @default("untilpass") @db.VarChar(10)
  maxattempts                 Int     @default(1) @db.MediumInt
  markingworkflow             Int     @default(0) @db.TinyInt
  markingallocation           Int     @default(0) @db.TinyInt
  markinganonymous            Int     @default(0) @db.TinyInt
  sendstudentnotifications    Int     @default(1) @db.TinyInt
  preventsubmissionnotingroup Int     @default(0) @db.TinyInt
  activity                    String? @db.LongText
  activityformat              Int     @default(0) @db.SmallInt
  timelimit                   BigInt  @default(0)
  submissionattachments       Int     @default(0) @db.TinyInt

  @@index([course], map: "sandbox_assi_cou_ix")
  @@index([teamsubmissiongroupingid], map: "sandbox_assi_tea_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assign_grades {
  id            BigInt   @id @default(autoincrement())
  assignment    BigInt   @default(0)
  userid        BigInt   @default(0)
  timecreated   BigInt   @default(0)
  timemodified  BigInt   @default(0)
  grader        BigInt   @default(0)
  grade         Decimal? @default(0.00000) @db.Decimal(10, 5)
  attemptnumber BigInt   @default(0)

  @@unique([assignment, userid, attemptnumber], map: "sandbox_assigrad_assuseatt_uix")
  @@index([assignment], map: "sandbox_assigrad_ass_ix")
  @@index([attemptnumber], map: "sandbox_assigrad_att_ix")
  @@index([userid], map: "sandbox_assigrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assign_overrides {
  id                       BigInt  @id @default(autoincrement())
  assignid                 BigInt  @default(0)
  groupid                  BigInt?
  userid                   BigInt?
  sortorder                BigInt?
  allowsubmissionsfromdate BigInt?
  duedate                  BigInt?
  cutoffdate               BigInt?
  timelimit                BigInt?

  @@index([assignid], map: "sandbox_assiover_ass_ix")
  @@index([groupid], map: "sandbox_assiover_gro_ix")
  @@index([userid], map: "sandbox_assiover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assign_plugin_config {
  id         BigInt  @id @default(autoincrement())
  assignment BigInt  @default(0)
  plugin     String  @default("") @db.VarChar(28)
  subtype    String  @default("") @db.VarChar(28)
  name       String  @default("") @db.VarChar(28)
  value      String? @db.LongText

  @@index([assignment], map: "sandbox_assiplugconf_ass_ix")
  @@index([name], map: "sandbox_assiplugconf_nam_ix")
  @@index([plugin], map: "sandbox_assiplugconf_plu_ix")
  @@index([subtype], map: "sandbox_assiplugconf_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assign_submission {
  id            BigInt  @id @default(autoincrement())
  assignment    BigInt  @default(0)
  userid        BigInt  @default(0)
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)
  timestarted   BigInt?
  status        String? @db.VarChar(10)
  groupid       BigInt  @default(0)
  attemptnumber BigInt  @default(0)
  latest        Int     @default(0) @db.TinyInt

  @@unique([assignment, userid, groupid, attemptnumber], map: "sandbox_assisubm_assusegro_uix")
  @@index([assignment], map: "sandbox_assisubm_ass_ix")
  @@index([assignment, userid, groupid, latest], map: "sandbox_assisubm_assusegrol_ix")
  @@index([attemptnumber], map: "sandbox_assisubm_att_ix")
  @@index([userid], map: "sandbox_assisubm_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assign_user_flags {
  id               BigInt  @id @default(autoincrement())
  userid           BigInt  @default(0)
  assignment       BigInt  @default(0)
  locked           BigInt  @default(0)
  mailed           Int     @default(0) @db.SmallInt
  extensionduedate BigInt  @default(0)
  workflowstate    String? @db.VarChar(20)
  allocatedmarker  BigInt  @default(0)

  @@index([assignment], map: "sandbox_assiuserflag_ass_ix")
  @@index([mailed], map: "sandbox_assiuserflag_mai_ix")
  @@index([userid], map: "sandbox_assiuserflag_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assign_user_mapping {
  id         BigInt @id @default(autoincrement())
  assignment BigInt @default(0)
  userid     BigInt @default(0)

  @@index([assignment], map: "sandbox_assiusermapp_ass_ix")
  @@index([userid], map: "sandbox_assiusermapp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assignfeedback_comments {
  id            BigInt  @id @default(autoincrement())
  assignment    BigInt  @default(0)
  grade         BigInt  @default(0)
  commenttext   String? @db.LongText
  commentformat Int     @default(0) @db.SmallInt

  @@index([assignment], map: "sandbox_assicomm_ass_ix")
  @@index([grade], map: "sandbox_assicomm_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assignfeedback_editpdf_annot {
  id      BigInt  @id @default(autoincrement())
  gradeid BigInt  @default(0)
  pageno  BigInt  @default(0)
  x       BigInt? @default(0)
  y       BigInt? @default(0)
  endx    BigInt? @default(0)
  endy    BigInt? @default(0)
  path    String? @db.LongText
  type    String? @default("line") @db.VarChar(10)
  colour  String? @default("black") @db.VarChar(10)
  draft   Int     @default(1) @db.TinyInt

  @@index([gradeid], map: "sandbox_assieditanno_gra_ix")
  @@index([gradeid, pageno], map: "sandbox_assieditanno_grapag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assignfeedback_editpdf_cmnt {
  id      BigInt  @id @default(autoincrement())
  gradeid BigInt  @default(0)
  x       BigInt? @default(0)
  y       BigInt? @default(0)
  width   BigInt? @default(120)
  rawtext String? @db.LongText
  pageno  BigInt  @default(0)
  colour  String? @default("black") @db.VarChar(10)
  draft   Int     @default(1) @db.TinyInt

  @@index([gradeid], map: "sandbox_assieditcmnt_gra_ix")
  @@index([gradeid, pageno], map: "sandbox_assieditcmnt_grapag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assignfeedback_editpdf_quick {
  id      BigInt  @id @default(autoincrement())
  userid  BigInt  @default(0)
  rawtext String  @db.LongText
  width   BigInt  @default(120)
  colour  String? @default("yellow") @db.VarChar(10)

  @@index([userid], map: "sandbox_assieditquic_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assignfeedback_editpdf_rot {
  id           BigInt  @id @default(autoincrement())
  gradeid      BigInt  @default(0)
  pageno       BigInt  @default(0)
  pathnamehash String  @db.LongText
  isrotated    Boolean @default(false)
  degree       BigInt  @default(0)

  @@unique([gradeid, pageno], map: "sandbox_assieditrot_grapag_uix")
  @@index([gradeid], map: "sandbox_assieditrot_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assignfeedback_file {
  id         BigInt @id @default(autoincrement())
  assignment BigInt @default(0)
  grade      BigInt @default(0)
  numfiles   BigInt @default(0)

  @@index([assignment], map: "sandbox_assifile_ass2_ix")
  @@index([grade], map: "sandbox_assifile_gra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assignsubmission_file {
  id         BigInt @id @default(autoincrement())
  assignment BigInt @default(0)
  submission BigInt @default(0)
  numfiles   BigInt @default(0)

  @@index([assignment], map: "sandbox_assifile_ass_ix")
  @@index([submission], map: "sandbox_assifile_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_assignsubmission_onlinetext {
  id           BigInt  @id @default(autoincrement())
  assignment   BigInt  @default(0)
  submission   BigInt  @default(0)
  onlinetext   String? @db.LongText
  onlineformat Int     @default(0) @db.SmallInt

  @@index([assignment], map: "sandbox_assionli_ass_ix")
  @@index([submission], map: "sandbox_assionli_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_auth_lti_linked_login {
  id           BigInt @id @default(autoincrement())
  userid       BigInt
  issuer       String @db.LongText
  issuer256    String @default("") @db.VarChar(64)
  sub          String @default("") @db.VarChar(255)
  sub256       String @default("") @db.VarChar(64)
  timecreated  BigInt
  timemodified BigInt

  @@unique([userid, issuer256, sub256], map: "sandbox_authltilinklogi_us_uix")
  @@index([userid], map: "sandbox_authltilinklogi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_auth_oauth2_linked_login {
  id                  BigInt  @id @default(autoincrement())
  timecreated         BigInt
  timemodified        BigInt
  usermodified        BigInt
  userid              BigInt
  issuerid            BigInt
  username            String  @default("") @db.VarChar(255)
  email               String  @db.LongText
  confirmtoken        String  @default("") @db.VarChar(64)
  confirmtokenexpires BigInt?

  @@unique([userid, issuerid, username], map: "sandbox_authoautlinklogi_u_uix")
  @@index([issuerid], map: "sandbox_authoautlinklogi_i2_ix")
  @@index([issuerid, username], map: "sandbox_authoautlinklogi_is_ix")
  @@index([userid], map: "sandbox_authoautlinklogi_u2_ix")
  @@index([usermodified], map: "sandbox_authoautlinklogi_us_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_backup_controllers {
  id            BigInt  @id @default(autoincrement())
  backupid      String  @unique(map: "sandbox_backcont_bac_uix") @default("") @db.VarChar(32)
  operation     String  @default("backup") @db.VarChar(20)
  type          String  @default("") @db.VarChar(10)
  itemid        BigInt
  format        String  @default("") @db.VarChar(20)
  interactive   Int     @db.SmallInt
  purpose       Int     @db.SmallInt
  userid        BigInt
  status        Int     @db.SmallInt
  execution     Int     @db.SmallInt
  executiontime BigInt
  checksum      String  @default("") @db.VarChar(32)
  timecreated   BigInt
  timemodified  BigInt
  progress      Decimal @default(0.00000000000000) @db.Decimal(15, 14)
  controller    String  @db.LongText

  @@index([type, itemid], map: "sandbox_backcont_typite_ix")
  @@index([userid], map: "sandbox_backcont_use_ix")
  @@index([userid, itemid], map: "sandbox_backcont_useite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_backup_courses {
  id            BigInt @id @default(autoincrement())
  courseid      BigInt @unique(map: "sandbox_backcour_cou_uix") @default(0)
  laststarttime BigInt @default(0)
  lastendtime   BigInt @default(0)
  laststatus    String @default("5") @db.VarChar(1)
  nextstarttime BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_backup_logs {
  id          BigInt @id @default(autoincrement())
  backupid    String @default("") @db.VarChar(32)
  loglevel    Int    @db.SmallInt
  message     String @db.LongText
  timecreated BigInt

  @@unique([backupid, id], map: "sandbox_backlogs_bacid_uix")
  @@index([backupid], map: "sandbox_backlogs_bac_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge {
  id               BigInt  @id @default(autoincrement())
  name             String  @default("") @db.VarChar(255)
  description      String? @db.LongText
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)
  usercreated      BigInt
  usermodified     BigInt
  issuername       String  @default("") @db.VarChar(255)
  issuerurl        String  @default("") @db.VarChar(255)
  issuercontact    String? @db.VarChar(255)
  expiredate       BigInt?
  expireperiod     BigInt?
  type             Boolean @default(true)
  courseid         BigInt?
  message          String  @db.LongText
  messagesubject   String  @db.LongText
  attachment       Boolean @default(true)
  notification     Boolean @default(true)
  status           Boolean @default(false)
  nextcron         BigInt?
  version          String? @db.VarChar(255)
  language         String? @db.VarChar(255)
  imageauthorname  String? @db.VarChar(255)
  imageauthoremail String? @db.VarChar(255)
  imageauthorurl   String? @db.VarChar(255)
  imagecaption     String? @db.LongText

  @@index([courseid], map: "sandbox_badg_cou_ix")
  @@index([type], map: "sandbox_badg_typ_ix")
  @@index([usercreated], map: "sandbox_badg_use2_ix")
  @@index([usermodified], map: "sandbox_badg_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_alignment {
  id                BigInt  @id @default(autoincrement())
  badgeid           BigInt  @default(0)
  targetname        String  @default("") @db.VarChar(255)
  targeturl         String  @default("") @db.VarChar(255)
  targetdescription String? @db.LongText
  targetframework   String? @db.VarChar(255)
  targetcode        String? @db.VarChar(255)

  @@index([badgeid], map: "sandbox_badgalig_bad_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_backpack {
  id                 BigInt  @id @default(autoincrement())
  userid             BigInt  @default(0)
  email              String  @default("") @db.VarChar(100)
  backpackuid        BigInt
  autosync           Boolean @default(false)
  password           String? @db.VarChar(50)
  externalbackpackid BigInt?

  @@unique([userid, externalbackpackid], map: "sandbox_badgback_useext_uix")
  @@index([externalbackpackid], map: "sandbox_badgback_ext_ix")
  @@index([userid], map: "sandbox_badgback_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_backpack_oauth2 {
  id                 BigInt  @id @default(autoincrement())
  usermodified       BigInt  @default(0)
  timecreated        BigInt  @default(0)
  timemodified       BigInt  @default(0)
  userid             BigInt
  issuerid           BigInt
  externalbackpackid BigInt
  token              String  @db.LongText
  refreshtoken       String  @db.LongText
  expires            BigInt?
  scope              String? @db.LongText

  @@index([externalbackpackid], map: "sandbox_badgbackoaut_ext_ix")
  @@index([issuerid], map: "sandbox_badgbackoaut_iss_ix")
  @@index([userid], map: "sandbox_badgbackoaut_use2_ix")
  @@index([usermodified], map: "sandbox_badgbackoaut_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_criteria {
  id                BigInt  @id @default(autoincrement())
  badgeid           BigInt  @default(0)
  criteriatype      BigInt?
  method            Boolean @default(true)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt

  @@unique([badgeid, criteriatype], map: "sandbox_badgcrit_badcri_uix")
  @@index([badgeid], map: "sandbox_badgcrit_bad_ix")
  @@index([criteriatype], map: "sandbox_badgcrit_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_criteria_met {
  id       BigInt  @id @default(autoincrement())
  issuedid BigInt?
  critid   BigInt
  userid   BigInt
  datemet  BigInt

  @@index([critid], map: "sandbox_badgcritmet_cri_ix")
  @@index([issuedid], map: "sandbox_badgcritmet_iss_ix")
  @@index([userid], map: "sandbox_badgcritmet_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_criteria_param {
  id     BigInt  @id @default(autoincrement())
  critid BigInt
  name   String  @default("") @db.VarChar(255)
  value  String? @db.VarChar(255)

  @@index([critid], map: "sandbox_badgcritpara_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_endorsement {
  id           BigInt  @id @default(autoincrement())
  badgeid      BigInt  @default(0)
  issuername   String  @default("") @db.VarChar(255)
  issuerurl    String  @default("") @db.VarChar(255)
  issueremail  String  @default("") @db.VarChar(255)
  claimid      String? @db.VarChar(255)
  claimcomment String? @db.LongText
  dateissued   BigInt  @default(0)

  @@index([badgeid], map: "sandbox_badgendo_bad_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_external {
  id           BigInt  @id @default(autoincrement())
  backpackid   BigInt
  collectionid BigInt
  entityid     String? @db.VarChar(255)
  assertion    String? @db.LongText

  @@index([backpackid], map: "sandbox_badgexte_bac_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_external_backpack {
  id              BigInt  @id @default(autoincrement())
  backpackapiurl  String  @unique(map: "sandbox_badgexteback_bac_uix") @default("") @db.VarChar(255)
  backpackweburl  String  @unique(map: "sandbox_badgexteback_bac2_uix") @default("") @db.VarChar(255)
  apiversion      String  @default("1.0") @db.VarChar(12)
  sortorder       BigInt  @default(0)
  oauth2_issuerid BigInt?

  @@index([oauth2_issuerid], map: "sandbox_badgexteback_oau_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_external_identifier {
  id             BigInt @id @default(autoincrement())
  sitebackpackid BigInt
  internalid     String @default("") @db.VarChar(128)
  externalid     String @default("") @db.VarChar(128)
  type           String @default("") @db.VarChar(16)

  @@unique([sitebackpackid, internalid, externalid, type], map: "sandbox_badgexteiden_sitin_uix")
  @@index([sitebackpackid], map: "sandbox_badgexteiden_sit_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_issued {
  id             BigInt  @id @default(autoincrement())
  badgeid        BigInt  @default(0)
  userid         BigInt  @default(0)
  uniquehash     String  @db.LongText
  dateissued     BigInt  @default(0)
  dateexpire     BigInt?
  visible        Boolean @default(false)
  issuernotified BigInt?

  @@unique([badgeid, userid], map: "sandbox_badgissu_baduse_uix")
  @@index([badgeid], map: "sandbox_badgissu_bad_ix")
  @@index([userid], map: "sandbox_badgissu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_manual_award {
  id          BigInt @id @default(autoincrement())
  badgeid     BigInt
  recipientid BigInt
  issuerid    BigInt
  issuerrole  BigInt
  datemet     BigInt

  @@index([badgeid], map: "sandbox_badgmanuawar_bad_ix")
  @@index([issuerrole], map: "sandbox_badgmanuawar_iss2_ix")
  @@index([issuerid], map: "sandbox_badgmanuawar_iss_ix")
  @@index([recipientid], map: "sandbox_badgmanuawar_rec_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_badge_related {
  id             BigInt  @id @default(autoincrement())
  badgeid        BigInt  @default(0)
  relatedbadgeid BigInt?

  @@unique([badgeid, relatedbadgeid], map: "sandbox_badgrela_badrel_uix")
  @@index([badgeid], map: "sandbox_badgrela_bad_ix")
  @@index([relatedbadgeid], map: "sandbox_badgrela_rel_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_bigbluebuttonbn {
  id                            BigInt  @id @default(autoincrement())
  type                          Int     @default(0) @db.TinyInt
  course                        BigInt  @default(0)
  name                          String  @default("") @db.VarChar(255)
  intro                         String? @db.LongText
  introformat                   Int     @default(1) @db.SmallInt
  meetingid                     String  @default("") @db.VarChar(255)
  moderatorpass                 String  @default("") @db.VarChar(255)
  viewerpass                    String  @default("") @db.VarChar(255)
  wait                          Boolean @default(false)
  record                        Boolean @default(false)
  recordallfromstart            Boolean @default(false)
  recordhidebutton              Boolean @default(false)
  welcome                       String? @db.LongText
  voicebridge                   Int     @default(0) @db.MediumInt
  openingtime                   BigInt  @default(0)
  closingtime                   BigInt  @default(0)
  timecreated                   BigInt  @default(0)
  timemodified                  BigInt  @default(0)
  presentation                  String? @db.LongText
  participants                  String? @db.LongText
  userlimit                     Int     @default(0) @db.SmallInt
  recordings_html               Boolean @default(false)
  recordings_deleted            Boolean @default(true)
  recordings_imported           Boolean @default(false)
  recordings_preview            Boolean @default(false)
  clienttype                    Boolean @default(false)
  muteonstart                   Boolean @default(false)
  disablecam                    Boolean @default(false)
  disablemic                    Boolean @default(false)
  disableprivatechat            Boolean @default(false)
  disablepublicchat             Boolean @default(false)
  disablenote                   Boolean @default(false)
  hideuserlist                  Boolean @default(false)
  completionattendance          Int     @default(0)
  completionengagementchats     Int     @default(0)
  completionengagementtalks     Int     @default(0)
  completionengagementraisehand Int     @default(0)
  completionengagementpollvotes Int     @default(0)
  completionengagementemojis    Int     @default(0)
  guestallowed                  Int?    @default(0) @db.TinyInt
  mustapproveuser               Int?    @default(1) @db.TinyInt
  guestlinkuid                  String? @db.VarChar(1024)
  guestpassword                 String? @db.VarChar(255)
  showpresentation              Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_bigbluebuttonbn_logs {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt
  bigbluebuttonbnid BigInt
  userid            BigInt?
  timecreated       BigInt  @default(0)
  meetingid         String  @default("") @db.VarChar(256)
  log               String  @default("") @db.VarChar(32)
  meta              String? @db.LongText

  @@index([courseid], map: "sandbox_bigblogs_cou_ix")
  @@index([courseid, bigbluebuttonbnid], map: "sandbox_bigblogs_coubig_ix")
  @@index([courseid, bigbluebuttonbnid, userid, log], map: "sandbox_bigblogs_coubigusel_ix")
  @@index([log], map: "sandbox_bigblogs_log_ix")
  @@index([userid, log], map: "sandbox_bigblogs_uselog_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_bigbluebuttonbn_recordings {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt
  bigbluebuttonbnid BigInt
  groupid           BigInt?
  recordingid       String  @default("") @db.VarChar(64)
  headless          Boolean @default(false)
  imported          Boolean @default(false)
  status            Boolean @default(false)
  importeddata      String? @db.LongText
  timecreated       BigInt  @default(0)
  usermodified      BigInt  @default(0)
  timemodified      BigInt  @default(0)

  @@index([bigbluebuttonbnid], map: "sandbox_bigbreco_big_ix")
  @@index([courseid], map: "sandbox_bigbreco_cou_ix")
  @@index([recordingid], map: "sandbox_bigbreco_rec_ix")
  @@index([usermodified], map: "sandbox_bigbreco_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_block {
  id       BigInt  @id @default(autoincrement())
  name     String  @unique(map: "sandbox_bloc_nam_uix") @default("") @db.VarChar(40)
  cron     BigInt  @default(0)
  lastcron BigInt  @default(0)
  visible  Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_block_instances {
  id                BigInt  @id @default(autoincrement())
  blockname         String  @default("") @db.VarChar(40)
  parentcontextid   BigInt
  showinsubcontexts Int     @db.SmallInt
  requiredbytheme   Int     @default(0) @db.SmallInt
  pagetypepattern   String  @default("") @db.VarChar(64)
  subpagepattern    String? @db.VarChar(16)
  defaultregion     String  @default("") @db.VarChar(16)
  defaultweight     BigInt
  configdata        String? @db.LongText
  timecreated       BigInt
  timemodified      BigInt

  @@index([blockname], map: "sandbox_blocinst_blo_ix")
  @@index([parentcontextid], map: "sandbox_blocinst_par_ix")
  @@index([parentcontextid, showinsubcontexts, pagetypepattern, subpagepattern], map: "sandbox_blocinst_parshopags_ix")
  @@index([timemodified], map: "sandbox_blocinst_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_block_positions {
  id              BigInt @id @default(autoincrement())
  blockinstanceid BigInt
  contextid       BigInt
  pagetype        String @default("") @db.VarChar(64)
  subpage         String @default("") @db.VarChar(16)
  visible         Int    @db.SmallInt
  region          String @default("") @db.VarChar(16)
  weight          BigInt

  @@unique([blockinstanceid, contextid, pagetype, subpage], map: "sandbox_blocposi_bloconpag_uix")
  @@index([blockinstanceid], map: "sandbox_blocposi_blo_ix")
  @@index([contextid], map: "sandbox_blocposi_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_block_recent_activity {
  id          BigInt  @id @default(autoincrement())
  courseid    BigInt
  cmid        BigInt
  timecreated BigInt
  userid      BigInt
  action      Boolean
  modname     String? @db.VarChar(20)

  @@index([courseid, timecreated], map: "sandbox_blocreceacti_coutim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_block_recentlyaccesseditems {
  id         BigInt @id @default(autoincrement())
  courseid   BigInt
  cmid       BigInt
  userid     BigInt
  timeaccess BigInt

  @@unique([userid, courseid, cmid], map: "sandbox_blocrece_usecoucmi_uix")
  @@index([cmid], map: "sandbox_blocrece_cmi_ix")
  @@index([courseid], map: "sandbox_blocrece_cou_ix")
  @@index([userid], map: "sandbox_blocrece_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_block_rss_client {
  id             BigInt @id @default(autoincrement())
  userid         BigInt @default(0)
  title          String @db.LongText
  preferredtitle String @default("") @db.VarChar(64)
  description    String @db.LongText
  shared         Int    @default(0) @db.TinyInt
  url            String @default("") @db.VarChar(255)
  skiptime       BigInt @default(0)
  skipuntil      BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_blog_association {
  id        BigInt @id @default(autoincrement())
  contextid BigInt
  blogid    BigInt

  @@index([blogid], map: "sandbox_blogasso_blo_ix")
  @@index([contextid], map: "sandbox_blogasso_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_blog_external {
  id             BigInt  @id @default(autoincrement())
  userid         BigInt
  name           String  @default("") @db.VarChar(255)
  description    String? @db.LongText
  url            String  @db.LongText
  filtertags     String? @db.VarChar(255)
  failedlastsync Boolean @default(false)
  timemodified   BigInt?
  timefetched    BigInt  @default(0)

  @@index([userid], map: "sandbox_blogexte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_book {
  id           BigInt  @id @default(autoincrement())
  course       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  numbering    Int     @default(0) @db.SmallInt
  navstyle     Int     @default(1) @db.SmallInt
  customtitles Int     @default(0) @db.TinyInt
  revision     BigInt  @default(0)
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([course], map: "sandbox_book_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_book_chapters {
  id            BigInt @id @default(autoincrement())
  bookid        BigInt @default(0)
  pagenum       BigInt @default(0)
  subchapter    BigInt @default(0)
  title         String @default("") @db.VarChar(255)
  content       String @db.LongText
  contentformat Int    @default(0) @db.SmallInt
  hidden        Int    @default(0) @db.TinyInt
  timecreated   BigInt @default(0)
  timemodified  BigInt @default(0)
  importsrc     String @default("") @db.VarChar(255)

  @@index([bookid], map: "sandbox_bookchap_boo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_cache_filters {
  id           BigInt @id @default(autoincrement())
  filter       String @default("") @db.VarChar(32)
  version      BigInt @default(0)
  md5key       String @default("") @db.VarChar(32)
  rawtext      String @db.LongText
  timemodified BigInt @default(0)

  @@index([filter, md5key], map: "sandbox_cachfilt_filmd5_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_cache_flags {
  id           BigInt @id @default(autoincrement())
  flagtype     String @default("") @db.VarChar(255)
  name         String @default("") @db.VarChar(255)
  timemodified BigInt @default(0)
  value        String @db.LongText
  expiry       BigInt

  @@index([flagtype], map: "sandbox_cachflag_fla_ix")
  @@index([name], map: "sandbox_cachflag_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_capabilities {
  id           BigInt @id @default(autoincrement())
  name         String @unique(map: "sandbox_capa_nam_uix") @default("") @db.VarChar(255)
  captype      String @default("") @db.VarChar(50)
  contextlevel BigInt @default(0)
  component    String @default("") @db.VarChar(100)
  riskbitmask  BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_chat {
  id           BigInt @id @default(autoincrement())
  course       BigInt @default(0)
  name         String @default("") @db.VarChar(255)
  intro        String @db.LongText
  introformat  Int    @default(0) @db.SmallInt
  keepdays     BigInt @default(0)
  studentlogs  Int    @default(0) @db.SmallInt
  chattime     BigInt @default(0)
  schedule     Int    @default(0) @db.SmallInt
  timemodified BigInt @default(0)

  @@index([course], map: "sandbox_chat_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_chat_messages {
  id        BigInt  @id @default(autoincrement())
  chatid    BigInt  @default(0)
  userid    BigInt  @default(0)
  groupid   BigInt  @default(0)
  issystem  Boolean @default(false)
  message   String  @db.LongText
  timestamp BigInt  @default(0)

  @@index([chatid], map: "sandbox_chatmess_cha_ix")
  @@index([groupid], map: "sandbox_chatmess_gro_ix")
  @@index([timestamp, chatid], map: "sandbox_chatmess_timcha_ix")
  @@index([userid], map: "sandbox_chatmess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_chat_messages_current {
  id        BigInt  @id @default(autoincrement())
  chatid    BigInt  @default(0)
  userid    BigInt  @default(0)
  groupid   BigInt  @default(0)
  issystem  Boolean @default(false)
  message   String  @db.LongText
  timestamp BigInt  @default(0)

  @@index([chatid], map: "sandbox_chatmesscurr_cha_ix")
  @@index([groupid], map: "sandbox_chatmesscurr_gro_ix")
  @@index([timestamp, chatid], map: "sandbox_chatmesscurr_timcha_ix")
  @@index([userid], map: "sandbox_chatmesscurr_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_chat_users {
  id              BigInt @id @default(autoincrement())
  chatid          BigInt @default(0)
  userid          BigInt @default(0)
  groupid         BigInt @default(0)
  version         String @default("") @db.VarChar(16)
  ip              String @default("") @db.VarChar(45)
  firstping       BigInt @default(0)
  lastping        BigInt @default(0)
  lastmessageping BigInt @default(0)
  sid             String @default("") @db.VarChar(32)
  course          BigInt @default(0)
  lang            String @default("") @db.VarChar(30)

  @@index([chatid], map: "sandbox_chatuser_cha_ix")
  @@index([course], map: "sandbox_chatuser_cou_ix")
  @@index([groupid], map: "sandbox_chatuser_gro_ix")
  @@index([lastping], map: "sandbox_chatuser_las_ix")
  @@index([userid], map: "sandbox_chatuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_choice {
  id               BigInt  @id @default(autoincrement())
  course           BigInt  @default(0)
  name             String  @default("") @db.VarChar(255)
  intro            String  @db.LongText
  introformat      Int     @default(0) @db.SmallInt
  publish          Int     @default(0) @db.TinyInt
  showresults      Int     @default(0) @db.TinyInt
  display          Int     @default(0) @db.SmallInt
  allowupdate      Int     @default(0) @db.TinyInt
  allowmultiple    Int     @default(0) @db.TinyInt
  showunanswered   Int     @default(0) @db.TinyInt
  includeinactive  Int     @default(1) @db.TinyInt
  limitanswers     Int     @default(0) @db.TinyInt
  timeopen         BigInt  @default(0)
  timeclose        BigInt  @default(0)
  showpreview      Int     @default(0) @db.TinyInt
  timemodified     BigInt  @default(0)
  completionsubmit Boolean @default(false)
  showavailable    Boolean @default(false)

  @@index([course], map: "sandbox_choi_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_choice_answers {
  id           BigInt @id @default(autoincrement())
  choiceid     BigInt @default(0)
  userid       BigInt @default(0)
  optionid     BigInt @default(0)
  timemodified BigInt @default(0)

  @@index([choiceid], map: "sandbox_choiansw_cho_ix")
  @@index([optionid], map: "sandbox_choiansw_opt_ix")
  @@index([userid], map: "sandbox_choiansw_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_choice_options {
  id           BigInt  @id @default(autoincrement())
  choiceid     BigInt  @default(0)
  text         String? @db.LongText
  maxanswers   BigInt? @default(0)
  timemodified BigInt  @default(0)

  @@index([choiceid], map: "sandbox_choiopti_cho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_cohort {
  id                BigInt  @id @default(autoincrement())
  contextid         BigInt
  name              String  @default("") @db.VarChar(254)
  idnumber          String? @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @db.TinyInt
  visible           Boolean @default(true)
  component         String  @default("") @db.VarChar(100)
  timecreated       BigInt
  timemodified      BigInt
  theme             String? @db.VarChar(50)

  @@index([contextid], map: "sandbox_coho_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_cohort_members {
  id        BigInt @id @default(autoincrement())
  cohortid  BigInt @default(0)
  userid    BigInt @default(0)
  timeadded BigInt @default(0)

  @@unique([cohortid, userid], map: "sandbox_cohomemb_cohuse_uix")
  @@index([cohortid], map: "sandbox_cohomemb_coh_ix")
  @@index([userid], map: "sandbox_cohomemb_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_comments {
  id          BigInt  @id @default(autoincrement())
  contextid   BigInt
  component   String? @db.VarChar(255)
  commentarea String  @default("") @db.VarChar(255)
  itemid      BigInt
  content     String  @db.LongText
  format      Int     @default(0) @db.TinyInt
  userid      BigInt
  timecreated BigInt

  @@index([contextid, commentarea, itemid], map: "sandbox_comm_concomite_ix")
  @@index([userid], map: "sandbox_comm_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_communication {
  id             BigInt  @id @default(autoincrement())
  contextid      BigInt
  instanceid     BigInt
  component      String  @default("") @db.VarChar(100)
  instancetype   String  @default("") @db.VarChar(100)
  provider       String  @default("") @db.VarChar(100)
  roomname       String? @db.VarChar(255)
  avatarfilename String? @db.VarChar(100)
  active         Boolean @default(true)
  avatarsynced   Boolean @default(false)

  @@index([contextid], map: "sandbox_comm_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_communication_customlink {
  id     BigInt  @id @default(autoincrement())
  commid BigInt
  url    String? @db.VarChar(255)

  @@index([commid], map: "sandbox_commcust_com_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_communication_user {
  id      BigInt  @id @default(autoincrement())
  commid  BigInt
  userid  BigInt
  synced  Boolean @default(false)
  deleted Boolean @default(false)

  @@index([commid], map: "sandbox_commuser_com_ix")
  @@index([userid], map: "sandbox_commuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency {
  id                    BigInt  @id @default(autoincrement())
  shortname             String? @db.VarChar(100)
  description           String? @db.LongText
  descriptionformat     Int     @default(0) @db.SmallInt
  idnumber              String? @db.VarChar(100)
  competencyframeworkid BigInt
  parentid              BigInt  @default(0)
  path                  String  @default("") @db.VarChar(255)
  sortorder             BigInt
  ruletype              String? @db.VarChar(100)
  ruleoutcome           Int     @default(0) @db.TinyInt
  ruleconfig            String? @db.LongText
  scaleid               BigInt?
  scaleconfiguration    String? @db.LongText
  timecreated           BigInt
  timemodified          BigInt
  usermodified          BigInt?

  @@unique([competencyframeworkid, idnumber], map: "sandbox_comp_comidn_uix")
  @@index([ruleoutcome], map: "sandbox_comp_rul_ix")
  @@index([scaleid], map: "sandbox_comp_sca_ix")
  @@index([usermodified], map: "sandbox_comp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_coursecomp {
  id           BigInt @id @default(autoincrement())
  courseid     BigInt
  competencyid BigInt
  ruleoutcome  Int    @db.TinyInt
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt
  sortorder    BigInt

  @@unique([courseid, competencyid], map: "sandbox_compcour_coucom_uix")
  @@index([competencyid], map: "sandbox_compcour_com_ix")
  @@index([courseid], map: "sandbox_compcour_cou2_ix")
  @@index([courseid, ruleoutcome], map: "sandbox_compcour_courul_ix")
  @@index([usermodified], map: "sandbox_compcour_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_coursecompsetting {
  id                     BigInt  @id @default(autoincrement())
  courseid               BigInt  @unique(map: "sandbox_compcour_cou_uix")
  pushratingstouserplans Int?    @db.TinyInt
  timecreated            BigInt
  timemodified           BigInt
  usermodified           BigInt?

  @@index([usermodified], map: "sandbox_compcour_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_evidence {
  id               BigInt  @id @default(autoincrement())
  usercompetencyid BigInt
  contextid        BigInt
  action           Int     @db.TinyInt
  actionuserid     BigInt?
  descidentifier   String  @default("") @db.VarChar(255)
  desccomponent    String  @default("") @db.VarChar(255)
  desca            String? @db.LongText
  url              String? @db.VarChar(255)
  grade            BigInt?
  note             String? @db.LongText
  timecreated      BigInt
  timemodified     BigInt
  usermodified     BigInt

  @@index([actionuserid], map: "sandbox_compevid_act_ix")
  @@index([contextid], map: "sandbox_compevid_con_ix")
  @@index([usermodified], map: "sandbox_compevid_use2_ix")
  @@index([usercompetencyid], map: "sandbox_compevid_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_framework {
  id                 BigInt  @id @default(autoincrement())
  shortname          String? @db.VarChar(100)
  contextid          BigInt
  idnumber           String? @unique(map: "sandbox_compfram_idn_uix") @db.VarChar(100)
  description        String? @db.LongText
  descriptionformat  Int     @default(0) @db.SmallInt
  scaleid            BigInt?
  scaleconfiguration String  @db.LongText
  visible            Int     @default(1) @db.TinyInt
  taxonomies         String  @default("") @db.VarChar(255)
  timecreated        BigInt
  timemodified       BigInt
  usermodified       BigInt?

  @@index([contextid], map: "sandbox_compfram_con_ix")
  @@index([scaleid], map: "sandbox_compfram_sca_ix")
  @@index([usermodified], map: "sandbox_compfram_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_modulecomp {
  id            BigInt  @id @default(autoincrement())
  cmid          BigInt
  timecreated   BigInt
  timemodified  BigInt
  usermodified  BigInt
  sortorder     BigInt
  competencyid  BigInt
  ruleoutcome   Int     @db.TinyInt
  overridegrade Boolean @default(false)

  @@unique([cmid, competencyid], map: "sandbox_compmodu_cmicom_uix")
  @@index([cmid], map: "sandbox_compmodu_cmi_ix")
  @@index([cmid, ruleoutcome], map: "sandbox_compmodu_cmirul_ix")
  @@index([competencyid], map: "sandbox_compmodu_com_ix")
  @@index([usermodified], map: "sandbox_compmodu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_plan {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.SmallInt
  userid            BigInt
  templateid        BigInt?
  origtemplateid    BigInt?
  status            Boolean
  duedate           BigInt? @default(0)
  reviewerid        BigInt?
  timecreated       BigInt
  timemodified      BigInt  @default(0)
  usermodified      BigInt

  @@index([status, duedate], map: "sandbox_compplan_stadue_ix")
  @@index([templateid], map: "sandbox_compplan_tem_ix")
  @@index([usermodified], map: "sandbox_compplan_use_ix")
  @@index([userid, status], map: "sandbox_compplan_usesta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_plancomp {
  id           BigInt  @id @default(autoincrement())
  planid       BigInt
  competencyid BigInt
  sortorder    BigInt?
  timecreated  BigInt
  timemodified BigInt?
  usermodified BigInt

  @@unique([planid, competencyid], map: "sandbox_compplan_placom_uix")
  @@index([usermodified], map: "sandbox_compplan_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_relatedcomp {
  id                  BigInt  @id @default(autoincrement())
  competencyid        BigInt
  relatedcompetencyid BigInt
  timecreated         BigInt
  timemodified        BigInt?
  usermodified        BigInt

  @@index([competencyid], map: "sandbox_comprela_com_ix")
  @@index([relatedcompetencyid], map: "sandbox_comprela_rel_ix")
  @@index([usermodified], map: "sandbox_comprela_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_template {
  id                BigInt  @id @default(autoincrement())
  shortname         String? @db.VarChar(100)
  contextid         BigInt
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.SmallInt
  visible           Int     @default(1) @db.TinyInt
  duedate           BigInt?
  timecreated       BigInt
  timemodified      BigInt
  usermodified      BigInt?

  @@index([contextid], map: "sandbox_comptemp_con_ix")
  @@index([usermodified], map: "sandbox_comptemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_templatecohort {
  id           BigInt @id @default(autoincrement())
  templateid   BigInt
  cohortid     BigInt
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt

  @@unique([templateid, cohortid], map: "sandbox_comptemp_temcoh_uix")
  @@index([templateid], map: "sandbox_comptemp_tem2_ix")
  @@index([usermodified], map: "sandbox_comptemp_use3_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_templatecomp {
  id           BigInt  @id @default(autoincrement())
  templateid   BigInt
  competencyid BigInt
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt
  sortorder    BigInt?

  @@index([competencyid], map: "sandbox_comptemp_com_ix")
  @@index([templateid], map: "sandbox_comptemp_tem_ix")
  @@index([usermodified], map: "sandbox_comptemp_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_usercomp {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt
  competencyid BigInt
  status       Int     @default(0) @db.TinyInt
  reviewerid   BigInt?
  proficiency  Int?    @db.TinyInt
  grade        BigInt?
  timecreated  BigInt
  timemodified BigInt?
  usermodified BigInt

  @@unique([userid, competencyid], map: "sandbox_compuser_usecom_uix")
  @@index([usermodified], map: "sandbox_compuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_usercompcourse {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt
  courseid     BigInt
  competencyid BigInt
  proficiency  Int?    @db.TinyInt
  grade        BigInt?
  timecreated  BigInt
  timemodified BigInt?
  usermodified BigInt

  @@unique([userid, courseid, competencyid], map: "sandbox_compuser_usecoucom_uix")
  @@index([usermodified], map: "sandbox_compuser_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_usercompplan {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt
  competencyid BigInt
  planid       BigInt
  proficiency  Int?    @db.TinyInt
  grade        BigInt?
  sortorder    BigInt?
  timecreated  BigInt
  timemodified BigInt?
  usermodified BigInt

  @@unique([userid, competencyid, planid], map: "sandbox_compuser_usecompla_uix")
  @@index([usermodified], map: "sandbox_compuser_use3_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_userevidence {
  id                BigInt  @id @default(autoincrement())
  userid            BigInt
  name              String  @default("") @db.VarChar(100)
  description       String  @db.LongText
  descriptionformat Boolean
  url               String  @db.LongText
  timecreated       BigInt
  timemodified      BigInt
  usermodified      BigInt

  @@index([userid], map: "sandbox_compuser_use4_ix")
  @@index([usermodified], map: "sandbox_compuser_use5_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_competency_userevidencecomp {
  id             BigInt @id @default(autoincrement())
  userevidenceid BigInt
  competencyid   BigInt
  timecreated    BigInt
  timemodified   BigInt
  usermodified   BigInt

  @@unique([userevidenceid, competencyid], map: "sandbox_compuser_usecom2_uix")
  @@index([userevidenceid], map: "sandbox_compuser_use6_ix")
  @@index([usermodified], map: "sandbox_compuser_use7_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_config {
  id    BigInt @id @default(autoincrement())
  name  String @unique(map: "sandbox_conf_nam_uix") @default("") @db.VarChar(255)
  value String @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_config_log {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt
  timemodified BigInt
  plugin       String? @db.VarChar(100)
  name         String  @default("") @db.VarChar(100)
  value        String? @db.LongText
  oldvalue     String? @db.LongText

  @@index([timemodified], map: "sandbox_conflog_tim_ix")
  @@index([userid], map: "sandbox_conflog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_config_plugins {
  id     BigInt @id @default(autoincrement())
  plugin String @default("core") @db.VarChar(100)
  name   String @default("") @db.VarChar(100)
  value  String @db.LongText

  @@unique([plugin, name], map: "sandbox_confplug_plunam_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_contentbank_content {
  id           BigInt  @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  contenttype  String  @default("") @db.VarChar(100)
  contextid    BigInt
  visibility   Boolean @default(true)
  instanceid   BigInt?
  configdata   String? @db.LongText
  usercreated  BigInt
  usermodified BigInt?
  timecreated  BigInt  @default(0)
  timemodified BigInt? @default(0)

  @@index([contextid], map: "sandbox_contcont_con_ix")
  @@index([contextid, contenttype, instanceid], map: "sandbox_contcont_conconins_ix")
  @@index([name], map: "sandbox_contcont_nam_ix")
  @@index([usercreated], map: "sandbox_contcont_use2_ix")
  @@index([usermodified], map: "sandbox_contcont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_context {
  id           BigInt  @id @default(autoincrement())
  contextlevel BigInt  @default(0)
  instanceid   BigInt  @default(0)
  path         String? @db.VarChar(255)
  depth        Int     @default(0) @db.TinyInt
  locked       Int     @default(0) @db.TinyInt

  @@unique([contextlevel, instanceid], map: "sandbox_cont_conins_uix")
  @@index([instanceid], map: "sandbox_cont_ins_ix")
  @@index([path], map: "sandbox_cont_pat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_context_temp {
  id     BigInt @id
  path   String @default("") @db.VarChar(255)
  depth  Int    @db.TinyInt
  locked Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course {
  id                       BigInt   @id @default(autoincrement())
  category                 BigInt   @default(0)
  sortorder                BigInt   @default(0)
  fullname                 String   @default("") @db.VarChar(254)
  shortname                String   @default("") @db.VarChar(255)
  idnumber                 String   @default("") @db.VarChar(100)
  summary                  String?  @db.LongText
  summaryformat            Int      @default(0) @db.TinyInt
  format                   String   @default("topics") @db.VarChar(21)
  showgrades               Int      @default(1) @db.TinyInt
  newsitems                Int      @default(1) @db.MediumInt
  startdate                BigInt   @default(0)
  enddate                  BigInt   @default(0)
  relativedatesmode        Boolean  @default(false)
  marker                   BigInt   @default(0)
  maxbytes                 BigInt   @default(0)
  legacyfiles              Int      @default(0) @db.SmallInt
  showreports              Int      @default(0) @db.SmallInt
  visible                  Boolean  @default(true)
  visibleold               Boolean  @default(true)
  downloadcontent          Boolean?
  groupmode                Int      @default(0) @db.SmallInt
  groupmodeforce           Int      @default(0) @db.SmallInt
  defaultgroupingid        BigInt   @default(0)
  lang                     String   @default("") @db.VarChar(30)
  calendartype             String   @default("") @db.VarChar(30)
  theme                    String   @default("") @db.VarChar(50)
  timecreated              BigInt   @default(0)
  timemodified             BigInt   @default(0)
  requested                Boolean  @default(false)
  enablecompletion         Boolean  @default(false)
  completionnotify         Boolean  @default(false)
  cacherev                 BigInt   @default(0)
  originalcourseid         BigInt?
  showactivitydates        Boolean  @default(false)
  showcompletionconditions Boolean?
  pdfexportfont            String?  @db.VarChar(50)

  @@index([category], map: "sandbox_cour_cat_ix")
  @@index([idnumber], map: "sandbox_cour_idn_ix")
  @@index([originalcourseid], map: "sandbox_cour_ori_ix")
  @@index([shortname], map: "sandbox_cour_sho_ix")
  @@index([sortorder], map: "sandbox_cour_sor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_categories {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("") @db.VarChar(255)
  idnumber          String? @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  parent            BigInt  @default(0)
  sortorder         BigInt  @default(0)
  coursecount       BigInt  @default(0)
  visible           Boolean @default(true)
  visibleold        Boolean @default(true)
  timemodified      BigInt  @default(0)
  depth             BigInt  @default(0)
  path              String  @default("") @db.VarChar(255)
  theme             String? @db.VarChar(50)

  @@index([parent], map: "sandbox_courcate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_completion_aggr_methd {
  id           BigInt   @id @default(autoincrement())
  course       BigInt   @default(0)
  criteriatype BigInt?
  method       Boolean  @default(false)
  value        Decimal? @db.Decimal(10, 5)

  @@unique([course, criteriatype], map: "sandbox_courcompaggrmeth_c_uix")
  @@index([course], map: "sandbox_courcompaggrmeth_co_ix")
  @@index([criteriatype], map: "sandbox_courcompaggrmeth_cr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_completion_crit_compl {
  id            BigInt   @id @default(autoincrement())
  userid        BigInt   @default(0)
  course        BigInt   @default(0)
  criteriaid    BigInt   @default(0)
  gradefinal    Decimal? @db.Decimal(10, 5)
  unenroled     BigInt?
  timecompleted BigInt?

  @@unique([userid, course, criteriaid], map: "sandbox_courcompcritcomp_u_uix")
  @@index([course], map: "sandbox_courcompcritcomp_co_ix")
  @@index([criteriaid], map: "sandbox_courcompcritcomp_cr_ix")
  @@index([timecompleted], map: "sandbox_courcompcritcomp_ti_ix")
  @@index([userid], map: "sandbox_courcompcritcomp_us_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_completion_criteria {
  id             BigInt   @id @default(autoincrement())
  course         BigInt   @default(0)
  criteriatype   BigInt   @default(0)
  module         String?  @db.VarChar(100)
  moduleinstance BigInt?
  courseinstance BigInt?
  enrolperiod    BigInt?
  timeend        BigInt?
  gradepass      Decimal? @db.Decimal(10, 5)
  role           BigInt?

  @@index([course], map: "sandbox_courcompcrit_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_completion_defaults {
  id                  BigInt  @id @default(autoincrement())
  course              BigInt
  module              BigInt
  completion          Boolean @default(false)
  completionview      Boolean @default(false)
  completionusegrade  Boolean @default(false)
  completionpassgrade Boolean @default(false)
  completionexpected  BigInt  @default(0)
  customrules         String? @db.LongText

  @@unique([course, module], map: "sandbox_courcompdefa_coumo_uix")
  @@index([course], map: "sandbox_courcompdefa_cou_ix")
  @@index([module], map: "sandbox_courcompdefa_mod_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_completions {
  id            BigInt  @id @default(autoincrement())
  userid        BigInt  @default(0)
  course        BigInt  @default(0)
  timeenrolled  BigInt  @default(0)
  timestarted   BigInt  @default(0)
  timecompleted BigInt?
  reaggregate   BigInt  @default(0)

  @@unique([userid, course], map: "sandbox_courcomp_usecou_uix")
  @@index([course], map: "sandbox_courcomp_cou_ix")
  @@index([timecompleted], map: "sandbox_courcomp_tim_ix")
  @@index([userid], map: "sandbox_courcomp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_format_options {
  id        BigInt  @id @default(autoincrement())
  courseid  BigInt
  format    String  @default("") @db.VarChar(21)
  sectionid BigInt  @default(0)
  name      String  @default("") @db.VarChar(100)
  value     String? @db.LongText

  @@unique([courseid, format, sectionid, name], map: "sandbox_courformopti_coufo_uix")
  @@index([courseid], map: "sandbox_courformopti_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_modules {
  id                        BigInt   @id @default(autoincrement())
  course                    BigInt   @default(0)
  module                    BigInt   @default(0)
  instance                  BigInt   @default(0)
  section                   BigInt   @default(0)
  idnumber                  String?  @db.VarChar(100)
  added                     BigInt   @default(0)
  score                     Int      @default(0) @db.SmallInt
  indent                    Int      @default(0) @db.MediumInt
  visible                   Boolean  @default(true)
  visibleoncoursepage       Boolean  @default(true)
  visibleold                Boolean  @default(true)
  groupmode                 Int      @default(0) @db.SmallInt
  groupingid                BigInt   @default(0)
  completion                Boolean  @default(false)
  completiongradeitemnumber BigInt?
  completionview            Boolean  @default(false)
  completionexpected        BigInt   @default(0)
  completionpassgrade       Boolean  @default(false)
  showdescription           Boolean  @default(false)
  availability              String?  @db.LongText
  deletioninprogress        Boolean  @default(false)
  downloadcontent           Boolean? @default(true)
  lang                      String?  @db.VarChar(30)

  @@index([course], map: "sandbox_courmodu_cou_ix")
  @@index([groupingid], map: "sandbox_courmodu_gro_ix")
  @@index([idnumber, course], map: "sandbox_courmodu_idncou_ix")
  @@index([instance], map: "sandbox_courmodu_ins_ix")
  @@index([module], map: "sandbox_courmodu_mod_ix")
  @@index([visible], map: "sandbox_courmodu_vis_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_modules_completion {
  id              BigInt  @id @default(autoincrement())
  coursemoduleid  BigInt
  userid          BigInt
  completionstate Boolean
  overrideby      BigInt?
  timemodified    BigInt

  @@unique([userid, coursemoduleid], map: "sandbox_courmoducomp_useco_uix")
  @@index([coursemoduleid], map: "sandbox_courmoducomp_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_modules_viewed {
  id             BigInt @id @default(autoincrement())
  coursemoduleid BigInt
  userid         BigInt
  timecreated    BigInt

  @@unique([userid, coursemoduleid], map: "sandbox_courmoduview_useco_uix")
  @@index([coursemoduleid], map: "sandbox_courmoduview_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_published {
  id            BigInt   @id @default(autoincrement())
  huburl        String?  @db.VarChar(255)
  courseid      BigInt
  timepublished BigInt
  enrollable    Boolean  @default(true)
  hubcourseid   BigInt
  status        Boolean? @default(false)
  timechecked   BigInt?

  @@index([courseid], map: "sandbox_courpubl_cou_ix")
  @@index([hubcourseid], map: "sandbox_courpubl_hub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_request {
  id            BigInt @id @default(autoincrement())
  fullname      String @default("") @db.VarChar(254)
  shortname     String @default("") @db.VarChar(100)
  summary       String @db.LongText
  summaryformat Int    @default(0) @db.TinyInt
  category      BigInt @default(0)
  reason        String @db.LongText
  requester     BigInt @default(0)
  password      String @default("") @db.VarChar(50)

  @@index([shortname], map: "sandbox_courrequ_sho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_course_sections {
  id            BigInt  @id @default(autoincrement())
  course        BigInt  @default(0)
  section       BigInt  @default(0)
  name          String? @db.VarChar(255)
  summary       String? @db.LongText
  summaryformat Int     @default(0) @db.TinyInt
  sequence      String? @db.LongText
  visible       Boolean @default(true)
  availability  String? @db.LongText
  component     String? @db.VarChar(100)
  itemid        BigInt?
  timemodified  BigInt  @default(0)

  @@unique([course, section], map: "sandbox_coursect_cousec_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_customfield_category {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("") @db.VarChar(400)
  description       String? @db.LongText
  descriptionformat BigInt?
  sortorder         BigInt?
  timecreated       BigInt
  timemodified      BigInt
  component         String  @default("") @db.VarChar(100)
  area              String  @default("") @db.VarChar(100)
  itemid            BigInt  @default(0)
  contextid         BigInt?

  @@index([component, area, itemid, sortorder], map: "sandbox_custcate_comareites_ix")
  @@index([contextid], map: "sandbox_custcate_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_customfield_data {
  id             BigInt   @id @default(autoincrement())
  fieldid        BigInt
  instanceid     BigInt
  intvalue       BigInt?
  decvalue       Decimal? @db.Decimal(10, 5)
  shortcharvalue String?  @db.VarChar(255)
  charvalue      String?  @db.VarChar(1333)
  value          String   @db.LongText
  valueformat    BigInt
  valuetrust     Int      @default(0) @db.TinyInt
  timecreated    BigInt
  timemodified   BigInt
  contextid      BigInt?

  @@unique([instanceid, fieldid], map: "sandbox_custdata_insfie_uix")
  @@index([contextid], map: "sandbox_custdata_con_ix")
  @@index([fieldid], map: "sandbox_custdata_fie_ix")
  @@index([fieldid, decvalue], map: "sandbox_custdata_fiedec_ix")
  @@index([fieldid, intvalue], map: "sandbox_custdata_fieint_ix")
  @@index([fieldid, shortcharvalue], map: "sandbox_custdata_fiesho_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_customfield_field {
  id                BigInt  @id @default(autoincrement())
  shortname         String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(400)
  type              String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat BigInt?
  sortorder         BigInt?
  categoryid        BigInt?
  configdata        String? @db.LongText
  timecreated       BigInt
  timemodified      BigInt

  @@index([categoryid], map: "sandbox_custfiel_cat_ix")
  @@index([categoryid, sortorder], map: "sandbox_custfiel_catsor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_data {
  id                    BigInt  @id @default(autoincrement())
  course                BigInt  @default(0)
  name                  String  @default("") @db.VarChar(255)
  intro                 String  @db.LongText
  introformat           Int     @default(0) @db.SmallInt
  comments              Int     @default(0) @db.SmallInt
  timeavailablefrom     BigInt  @default(0)
  timeavailableto       BigInt  @default(0)
  timeviewfrom          BigInt  @default(0)
  timeviewto            BigInt  @default(0)
  requiredentries       Int     @default(0)
  requiredentriestoview Int     @default(0)
  maxentries            Int     @default(0)
  rssarticles           Int     @default(0) @db.SmallInt
  singletemplate        String? @db.LongText
  listtemplate          String? @db.LongText
  listtemplateheader    String? @db.LongText
  listtemplatefooter    String? @db.LongText
  addtemplate           String? @db.LongText
  rsstemplate           String? @db.LongText
  rsstitletemplate      String? @db.LongText
  csstemplate           String? @db.LongText
  jstemplate            String? @db.LongText
  asearchtemplate       String? @db.LongText
  approval              Int     @default(0) @db.SmallInt
  manageapproved        Int     @default(1) @db.SmallInt
  scale                 BigInt  @default(0)
  assessed              BigInt  @default(0)
  assesstimestart       BigInt  @default(0)
  assesstimefinish      BigInt  @default(0)
  defaultsort           BigInt  @default(0)
  defaultsortdir        Int     @default(0) @db.SmallInt
  editany               Int     @default(0) @db.SmallInt
  notification          BigInt  @default(0)
  timemodified          BigInt  @default(0)
  config                String? @db.LongText
  completionentries     BigInt? @default(0)

  @@index([course], map: "sandbox_data_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_data_content {
  id       BigInt  @id @default(autoincrement())
  fieldid  BigInt  @default(0)
  recordid BigInt  @default(0)
  content  String? @db.LongText
  content1 String? @db.LongText
  content2 String? @db.LongText
  content3 String? @db.LongText
  content4 String? @db.LongText

  @@index([fieldid], map: "sandbox_datacont_fie_ix")
  @@index([recordid], map: "sandbox_datacont_rec_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_data_fields {
  id          BigInt  @id @default(autoincrement())
  dataid      BigInt  @default(0)
  type        String  @default("") @db.VarChar(255)
  name        String  @default("") @db.VarChar(255)
  description String  @db.LongText
  required    Boolean @default(false)
  param1      String? @db.LongText
  param2      String? @db.LongText
  param3      String? @db.LongText
  param4      String? @db.LongText
  param5      String? @db.LongText
  param6      String? @db.LongText
  param7      String? @db.LongText
  param8      String? @db.LongText
  param9      String? @db.LongText
  param10     String? @db.LongText

  @@index([dataid], map: "sandbox_datafiel_dat_ix")
  @@index([type, dataid], map: "sandbox_datafiel_typdat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_data_records {
  id           BigInt @id @default(autoincrement())
  userid       BigInt @default(0)
  groupid      BigInt @default(0)
  dataid       BigInt @default(0)
  timecreated  BigInt @default(0)
  timemodified BigInt @default(0)
  approved     Int    @default(0) @db.SmallInt

  @@index([dataid], map: "sandbox_datareco_dat_ix")
  @@index([userid], map: "sandbox_datareco_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_editor_atto_autosave {
  id           BigInt  @id @default(autoincrement())
  elementid    String  @default("") @db.VarChar(255)
  contextid    BigInt
  pagehash     String  @default("") @db.VarChar(64)
  userid       BigInt
  drafttext    String  @db.LongText
  draftid      BigInt?
  pageinstance String  @default("") @db.VarChar(64)
  timemodified BigInt  @default(0)

  @@unique([elementid, contextid, userid, pagehash], map: "sandbox_editattoauto_eleco_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol {
  id              BigInt   @id @default(autoincrement())
  enrol           String   @default("") @db.VarChar(20)
  status          BigInt   @default(0)
  courseid        BigInt
  sortorder       BigInt   @default(0)
  name            String?  @db.VarChar(255)
  enrolperiod     BigInt?  @default(0)
  enrolstartdate  BigInt?  @default(0)
  enrolenddate    BigInt?  @default(0)
  expirynotify    Boolean? @default(false)
  expirythreshold BigInt?  @default(0)
  notifyall       Boolean? @default(false)
  password        String?  @db.VarChar(50)
  cost            String?  @db.VarChar(20)
  currency        String?  @db.VarChar(3)
  roleid          BigInt?  @default(0)
  customint1      BigInt?
  customint2      BigInt?
  customint3      BigInt?
  customint4      BigInt?
  customint5      BigInt?
  customint6      BigInt?
  customint7      BigInt?
  customint8      BigInt?
  customchar1     String?  @db.VarChar(255)
  customchar2     String?  @db.VarChar(255)
  customchar3     String?  @db.VarChar(1333)
  customdec1      Decimal? @db.Decimal(12, 7)
  customdec2      Decimal? @db.Decimal(12, 7)
  customtext1     String?  @db.LongText
  customtext2     String?  @db.LongText
  customtext3     String?  @db.LongText
  customtext4     String?  @db.LongText
  timecreated     BigInt   @default(0)
  timemodified    BigInt   @default(0)

  @@index([courseid], map: "sandbox_enro_cou_ix")
  @@index([enrol], map: "sandbox_enro_enr_ix")
  @@index([roleid], map: "sandbox_enro_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_flatfile {
  id           BigInt @id @default(autoincrement())
  action       String @default("") @db.VarChar(30)
  roleid       BigInt
  userid       BigInt
  courseid     BigInt
  timestart    BigInt @default(0)
  timeend      BigInt @default(0)
  timemodified BigInt @default(0)

  @@index([courseid], map: "sandbox_enroflat_cou_ix")
  @@index([roleid], map: "sandbox_enroflat_rol_ix")
  @@index([userid], map: "sandbox_enroflat_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_app_registration {
  id                       BigInt  @id @default(autoincrement())
  name                     String  @default("") @db.VarChar(255)
  platformid               String? @db.LongText
  clientid                 String? @db.VarChar(1333)
  uniqueid                 String  @unique(map: "sandbox_enroltiappregi_uni_uix") @default("") @db.VarChar(255)
  platformclienthash       String? @unique(map: "sandbox_enroltiappregi_pla_uix") @db.VarChar(64)
  platformuniqueidhash     String? @unique(map: "sandbox_enroltiappregi_pl2_uix") @db.VarChar(64)
  authenticationrequesturl String? @db.LongText
  jwksurl                  String? @db.LongText
  accesstokenurl           String? @db.LongText
  status                   Boolean @default(false)
  timecreated              BigInt
  timemodified             BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_context {
  id              BigInt  @id @default(autoincrement())
  contextid       String  @default("") @db.VarChar(255)
  ltideploymentid BigInt
  type            String? @db.LongText
  timecreated     BigInt
  timemodified    BigInt

  @@unique([ltideploymentid, contextid], map: "sandbox_enrolticont_lticon_uix")
  @@index([ltideploymentid], map: "sandbox_enrolticont_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_deployment {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("") @db.VarChar(255)
  deploymentid      String  @default("") @db.VarChar(255)
  platformid        BigInt
  legacyconsumerkey String? @db.VarChar(255)
  timecreated       BigInt
  timemodified      BigInt

  @@unique([platformid, deploymentid], map: "sandbox_enroltidepl_pladep_uix")
  @@index([platformid], map: "sandbox_enroltidepl_pla_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_lti2_consumer {
  id              BigInt  @id @default(autoincrement())
  name            String  @default("") @db.VarChar(50)
  consumerkey256  String  @unique(map: "sandbox_enroltilti2cons_co_uix") @default("") @db.VarChar(255)
  consumerkey     String? @db.LongText
  secret          String  @default("") @db.VarChar(1024)
  ltiversion      String? @db.VarChar(10)
  consumername    String? @db.VarChar(255)
  consumerversion String? @db.VarChar(255)
  consumerguid    String? @db.VarChar(1024)
  profile         String? @db.LongText
  toolproxy       String? @db.LongText
  settings        String? @db.LongText
  protected       Boolean
  enabled         Boolean
  enablefrom      BigInt?
  enableuntil     BigInt?
  lastaccess      BigInt?
  created         BigInt
  updated         BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_lti2_context {
  id            BigInt  @id @default(autoincrement())
  consumerid    BigInt
  lticontextkey String  @default("") @db.VarChar(255)
  type          String? @db.VarChar(100)
  settings      String? @db.LongText
  created       BigInt
  updated       BigInt

  @@index([consumerid], map: "sandbox_enroltilti2cont_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_lti2_nonce {
  id         BigInt @id @default(autoincrement())
  consumerid BigInt
  value      String @default("") @db.VarChar(64)
  expires    BigInt

  @@index([consumerid], map: "sandbox_enroltilti2nonc_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_lti2_resource_link {
  id                    BigInt   @id @default(autoincrement())
  contextid             BigInt?
  consumerid            BigInt?
  ltiresourcelinkkey    String   @default("") @db.VarChar(255)
  settings              String?  @db.LongText
  primaryresourcelinkid BigInt?
  shareapproved         Boolean?
  created               BigInt
  updated               BigInt

  @@index([primaryresourcelinkid], map: "sandbox_enroltilti2resolin2_ix")
  @@index([consumerid], map: "sandbox_enroltilti2resolin3_ix")
  @@index([contextid], map: "sandbox_enroltilti2resolink_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_lti2_share_key {
  id             BigInt  @id @default(autoincrement())
  sharekey       String  @unique(map: "sandbox_enroltilti2sharkey_uix") @default("") @db.VarChar(32)
  resourcelinkid BigInt  @unique(map: "sandbox_enroltilti2sharke2_uix")
  autoapprove    Boolean
  expires        BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_lti2_tool_proxy {
  id           BigInt @id @default(autoincrement())
  toolproxykey String @unique(map: "sandbox_enroltilti2toolpro_uix") @default("") @db.VarChar(32)
  consumerid   BigInt
  toolproxy    String @db.LongText
  created      BigInt
  updated      BigInt

  @@index([consumerid], map: "sandbox_enroltilti2toolprox_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_lti2_user_result {
  id                 BigInt @id @default(autoincrement())
  resourcelinkid     BigInt
  ltiuserkey         String @default("") @db.VarChar(255)
  ltiresultsourcedid String @default("") @db.VarChar(1024)
  created            BigInt
  updated            BigInt

  @@index([resourcelinkid], map: "sandbox_enroltilti2userresu_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_resource_link {
  id                    BigInt  @id @default(autoincrement())
  resourcelinkid        String  @default("") @db.VarChar(255)
  ltideploymentid       BigInt
  resourceid            BigInt
  lticontextid          BigInt?
  lineitemsservice      String? @db.VarChar(1333)
  lineitemservice       String? @db.VarChar(1333)
  lineitemscope         String? @db.VarChar(255)
  resultscope           String? @db.VarChar(255)
  scorescope            String? @db.VarChar(255)
  contextmembershipsurl String? @db.VarChar(1333)
  nrpsserviceversions   String? @db.VarChar(255)
  timecreated           BigInt
  timemodified          BigInt

  @@unique([resourcelinkid, ltideploymentid], map: "sandbox_enroltiresolink_re_uix")
  @@index([lticontextid], map: "sandbox_enroltiresolink_lt2_ix")
  @@index([ltideploymentid], map: "sandbox_enroltiresolink_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_tool_consumer_map {
  id         BigInt @id @default(autoincrement())
  toolid     BigInt
  consumerid BigInt

  @@index([consumerid], map: "sandbox_enroltitoolconsmap2_ix")
  @@index([toolid], map: "sandbox_enroltitoolconsmap__ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_tools {
  id                         BigInt  @id @default(autoincrement())
  enrolid                    BigInt
  contextid                  BigInt
  ltiversion                 String  @default("LTI-1p3") @db.VarChar(15)
  institution                String  @default("") @db.VarChar(40)
  lang                       String  @default("en") @db.VarChar(30)
  timezone                   String  @default("99") @db.VarChar(100)
  maxenrolled                BigInt  @default(0)
  maildisplay                Int     @default(2) @db.TinyInt
  city                       String  @default("") @db.VarChar(120)
  country                    String  @default("") @db.VarChar(2)
  gradesync                  Boolean @default(false)
  gradesynccompletion        Boolean @default(false)
  membersync                 Boolean @default(false)
  membersyncmode             Boolean @default(false)
  roleinstructor             BigInt
  rolelearner                BigInt
  secret                     String? @db.LongText
  uuid                       String? @unique(map: "sandbox_enroltitool_uui_uix") @db.VarChar(36)
  provisioningmodelearner    Int?    @db.TinyInt
  provisioningmodeinstructor Int?    @db.TinyInt
  timecreated                BigInt
  timemodified               BigInt

  @@index([contextid], map: "sandbox_enroltitool_con_ix")
  @@index([enrolid], map: "sandbox_enroltitool_enr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_user_resource_link {
  id             BigInt @id @default(autoincrement())
  ltiuserid      BigInt
  resourcelinkid BigInt

  @@unique([ltiuserid, resourcelinkid], map: "sandbox_enroltiuserresolin_uix")
  @@index([resourcelinkid], map: "sandbox_enroltiuserresolin2_ix")
  @@index([ltiuserid], map: "sandbox_enroltiuserresolink_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_lti_users {
  id              BigInt   @id @default(autoincrement())
  userid          BigInt
  toolid          BigInt
  serviceurl      String?  @db.LongText
  sourceid        String?  @db.LongText
  ltideploymentid BigInt?
  consumerkey     String?  @db.LongText
  consumersecret  String?  @db.LongText
  membershipsurl  String?  @db.LongText
  membershipsid   String?  @db.LongText
  lastgrade       Decimal? @db.Decimal(10, 5)
  lastaccess      BigInt?
  timecreated     BigInt?

  @@index([ltideploymentid], map: "sandbox_enroltiuser_lti_ix")
  @@index([toolid], map: "sandbox_enroltiuser_too_ix")
  @@index([userid], map: "sandbox_enroltiuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_enrol_paypal {
  id                  BigInt @id @default(autoincrement())
  business            String @default("") @db.VarChar(255)
  receiver_email      String @default("") @db.VarChar(255)
  receiver_id         String @default("") @db.VarChar(255)
  item_name           String @default("") @db.VarChar(255)
  courseid            BigInt @default(0)
  userid              BigInt @default(0)
  instanceid          BigInt @default(0)
  memo                String @default("") @db.VarChar(255)
  tax                 String @default("") @db.VarChar(255)
  option_name1        String @default("") @db.VarChar(255)
  option_selection1_x String @default("") @db.VarChar(255)
  option_name2        String @default("") @db.VarChar(255)
  option_selection2_x String @default("") @db.VarChar(255)
  payment_status      String @default("") @db.VarChar(255)
  pending_reason      String @default("") @db.VarChar(255)
  reason_code         String @default("") @db.VarChar(30)
  txn_id              String @default("") @db.VarChar(255)
  parent_txn_id       String @default("") @db.VarChar(255)
  payment_type        String @default("") @db.VarChar(30)
  timeupdated         BigInt @default(0)

  @@index([business], map: "sandbox_enropayp_bus_ix")
  @@index([courseid], map: "sandbox_enropayp_cou_ix")
  @@index([instanceid], map: "sandbox_enropayp_ins_ix")
  @@index([receiver_email], map: "sandbox_enropayp_rec_ix")
  @@index([userid], map: "sandbox_enropayp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_event {
  id             BigInt  @id @default(autoincrement())
  name           String  @db.LongText
  description    String  @db.LongText
  format         Int     @default(0) @db.SmallInt
  categoryid     BigInt  @default(0)
  courseid       BigInt  @default(0)
  groupid        BigInt  @default(0)
  userid         BigInt  @default(0)
  repeatid       BigInt  @default(0)
  component      String? @db.VarChar(100)
  modulename     String  @default("") @db.VarChar(20)
  instance       BigInt  @default(0)
  type           Int     @default(0) @db.SmallInt
  eventtype      String  @default("") @db.VarChar(20)
  timestart      BigInt  @default(0)
  timeduration   BigInt  @default(0)
  timesort       BigInt?
  visible        Int     @default(1) @db.SmallInt
  uuid           String  @default("") @db.VarChar(255)
  sequence       BigInt  @default(1)
  timemodified   BigInt  @default(0)
  subscriptionid BigInt?
  priority       BigInt?
  location       String? @db.LongText

  @@index([categoryid], map: "sandbox_even_cat_ix")
  @@index([component, eventtype, instance], map: "sandbox_even_comeveins_ix")
  @@index([courseid], map: "sandbox_even_cou_ix")
  @@index([eventtype], map: "sandbox_even_eve_ix")
  @@index([groupid, courseid, categoryid, visible, userid], map: "sandbox_even_grocoucatvisus_ix")
  @@index([modulename, instance, eventtype], map: "sandbox_even_modinseve_ix")
  @@index([subscriptionid], map: "sandbox_even_sub_ix")
  @@index([timeduration], map: "sandbox_even_tim2_ix")
  @@index([timestart], map: "sandbox_even_tim_ix")
  @@index([type, timesort], map: "sandbox_even_typtim_ix")
  @@index([userid], map: "sandbox_even_use_ix")
  @@index([uuid], map: "sandbox_even_uui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_event_subscriptions {
  id           BigInt  @id @default(autoincrement())
  url          String  @default("") @db.VarChar(255)
  categoryid   BigInt  @default(0)
  courseid     BigInt  @default(0)
  groupid      BigInt  @default(0)
  userid       BigInt  @default(0)
  eventtype    String  @default("") @db.VarChar(20)
  pollinterval BigInt  @default(0)
  lastupdated  BigInt?
  name         String  @default("") @db.VarChar(255)

  @@index([courseid], map: "sandbox_evensubs_cou_ix")
  @@index([userid], map: "sandbox_evensubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_events_handlers {
  id              BigInt  @id @default(autoincrement())
  eventname       String  @default("") @db.VarChar(166)
  component       String  @default("") @db.VarChar(166)
  handlerfile     String  @default("") @db.VarChar(255)
  handlerfunction String? @db.LongText
  schedule        String? @db.VarChar(255)
  status          BigInt  @default(0)
  internal        Int     @default(1) @db.TinyInt

  @@unique([eventname, component], map: "sandbox_evenhand_evecom_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_events_queue {
  id          BigInt  @id @default(autoincrement())
  eventdata   String  @db.LongText
  stackdump   String? @db.LongText
  userid      BigInt?
  timecreated BigInt

  @@index([userid], map: "sandbox_evenqueu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_events_queue_handlers {
  id            BigInt  @id @default(autoincrement())
  queuedeventid BigInt
  handlerid     BigInt
  status        BigInt?
  errormessage  String? @db.LongText
  timemodified  BigInt

  @@index([handlerid], map: "sandbox_evenqueuhand_han_ix")
  @@index([queuedeventid], map: "sandbox_evenqueuhand_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_external_functions {
  id           BigInt  @id @default(autoincrement())
  name         String  @unique(map: "sandbox_extefunc_nam_uix") @default("") @db.VarChar(200)
  classname    String  @default("") @db.VarChar(100)
  methodname   String  @default("") @db.VarChar(100)
  classpath    String? @db.VarChar(255)
  component    String  @default("") @db.VarChar(100)
  capabilities String? @db.VarChar(255)
  services     String? @db.VarChar(1333)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_external_services {
  id                 BigInt  @id @default(autoincrement())
  name               String  @unique(map: "sandbox_exteserv_nam_uix") @default("") @db.VarChar(200)
  enabled            Boolean
  requiredcapability String? @db.VarChar(150)
  restrictedusers    Boolean
  component          String? @db.VarChar(100)
  timecreated        BigInt
  timemodified       BigInt?
  shortname          String? @db.VarChar(255)
  downloadfiles      Boolean @default(false)
  uploadfiles        Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_external_services_functions {
  id                BigInt @id @default(autoincrement())
  externalserviceid BigInt
  functionname      String @default("") @db.VarChar(200)

  @@index([externalserviceid], map: "sandbox_exteservfunc_ext_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_external_services_users {
  id                BigInt  @id @default(autoincrement())
  externalserviceid BigInt
  userid            BigInt
  iprestriction     String? @db.VarChar(255)
  validuntil        BigInt?
  timecreated       BigInt?

  @@index([externalserviceid], map: "sandbox_exteservuser_ext_ix")
  @@index([userid], map: "sandbox_exteservuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_external_tokens {
  id                BigInt  @id @default(autoincrement())
  token             String  @default("") @db.VarChar(128)
  privatetoken      String? @db.VarChar(64)
  tokentype         Int     @db.SmallInt
  userid            BigInt
  externalserviceid BigInt
  sid               String? @db.VarChar(128)
  contextid         BigInt
  creatorid         BigInt  @default(1)
  iprestriction     String? @db.VarChar(255)
  validuntil        BigInt?
  timecreated       BigInt
  lastaccess        BigInt?
  name              String? @db.VarChar(255)

  @@index([contextid], map: "sandbox_extetoke_con_ix")
  @@index([creatorid], map: "sandbox_extetoke_cre_ix")
  @@index([externalserviceid], map: "sandbox_extetoke_ext_ix")
  @@index([sid], map: "sandbox_extetoke_sid_ix")
  @@index([token], map: "sandbox_extetoke_tok_ix")
  @@index([userid], map: "sandbox_extetoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_favourite {
  id           BigInt  @id @default(autoincrement())
  component    String  @default("") @db.VarChar(100)
  itemtype     String  @default("") @db.VarChar(100)
  itemid       BigInt
  contextid    BigInt
  userid       BigInt
  ordering     BigInt?
  timecreated  BigInt
  timemodified BigInt

  @@unique([component, itemtype, itemid, contextid, userid], map: "sandbox_favo_comiteiteconu_uix")
  @@index([contextid], map: "sandbox_favo_con_ix")
  @@index([userid], map: "sandbox_favo_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_feedback {
  id                      BigInt  @id @default(autoincrement())
  course                  BigInt  @default(0)
  name                    String  @default("") @db.VarChar(255)
  intro                   String  @db.LongText
  introformat             Int     @default(0) @db.SmallInt
  anonymous               Boolean @default(true)
  email_notification      Boolean @default(true)
  multiple_submit         Boolean @default(true)
  autonumbering           Boolean @default(true)
  site_after_submit       String  @default("") @db.VarChar(255)
  page_after_submit       String  @db.LongText
  page_after_submitformat Int     @default(0) @db.TinyInt
  publish_stats           Boolean @default(false)
  timeopen                BigInt  @default(0)
  timeclose               BigInt  @default(0)
  timemodified            BigInt  @default(0)
  completionsubmit        Boolean @default(false)

  @@index([course], map: "sandbox_feed_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_feedback_completed {
  id                 BigInt  @id @default(autoincrement())
  feedback           BigInt  @default(0)
  userid             BigInt  @default(0)
  timemodified       BigInt  @default(0)
  random_response    BigInt  @default(0)
  anonymous_response Boolean @default(false)
  courseid           BigInt  @default(0)

  @@index([courseid], map: "sandbox_feedcomp_cou_ix")
  @@index([feedback], map: "sandbox_feedcomp_fee_ix")
  @@index([userid], map: "sandbox_feedcomp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_feedback_completedtmp {
  id                 BigInt  @id @default(autoincrement())
  feedback           BigInt  @default(0)
  userid             BigInt  @default(0)
  guestid            String  @default("") @db.VarChar(255)
  timemodified       BigInt  @default(0)
  random_response    BigInt  @default(0)
  anonymous_response Boolean @default(false)
  courseid           BigInt  @default(0)

  @@index([feedback], map: "sandbox_feedcomp_fee2_ix")
  @@index([userid], map: "sandbox_feedcomp_use2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_feedback_item {
  id           BigInt  @id @default(autoincrement())
  feedback     BigInt  @default(0)
  template     BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  label        String  @default("") @db.VarChar(255)
  presentation String  @db.LongText
  typ          String  @default("") @db.VarChar(255)
  hasvalue     Boolean @default(false)
  position     Int     @default(0) @db.SmallInt
  required     Boolean @default(false)
  dependitem   BigInt  @default(0)
  dependvalue  String  @default("") @db.VarChar(255)
  options      String  @default("") @db.VarChar(255)

  @@index([feedback], map: "sandbox_feeditem_fee_ix")
  @@index([template], map: "sandbox_feeditem_tem_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_feedback_sitecourse_map {
  id         BigInt @id @default(autoincrement())
  feedbackid BigInt @default(0)
  courseid   BigInt @default(0)

  @@index([courseid], map: "sandbox_feedsitemap_cou_ix")
  @@index([feedbackid], map: "sandbox_feedsitemap_fee_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_feedback_template {
  id       BigInt  @id @default(autoincrement())
  course   BigInt  @default(0)
  ispublic Boolean @default(false)
  name     String  @default("") @db.VarChar(255)

  @@index([course], map: "sandbox_feedtemp_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_feedback_value {
  id            BigInt @id @default(autoincrement())
  course_id     BigInt @default(0)
  item          BigInt @default(0)
  completed     BigInt @default(0)
  tmp_completed BigInt @default(0)
  value         String @db.LongText

  @@unique([completed, item, course_id], map: "sandbox_feedvalu_comitecou_uix")
  @@index([course_id], map: "sandbox_feedvalu_cou_ix")
  @@index([item], map: "sandbox_feedvalu_ite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_feedback_valuetmp {
  id            BigInt @id @default(autoincrement())
  course_id     BigInt @default(0)
  item          BigInt @default(0)
  completed     BigInt @default(0)
  tmp_completed BigInt @default(0)
  value         String @db.LongText

  @@unique([completed, item, course_id], map: "sandbox_feedvalu_comiteco2_uix")
  @@index([course_id], map: "sandbox_feedvalu_cou2_ix")
  @@index([item], map: "sandbox_feedvalu_ite2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_file_conversion {
  id            BigInt  @id @default(autoincrement())
  usermodified  BigInt
  timecreated   BigInt
  timemodified  BigInt
  sourcefileid  BigInt
  targetformat  String  @default("") @db.VarChar(100)
  status        BigInt? @default(0)
  statusmessage String? @db.LongText
  converter     String? @db.VarChar(255)
  destfileid    BigInt?
  data          String? @db.LongText

  @@index([destfileid], map: "sandbox_fileconv_des_ix")
  @@index([sourcefileid], map: "sandbox_fileconv_sou_ix")
  @@index([usermodified], map: "sandbox_fileconv_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_files {
  id              BigInt  @id @default(autoincrement())
  contenthash     String  @default("") @db.VarChar(40)
  pathnamehash    String  @unique(map: "sandbox_file_pat_uix") @default("") @db.VarChar(40)
  contextid       BigInt
  component       String  @default("") @db.VarChar(100)
  filearea        String  @default("") @db.VarChar(50)
  itemid          BigInt
  filepath        String  @default("") @db.VarChar(255)
  filename        String  @default("") @db.VarChar(255)
  userid          BigInt?
  filesize        BigInt
  mimetype        String? @db.VarChar(100)
  status          BigInt  @default(0)
  source          String? @db.LongText
  author          String? @db.VarChar(255)
  license         String? @db.VarChar(255)
  timecreated     BigInt
  timemodified    BigInt
  sortorder       BigInt  @default(0)
  referencefileid BigInt?

  @@index([component, filearea, contextid, itemid], map: "sandbox_file_comfilconite_ix")
  @@index([contextid], map: "sandbox_file_con2_ix")
  @@index([contenthash], map: "sandbox_file_con_ix")
  @@index([filename], map: "sandbox_file_fil_ix")
  @@index([license], map: "sandbox_file_lic_ix")
  @@index([referencefileid], map: "sandbox_file_ref_ix")
  @@index([userid], map: "sandbox_file_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_files_reference {
  id            BigInt  @id @default(autoincrement())
  repositoryid  BigInt
  lastsync      BigInt?
  reference     String? @db.LongText
  referencehash String  @default("") @db.VarChar(40)

  @@unique([referencehash, repositoryid], map: "sandbox_filerefe_refrep_uix")
  @@index([repositoryid], map: "sandbox_filerefe_rep_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_filter_active {
  id        BigInt @id @default(autoincrement())
  filter    String @default("") @db.VarChar(32)
  contextid BigInt
  active    Int    @db.SmallInt
  sortorder BigInt @default(0)

  @@unique([contextid, filter], map: "sandbox_filtacti_confil_uix")
  @@index([contextid], map: "sandbox_filtacti_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_filter_config {
  id        BigInt  @id @default(autoincrement())
  filter    String  @default("") @db.VarChar(32)
  contextid BigInt
  name      String  @default("") @db.VarChar(255)
  value     String? @db.LongText

  @@unique([contextid, filter, name], map: "sandbox_filtconf_confilnam_uix")
  @@index([contextid], map: "sandbox_filtconf_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_folder {
  id                 BigInt  @id @default(autoincrement())
  course             BigInt  @default(0)
  name               String  @default("") @db.VarChar(255)
  intro              String? @db.LongText
  introformat        Int     @default(0) @db.SmallInt
  revision           BigInt  @default(0)
  timemodified       BigInt  @default(0)
  display            Int     @default(0) @db.SmallInt
  showexpanded       Boolean @default(true)
  showdownloadfolder Boolean @default(true)
  forcedownload      Boolean @default(true)

  @@index([course], map: "sandbox_fold_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum {
  id                    BigInt  @id @default(autoincrement())
  course                BigInt  @default(0)
  type                  String  @default("general") @db.VarChar(20)
  name                  String  @default("") @db.VarChar(255)
  intro                 String  @db.LongText
  introformat           Int     @default(0) @db.SmallInt
  duedate               BigInt  @default(0)
  cutoffdate            BigInt  @default(0)
  assessed              BigInt  @default(0)
  assesstimestart       BigInt  @default(0)
  assesstimefinish      BigInt  @default(0)
  scale                 BigInt  @default(0)
  grade_forum           BigInt  @default(0)
  grade_forum_notify    Int     @default(0) @db.SmallInt
  maxbytes              BigInt  @default(0)
  maxattachments        BigInt  @default(1)
  forcesubscribe        Boolean @default(false)
  trackingtype          Int     @default(1) @db.TinyInt
  rsstype               Int     @default(0) @db.TinyInt
  rssarticles           Int     @default(0) @db.TinyInt
  timemodified          BigInt  @default(0)
  warnafter             BigInt  @default(0)
  blockafter            BigInt  @default(0)
  blockperiod           BigInt  @default(0)
  completiondiscussions Int     @default(0)
  completionreplies     Int     @default(0)
  completionposts       Int     @default(0)
  displaywordcount      Boolean @default(false)
  lockdiscussionafter   BigInt  @default(0)

  @@index([course], map: "sandbox_foru_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_digests {
  id         BigInt @id @default(autoincrement())
  userid     BigInt
  forum      BigInt
  maildigest Int    @default(-1) @db.TinyInt

  @@unique([forum, userid, maildigest], map: "sandbox_forudige_forusemai_uix")
  @@index([forum], map: "sandbox_forudige_for_ix")
  @@index([userid], map: "sandbox_forudige_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_discussion_subs {
  id         BigInt @id @default(autoincrement())
  forum      BigInt
  userid     BigInt
  discussion BigInt
  preference BigInt @default(1)

  @@unique([userid, discussion], map: "sandbox_forudiscsubs_usedi_uix")
  @@index([discussion], map: "sandbox_forudiscsubs_dis_ix")
  @@index([forum], map: "sandbox_forudiscsubs_for_ix")
  @@index([userid], map: "sandbox_forudiscsubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_discussions {
  id           BigInt  @id @default(autoincrement())
  course       BigInt  @default(0)
  forum        BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  firstpost    BigInt  @default(0)
  userid       BigInt  @default(0)
  groupid      BigInt  @default(-1)
  assessed     Boolean @default(true)
  timemodified BigInt  @default(0)
  usermodified BigInt  @default(0)
  timestart    BigInt  @default(0)
  timeend      BigInt  @default(0)
  pinned       Boolean @default(false)
  timelocked   BigInt  @default(0)

  @@index([course], map: "sandbox_forudisc_cou_ix")
  @@index([forum], map: "sandbox_forudisc_for_ix")
  @@index([usermodified], map: "sandbox_forudisc_use2_ix")
  @@index([userid], map: "sandbox_forudisc_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_grades {
  id           BigInt   @id @default(autoincrement())
  forum        BigInt
  itemnumber   BigInt
  userid       BigInt
  grade        Decimal? @db.Decimal(10, 5)
  timecreated  BigInt
  timemodified BigInt

  @@unique([forum, itemnumber, userid], map: "sandbox_forugrad_foriteuse_uix")
  @@index([forum], map: "sandbox_forugrad_for_ix")
  @@index([userid], map: "sandbox_forugrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_posts {
  id             BigInt  @id @default(autoincrement())
  discussion     BigInt  @default(0)
  parent         BigInt  @default(0)
  userid         BigInt  @default(0)
  created        BigInt  @default(0)
  modified       BigInt  @default(0)
  mailed         Int     @default(0) @db.TinyInt
  subject        String  @default("") @db.VarChar(255)
  message        String  @db.LongText
  messageformat  Int     @default(0) @db.TinyInt
  messagetrust   Int     @default(0) @db.TinyInt
  attachment     String  @default("") @db.VarChar(100)
  totalscore     Int     @default(0) @db.SmallInt
  mailnow        BigInt  @default(0)
  deleted        Boolean @default(false)
  privatereplyto BigInt  @default(0)
  wordcount      BigInt?
  charcount      BigInt?

  @@index([created], map: "sandbox_forupost_cre_ix")
  @@index([discussion], map: "sandbox_forupost_dis_ix")
  @@index([mailed], map: "sandbox_forupost_mai_ix")
  @@index([parent], map: "sandbox_forupost_par_ix")
  @@index([privatereplyto], map: "sandbox_forupost_pri_ix")
  @@index([userid], map: "sandbox_forupost_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_queue {
  id           BigInt @id @default(autoincrement())
  userid       BigInt @default(0)
  discussionid BigInt @default(0)
  postid       BigInt @default(0)
  timemodified BigInt @default(0)

  @@index([discussionid], map: "sandbox_foruqueu_dis_ix")
  @@index([postid], map: "sandbox_foruqueu_pos_ix")
  @@index([userid], map: "sandbox_foruqueu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_read {
  id           BigInt @id @default(autoincrement())
  userid       BigInt @default(0)
  forumid      BigInt @default(0)
  discussionid BigInt @default(0)
  postid       BigInt @default(0)
  firstread    BigInt @default(0)
  lastread     BigInt @default(0)

  @@index([discussionid, userid], map: "sandbox_foruread_disuse_ix")
  @@index([forumid, userid], map: "sandbox_foruread_foruse_ix")
  @@index([postid, userid], map: "sandbox_foruread_posuse_ix")
  @@index([userid], map: "sandbox_foruread_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_subscriptions {
  id     BigInt @id @default(autoincrement())
  userid BigInt @default(0)
  forum  BigInt @default(0)

  @@unique([userid, forum], map: "sandbox_forusubs_usefor_uix")
  @@index([forum], map: "sandbox_forusubs_for_ix")
  @@index([userid], map: "sandbox_forusubs_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_forum_track_prefs {
  id      BigInt @id @default(autoincrement())
  userid  BigInt @default(0)
  forumid BigInt @default(0)

  @@index([userid, forumid], map: "sandbox_forutracpref_usefor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_glossary {
  id                     BigInt @id @default(autoincrement())
  course                 BigInt @default(0)
  name                   String @default("") @db.VarChar(255)
  intro                  String @db.LongText
  introformat            Int    @default(0) @db.SmallInt
  allowduplicatedentries Int    @default(0) @db.TinyInt
  displayformat          String @default("dictionary") @db.VarChar(50)
  mainglossary           Int    @default(0) @db.TinyInt
  showspecial            Int    @default(1) @db.TinyInt
  showalphabet           Int    @default(1) @db.TinyInt
  showall                Int    @default(1) @db.TinyInt
  allowcomments          Int    @default(0) @db.TinyInt
  allowprintview         Int    @default(1) @db.TinyInt
  usedynalink            Int    @default(1) @db.TinyInt
  defaultapproval        Int    @default(1) @db.TinyInt
  approvaldisplayformat  String @default("default") @db.VarChar(50)
  globalglossary         Int    @default(0) @db.TinyInt
  entbypage              Int    @default(10) @db.SmallInt
  editalways             Int    @default(0) @db.TinyInt
  rsstype                Int    @default(0) @db.TinyInt
  rssarticles            Int    @default(0) @db.TinyInt
  assessed               BigInt @default(0)
  assesstimestart        BigInt @default(0)
  assesstimefinish       BigInt @default(0)
  scale                  BigInt @default(0)
  timecreated            BigInt @default(0)
  timemodified           BigInt @default(0)
  completionentries      Int    @default(0)

  @@index([course], map: "sandbox_glos_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_glossary_alias {
  id      BigInt @id @default(autoincrement())
  entryid BigInt @default(0)
  alias   String @default("") @db.VarChar(255)

  @@index([entryid], map: "sandbox_glosalia_ent_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_glossary_categories {
  id          BigInt @id @default(autoincrement())
  glossaryid  BigInt @default(0)
  name        String @default("") @db.VarChar(255)
  usedynalink Int    @default(1) @db.TinyInt

  @@index([glossaryid], map: "sandbox_gloscate_glo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_glossary_entries {
  id               BigInt @id @default(autoincrement())
  glossaryid       BigInt @default(0)
  userid           BigInt @default(0)
  concept          String @default("") @db.VarChar(255)
  definition       String @db.LongText
  definitionformat Int    @default(0) @db.TinyInt
  definitiontrust  Int    @default(0) @db.TinyInt
  attachment       String @default("") @db.VarChar(100)
  timecreated      BigInt @default(0)
  timemodified     BigInt @default(0)
  teacherentry     Int    @default(0) @db.TinyInt
  sourceglossaryid BigInt @default(0)
  usedynalink      Int    @default(1) @db.TinyInt
  casesensitive    Int    @default(0) @db.TinyInt
  fullmatch        Int    @default(1) @db.TinyInt
  approved         Int    @default(1) @db.TinyInt

  @@index([concept], map: "sandbox_glosentr_con_ix")
  @@index([glossaryid], map: "sandbox_glosentr_glo_ix")
  @@index([userid], map: "sandbox_glosentr_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_glossary_entries_categories {
  id         BigInt @id @default(autoincrement())
  categoryid BigInt @default(0)
  entryid    BigInt @default(0)

  @@index([categoryid], map: "sandbox_glosentrcate_cat_ix")
  @@index([entryid], map: "sandbox_glosentrcate_ent_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_glossary_formats {
  id              BigInt  @id @default(autoincrement())
  name            String  @default("") @db.VarChar(50)
  popupformatname String  @default("") @db.VarChar(50)
  visible         Int     @default(1) @db.TinyInt
  showgroup       Int     @default(1) @db.TinyInt
  showtabs        String? @db.VarChar(100)
  defaultmode     String  @default("") @db.VarChar(50)
  defaulthook     String  @default("") @db.VarChar(50)
  sortkey         String  @default("") @db.VarChar(50)
  sortorder       String  @default("") @db.VarChar(50)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_categories {
  id                  BigInt  @id @default(autoincrement())
  courseid            BigInt
  parent              BigInt?
  depth               BigInt  @default(0)
  path                String? @db.VarChar(255)
  fullname            String  @default("") @db.VarChar(255)
  aggregation         BigInt  @default(0)
  keephigh            BigInt  @default(0)
  droplow             BigInt  @default(0)
  aggregateonlygraded Boolean @default(false)
  aggregateoutcomes   Boolean @default(false)
  timecreated         BigInt
  timemodified        BigInt
  hidden              BigInt  @default(0)

  @@index([courseid], map: "sandbox_gradcate_cou_ix")
  @@index([parent], map: "sandbox_gradcate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_categories_history {
  id                  BigInt  @id @default(autoincrement())
  action              BigInt  @default(0)
  oldid               BigInt
  source              String? @db.VarChar(255)
  timemodified        BigInt?
  loggeduser          BigInt?
  courseid            BigInt
  parent              BigInt?
  depth               BigInt  @default(0)
  path                String? @db.VarChar(255)
  fullname            String  @default("") @db.VarChar(255)
  aggregation         BigInt  @default(0)
  keephigh            BigInt  @default(0)
  droplow             BigInt  @default(0)
  aggregateonlygraded Boolean @default(false)
  aggregateoutcomes   Boolean @default(false)
  aggregatesubcats    Boolean @default(false)
  hidden              BigInt  @default(0)

  @@index([action], map: "sandbox_gradcatehist_act_ix")
  @@index([courseid], map: "sandbox_gradcatehist_cou_ix")
  @@index([loggeduser], map: "sandbox_gradcatehist_log_ix")
  @@index([oldid], map: "sandbox_gradcatehist_old_ix")
  @@index([parent], map: "sandbox_gradcatehist_par_ix")
  @@index([timemodified], map: "sandbox_gradcatehist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_grades {
  id                BigInt   @id @default(autoincrement())
  itemid            BigInt
  userid            BigInt
  rawgrade          Decimal? @db.Decimal(10, 5)
  rawgrademax       Decimal  @default(100.00000) @db.Decimal(10, 5)
  rawgrademin       Decimal  @default(0.00000) @db.Decimal(10, 5)
  rawscaleid        BigInt?
  usermodified      BigInt?
  finalgrade        Decimal? @db.Decimal(10, 5)
  hidden            BigInt   @default(0)
  locked            BigInt   @default(0)
  locktime          BigInt   @default(0)
  exported          BigInt   @default(0)
  overridden        BigInt   @default(0)
  excluded          BigInt   @default(0)
  feedback          String?  @db.LongText
  feedbackformat    BigInt   @default(0)
  information       String?  @db.LongText
  informationformat BigInt   @default(0)
  timecreated       BigInt?
  timemodified      BigInt?
  aggregationstatus String   @default("unknown") @db.VarChar(10)
  aggregationweight Decimal? @db.Decimal(10, 5)

  @@unique([userid, itemid], map: "sandbox_gradgrad_useite_uix")
  @@index([itemid], map: "sandbox_gradgrad_ite_ix")
  @@index([locked, locktime], map: "sandbox_gradgrad_locloc_ix")
  @@index([rawscaleid], map: "sandbox_gradgrad_raw_ix")
  @@index([usermodified], map: "sandbox_gradgrad_use2_ix")
  @@index([userid], map: "sandbox_gradgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_grades_history {
  id                BigInt   @id @default(autoincrement())
  action            BigInt   @default(0)
  oldid             BigInt
  source            String?  @db.VarChar(255)
  timemodified      BigInt?
  loggeduser        BigInt?
  itemid            BigInt
  userid            BigInt
  rawgrade          Decimal? @db.Decimal(10, 5)
  rawgrademax       Decimal  @default(100.00000) @db.Decimal(10, 5)
  rawgrademin       Decimal  @default(0.00000) @db.Decimal(10, 5)
  rawscaleid        BigInt?
  usermodified      BigInt?
  finalgrade        Decimal? @db.Decimal(10, 5)
  hidden            BigInt   @default(0)
  locked            BigInt   @default(0)
  locktime          BigInt   @default(0)
  exported          BigInt   @default(0)
  overridden        BigInt   @default(0)
  excluded          BigInt   @default(0)
  feedback          String?  @db.LongText
  feedbackformat    BigInt   @default(0)
  information       String?  @db.LongText
  informationformat BigInt   @default(0)

  @@index([action], map: "sandbox_gradgradhist_act_ix")
  @@index([itemid], map: "sandbox_gradgradhist_ite_ix")
  @@index([loggeduser], map: "sandbox_gradgradhist_log_ix")
  @@index([oldid], map: "sandbox_gradgradhist_old_ix")
  @@index([rawscaleid], map: "sandbox_gradgradhist_raw_ix")
  @@index([timemodified], map: "sandbox_gradgradhist_tim_ix")
  @@index([usermodified], map: "sandbox_gradgradhist_use2_ix")
  @@index([userid], map: "sandbox_gradgradhist_use_ix")
  @@index([userid, itemid, timemodified], map: "sandbox_gradgradhist_useite_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_import_newitem {
  id         BigInt @id @default(autoincrement())
  itemname   String @default("") @db.VarChar(255)
  importcode BigInt
  importer   BigInt

  @@index([importer], map: "sandbox_gradimponewi_imp_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_import_values {
  id                 BigInt   @id @default(autoincrement())
  itemid             BigInt?
  newgradeitem       BigInt?
  userid             BigInt
  finalgrade         Decimal? @db.Decimal(10, 5)
  feedback           String?  @db.LongText
  importcode         BigInt
  importer           BigInt?
  importonlyfeedback Boolean? @default(false)

  @@index([importer], map: "sandbox_gradimpovalu_imp_ix")
  @@index([itemid], map: "sandbox_gradimpovalu_ite_ix")
  @@index([newgradeitem], map: "sandbox_gradimpovalu_new_ix")
  @@index([userid], map: "sandbox_gradimpovalu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_items {
  id               BigInt   @id @default(autoincrement())
  courseid         BigInt?
  categoryid       BigInt?
  itemname         String?  @db.VarChar(255)
  itemtype         String   @default("") @db.VarChar(30)
  itemmodule       String?  @db.VarChar(30)
  iteminstance     BigInt?
  itemnumber       BigInt?
  iteminfo         String?  @db.LongText
  idnumber         String?  @db.VarChar(255)
  calculation      String?  @db.LongText
  gradetype        Int      @default(1) @db.SmallInt
  grademax         Decimal  @default(100.00000) @db.Decimal(10, 5)
  grademin         Decimal  @default(0.00000) @db.Decimal(10, 5)
  scaleid          BigInt?
  outcomeid        BigInt?
  gradepass        Decimal  @default(0.00000) @db.Decimal(10, 5)
  multfactor       Decimal  @default(1.00000) @db.Decimal(10, 5)
  plusfactor       Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef  Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef2 Decimal  @default(0.00000) @db.Decimal(10, 5)
  sortorder        BigInt   @default(0)
  display          BigInt   @default(0)
  decimals         Boolean?
  hidden           BigInt   @default(0)
  locked           BigInt   @default(0)
  locktime         BigInt   @default(0)
  needsupdate      BigInt   @default(0)
  weightoverride   Boolean  @default(false)
  timecreated      BigInt?
  timemodified     BigInt?

  @@index([categoryid], map: "sandbox_graditem_cat_ix")
  @@index([courseid], map: "sandbox_graditem_cou_ix")
  @@index([gradetype], map: "sandbox_graditem_gra_ix")
  @@index([idnumber, courseid], map: "sandbox_graditem_idncou_ix")
  @@index([itemtype, itemmodule, iteminstance, courseid], map: "sandbox_graditem_iteiteitec_ix")
  @@index([itemtype, needsupdate], map: "sandbox_graditem_itenee_ix")
  @@index([locked, locktime], map: "sandbox_graditem_locloc_ix")
  @@index([outcomeid], map: "sandbox_graditem_out_ix")
  @@index([scaleid], map: "sandbox_graditem_sca_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_items_history {
  id               BigInt   @id @default(autoincrement())
  action           BigInt   @default(0)
  oldid            BigInt
  source           String?  @db.VarChar(255)
  timemodified     BigInt?
  loggeduser       BigInt?
  courseid         BigInt?
  categoryid       BigInt?
  itemname         String?  @db.VarChar(255)
  itemtype         String   @default("") @db.VarChar(30)
  itemmodule       String?  @db.VarChar(30)
  iteminstance     BigInt?
  itemnumber       BigInt?
  iteminfo         String?  @db.LongText
  idnumber         String?  @db.VarChar(255)
  calculation      String?  @db.LongText
  gradetype        Int      @default(1) @db.SmallInt
  grademax         Decimal  @default(100.00000) @db.Decimal(10, 5)
  grademin         Decimal  @default(0.00000) @db.Decimal(10, 5)
  scaleid          BigInt?
  outcomeid        BigInt?
  gradepass        Decimal  @default(0.00000) @db.Decimal(10, 5)
  multfactor       Decimal  @default(1.00000) @db.Decimal(10, 5)
  plusfactor       Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef  Decimal  @default(0.00000) @db.Decimal(10, 5)
  aggregationcoef2 Decimal  @default(0.00000) @db.Decimal(10, 5)
  sortorder        BigInt   @default(0)
  hidden           BigInt   @default(0)
  locked           BigInt   @default(0)
  locktime         BigInt   @default(0)
  needsupdate      BigInt   @default(0)
  display          BigInt   @default(0)
  decimals         Boolean?
  weightoverride   Boolean  @default(false)

  @@index([action], map: "sandbox_graditemhist_act_ix")
  @@index([categoryid], map: "sandbox_graditemhist_cat_ix")
  @@index([courseid], map: "sandbox_graditemhist_cou_ix")
  @@index([loggeduser], map: "sandbox_graditemhist_log_ix")
  @@index([oldid], map: "sandbox_graditemhist_old_ix")
  @@index([outcomeid], map: "sandbox_graditemhist_out_ix")
  @@index([scaleid], map: "sandbox_graditemhist_sca_ix")
  @@index([timemodified], map: "sandbox_graditemhist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_letters {
  id            BigInt  @id @default(autoincrement())
  contextid     BigInt
  lowerboundary Decimal @db.Decimal(10, 5)
  letter        String  @default("") @db.VarChar(255)

  @@unique([contextid, lowerboundary, letter], map: "sandbox_gradlett_conlowlet_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_outcomes {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt?
  shortname         String  @default("") @db.VarChar(255)
  fullname          String  @db.LongText
  scaleid           BigInt?
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  timecreated       BigInt?
  timemodified      BigInt?
  usermodified      BigInt?

  @@unique([courseid, shortname], map: "sandbox_gradoutc_cousho_uix")
  @@index([courseid], map: "sandbox_gradoutc_cou_ix")
  @@index([scaleid], map: "sandbox_gradoutc_sca_ix")
  @@index([usermodified], map: "sandbox_gradoutc_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_outcomes_courses {
  id        BigInt @id @default(autoincrement())
  courseid  BigInt
  outcomeid BigInt

  @@unique([courseid, outcomeid], map: "sandbox_gradoutccour_couou_uix")
  @@index([courseid], map: "sandbox_gradoutccour_cou_ix")
  @@index([outcomeid], map: "sandbox_gradoutccour_out_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_outcomes_history {
  id                BigInt  @id @default(autoincrement())
  action            BigInt  @default(0)
  oldid             BigInt
  source            String? @db.VarChar(255)
  timemodified      BigInt?
  loggeduser        BigInt?
  courseid          BigInt?
  shortname         String  @default("") @db.VarChar(255)
  fullname          String  @db.LongText
  scaleid           BigInt?
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt

  @@index([action], map: "sandbox_gradoutchist_act_ix")
  @@index([courseid], map: "sandbox_gradoutchist_cou_ix")
  @@index([loggeduser], map: "sandbox_gradoutchist_log_ix")
  @@index([oldid], map: "sandbox_gradoutchist_old_ix")
  @@index([scaleid], map: "sandbox_gradoutchist_sca_ix")
  @@index([timemodified], map: "sandbox_gradoutchist_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grade_settings {
  id       BigInt  @id @default(autoincrement())
  courseid BigInt
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@unique([courseid, name], map: "sandbox_gradsett_counam_uix")
  @@index([courseid], map: "sandbox_gradsett_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grading_areas {
  id           BigInt  @id @default(autoincrement())
  contextid    BigInt
  component    String  @default("") @db.VarChar(100)
  areaname     String  @default("") @db.VarChar(100)
  activemethod String? @db.VarChar(100)

  @@unique([contextid, component, areaname], map: "sandbox_gradarea_concomare_uix")
  @@index([contextid], map: "sandbox_gradarea_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grading_definitions {
  id                BigInt  @id @default(autoincrement())
  areaid            BigInt
  method            String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(255)
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt
  status            BigInt  @default(0)
  copiedfromid      BigInt?
  timecreated       BigInt
  usercreated       BigInt
  timemodified      BigInt
  usermodified      BigInt
  timecopied        BigInt? @default(0)
  options           String? @db.LongText

  @@unique([areaid, method], map: "sandbox_graddefi_aremet_uix")
  @@index([areaid], map: "sandbox_graddefi_are_ix")
  @@index([usercreated], map: "sandbox_graddefi_use2_ix")
  @@index([usermodified], map: "sandbox_graddefi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_grading_instances {
  id             BigInt   @id @default(autoincrement())
  definitionid   BigInt
  raterid        BigInt
  itemid         BigInt?
  rawgrade       Decimal? @db.Decimal(10, 5)
  status         BigInt   @default(0)
  feedback       String?  @db.LongText
  feedbackformat Int?     @db.TinyInt
  timemodified   BigInt

  @@index([definitionid], map: "sandbox_gradinst_def_ix")
  @@index([raterid], map: "sandbox_gradinst_rat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_gradingform_guide_comments {
  id                BigInt  @id @default(autoincrement())
  definitionid      BigInt
  sortorder         BigInt
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt

  @@index([definitionid], map: "sandbox_gradguidcomm_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_gradingform_guide_criteria {
  id                       BigInt  @id @default(autoincrement())
  definitionid             BigInt
  sortorder                BigInt
  shortname                String  @default("") @db.VarChar(255)
  description              String? @db.LongText
  descriptionformat        Int?    @db.TinyInt
  descriptionmarkers       String? @db.LongText
  descriptionmarkersformat Int?    @db.TinyInt
  maxscore                 Decimal @db.Decimal(10, 5)

  @@index([definitionid], map: "sandbox_gradguidcrit_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_gradingform_guide_fillings {
  id           BigInt  @id @default(autoincrement())
  instanceid   BigInt
  criterionid  BigInt
  remark       String? @db.LongText
  remarkformat Int?    @db.TinyInt
  score        Decimal @db.Decimal(10, 5)

  @@unique([instanceid, criterionid], map: "sandbox_gradguidfill_inscr_uix")
  @@index([criterionid], map: "sandbox_gradguidfill_cri_ix")
  @@index([instanceid], map: "sandbox_gradguidfill_ins_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_gradingform_rubric_criteria {
  id                BigInt  @id @default(autoincrement())
  definitionid      BigInt
  sortorder         BigInt
  description       String? @db.LongText
  descriptionformat Int?    @db.TinyInt

  @@index([definitionid], map: "sandbox_gradrubrcrit_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_gradingform_rubric_fillings {
  id           BigInt  @id @default(autoincrement())
  instanceid   BigInt
  criterionid  BigInt
  levelid      BigInt?
  remark       String? @db.LongText
  remarkformat Int?    @db.TinyInt

  @@unique([instanceid, criterionid], map: "sandbox_gradrubrfill_inscr_uix")
  @@index([criterionid], map: "sandbox_gradrubrfill_cri_ix")
  @@index([instanceid], map: "sandbox_gradrubrfill_ins_ix")
  @@index([levelid], map: "sandbox_gradrubrfill_lev_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_gradingform_rubric_levels {
  id               BigInt  @id @default(autoincrement())
  criterionid      BigInt
  score            Decimal @db.Decimal(10, 5)
  definition       String? @db.LongText
  definitionformat BigInt?

  @@index([criterionid], map: "sandbox_gradrubrleve_cri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_groupings {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt  @default(0)
  name              String  @default("") @db.VarChar(255)
  idnumber          String  @default("") @db.VarChar(100)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  configdata        String? @db.LongText
  timecreated       BigInt  @default(0)
  timemodified      BigInt  @default(0)

  @@index([courseid], map: "sandbox_grou_cou2_ix")
  @@index([idnumber], map: "sandbox_grou_idn2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_groupings_groups {
  id         BigInt @id @default(autoincrement())
  groupingid BigInt @default(0)
  groupid    BigInt @default(0)
  timeadded  BigInt @default(0)

  @@index([groupid], map: "sandbox_grougrou_gro2_ix")
  @@index([groupingid], map: "sandbox_grougrou_gro_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_groups {
  id                BigInt  @id @default(autoincrement())
  courseid          BigInt
  idnumber          String  @default("") @db.VarChar(100)
  name              String  @default("") @db.VarChar(254)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  enrolmentkey      String? @db.VarChar(50)
  picture           BigInt  @default(0)
  visibility        Boolean @default(false)
  participation     Boolean @default(true)
  timecreated       BigInt  @default(0)
  timemodified      BigInt  @default(0)

  @@index([courseid], map: "sandbox_grou_cou_ix")
  @@index([idnumber], map: "sandbox_grou_idn_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_groups_members {
  id        BigInt @id @default(autoincrement())
  groupid   BigInt @default(0)
  userid    BigInt @default(0)
  timeadded BigInt @default(0)
  component String @default("") @db.VarChar(100)
  itemid    BigInt @default(0)

  @@unique([userid, groupid], map: "sandbox_groumemb_usegro_uix")
  @@index([groupid], map: "sandbox_groumemb_gro_ix")
  @@index([userid], map: "sandbox_groumemb_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_h5p {
  id             BigInt  @id @default(autoincrement())
  jsoncontent    String  @db.LongText
  mainlibraryid  BigInt
  displayoptions Int?    @db.SmallInt
  pathnamehash   String  @default("") @db.VarChar(40)
  contenthash    String  @default("") @db.VarChar(40)
  filtered       String? @db.LongText
  timecreated    BigInt  @default(0)
  timemodified   BigInt  @default(0)

  @@index([mainlibraryid], map: "sandbox_h5p_mai_ix")
  @@index([pathnamehash], map: "sandbox_h5p_pat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_h5p_contents_libraries {
  id             BigInt  @id @default(autoincrement())
  h5pid          BigInt
  libraryid      BigInt
  dependencytype String  @default("") @db.VarChar(10)
  dropcss        Boolean
  weight         BigInt

  @@index([h5pid], map: "sandbox_h5pcontlibr_h5p_ix")
  @@index([libraryid], map: "sandbox_h5pcontlibr_lib_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_h5p_libraries {
  id               BigInt   @id @default(autoincrement())
  machinename      String   @default("") @db.VarChar(255)
  title            String   @default("") @db.VarChar(255)
  majorversion     Int      @db.SmallInt
  minorversion     Int      @db.SmallInt
  patchversion     Int      @db.SmallInt
  runnable         Boolean
  fullscreen       Boolean  @default(false)
  embedtypes       String   @default("") @db.VarChar(255)
  preloadedjs      String?  @db.LongText
  preloadedcss     String?  @db.LongText
  droplibrarycss   String?  @db.LongText
  semantics        String?  @db.LongText
  addto            String?  @db.LongText
  coremajor        Int?     @db.SmallInt
  coreminor        Int?     @db.SmallInt
  metadatasettings String?  @db.LongText
  tutorial         String?  @db.LongText
  example          String?  @db.LongText
  enabled          Boolean? @default(true)

  @@index([machinename, majorversion, minorversion, patchversion, runnable], map: "sandbox_h5plibr_macmajminpa_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_h5p_libraries_cachedassets {
  id        BigInt @id @default(autoincrement())
  libraryid BigInt
  hash      String @default("") @db.VarChar(255)

  @@index([libraryid], map: "sandbox_h5plibrcach_lib_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_h5p_library_dependencies {
  id                BigInt @id @default(autoincrement())
  libraryid         BigInt
  requiredlibraryid BigInt
  dependencytype    String @default("") @db.VarChar(255)

  @@index([libraryid], map: "sandbox_h5plibrdepe_lib_ix")
  @@index([requiredlibraryid], map: "sandbox_h5plibrdepe_req_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_h5pactivity {
  id             BigInt  @id @default(autoincrement())
  course         BigInt
  name           String  @default("") @db.VarChar(255)
  timecreated    BigInt
  timemodified   BigInt
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  grade          BigInt? @default(0)
  displayoptions Int     @default(0) @db.SmallInt
  enabletracking Boolean @default(true)
  grademethod    Int     @default(1) @db.SmallInt
  reviewmode     Int?    @default(1) @db.SmallInt

  @@index([course], map: "sandbox_h5pa_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_h5pactivity_attempts {
  id            BigInt   @id @default(autoincrement())
  h5pactivityid BigInt
  userid        BigInt
  timecreated   BigInt
  timemodified  BigInt
  attempt       Int      @default(1) @db.MediumInt
  rawscore      BigInt?  @default(0)
  maxscore      BigInt?  @default(0)
  scaled        Decimal  @default(0.00000) @db.Decimal(10, 5)
  duration      BigInt?  @default(0)
  completion    Boolean?
  success       Boolean?

  @@unique([h5pactivityid, userid, attempt], map: "sandbox_h5paatte_h5puseatt_uix")
  @@index([h5pactivityid], map: "sandbox_h5paatte_h5p_ix")
  @@index([h5pactivityid, timecreated], map: "sandbox_h5paatte_h5ptim_ix")
  @@index([h5pactivityid, userid], map: "sandbox_h5paatte_h5puse_ix")
  @@index([timecreated], map: "sandbox_h5paatte_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_h5pactivity_attempts_results {
  id              BigInt   @id @default(autoincrement())
  attemptid       BigInt
  subcontent      String?  @db.VarChar(128)
  timecreated     BigInt
  interactiontype String?  @db.VarChar(128)
  description     String?  @db.LongText
  correctpattern  String?  @db.LongText
  response        String   @db.LongText
  additionals     String?  @db.LongText
  rawscore        BigInt   @default(0)
  maxscore        BigInt   @default(0)
  duration        BigInt?  @default(0)
  completion      Boolean?
  success         Boolean?

  @@index([attemptid], map: "sandbox_h5paatteresu_att_ix")
  @@index([attemptid, timecreated], map: "sandbox_h5paatteresu_atttim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_imscp {
  id           BigInt  @id @default(autoincrement())
  course       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  revision     BigInt  @default(0)
  keepold      BigInt  @default(-1)
  structure    String? @db.LongText
  timemodified BigInt  @default(0)

  @@index([course], map: "sandbox_imsc_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_infected_files {
  id              BigInt  @id @default(autoincrement())
  filename        String  @db.LongText
  quarantinedfile String? @db.LongText
  userid          BigInt
  reason          String  @db.LongText
  timecreated     BigInt  @default(0)

  @@index([userid], map: "sandbox_infefile_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_label {
  id           BigInt @id @default(autoincrement())
  course       BigInt @default(0)
  name         String @default("") @db.VarChar(255)
  intro        String @db.LongText
  introformat  Int?   @default(0) @db.SmallInt
  timemodified BigInt @default(0)

  @@index([course], map: "sandbox_labe_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lesson {
  id                   BigInt   @id @default(autoincrement())
  course               BigInt   @default(0)
  name                 String   @default("") @db.VarChar(255)
  intro                String?  @db.LongText
  introformat          Int      @default(0) @db.SmallInt
  practice             Int      @default(0) @db.SmallInt
  modattempts          Int      @default(0) @db.SmallInt
  usepassword          Int      @default(0) @db.SmallInt
  password             String   @default("") @db.VarChar(32)
  dependency           BigInt   @default(0)
  conditions           String   @db.LongText
  grade                BigInt   @default(0)
  custom               Int      @default(0) @db.SmallInt
  ongoing              Int      @default(0) @db.SmallInt
  usemaxgrade          Int      @default(0) @db.SmallInt
  maxanswers           Int      @default(4) @db.SmallInt
  maxattempts          Int      @default(5) @db.SmallInt
  review               Int      @default(0) @db.SmallInt
  nextpagedefault      Int      @default(0) @db.SmallInt
  feedback             Int      @default(1) @db.SmallInt
  minquestions         Int      @default(0) @db.SmallInt
  maxpages             Int      @default(0) @db.SmallInt
  timelimit            BigInt   @default(0)
  retake               Int      @default(1) @db.SmallInt
  activitylink         BigInt   @default(0)
  mediafile            String   @default("") @db.VarChar(255)
  mediaheight          BigInt   @default(100)
  mediawidth           BigInt   @default(650)
  mediaclose           Int      @default(0) @db.SmallInt
  slideshow            Int      @default(0) @db.SmallInt
  width                BigInt   @default(640)
  height               BigInt   @default(480)
  bgcolor              String   @default("#FFFFFF") @db.VarChar(7)
  displayleft          Int      @default(0) @db.SmallInt
  displayleftif        Int      @default(0) @db.SmallInt
  progressbar          Int      @default(0) @db.SmallInt
  available            BigInt   @default(0)
  deadline             BigInt   @default(0)
  timemodified         BigInt   @default(0)
  completionendreached Boolean? @default(false)
  completiontimespent  BigInt?  @default(0)
  allowofflineattempts Boolean? @default(false)

  @@index([course], map: "sandbox_less_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lesson_answers {
  id             BigInt  @id @default(autoincrement())
  lessonid       BigInt  @default(0)
  pageid         BigInt  @default(0)
  jumpto         BigInt  @default(0)
  grade          Int     @default(0) @db.SmallInt
  score          BigInt  @default(0)
  flags          Int     @default(0) @db.SmallInt
  timecreated    BigInt  @default(0)
  timemodified   BigInt  @default(0)
  answer         String? @db.LongText
  answerformat   Int     @default(0) @db.TinyInt
  response       String? @db.LongText
  responseformat Int     @default(0) @db.TinyInt

  @@index([lessonid], map: "sandbox_lessansw_les_ix")
  @@index([pageid], map: "sandbox_lessansw_pag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lesson_attempts {
  id         BigInt  @id @default(autoincrement())
  lessonid   BigInt  @default(0)
  pageid     BigInt  @default(0)
  userid     BigInt  @default(0)
  answerid   BigInt  @default(0)
  retry      Int     @default(0) @db.SmallInt
  correct    BigInt  @default(0)
  useranswer String? @db.LongText
  timeseen   BigInt  @default(0)

  @@index([answerid], map: "sandbox_lessatte_ans_ix")
  @@index([lessonid], map: "sandbox_lessatte_les_ix")
  @@index([pageid], map: "sandbox_lessatte_pag_ix")
  @@index([userid], map: "sandbox_lessatte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lesson_branch {
  id         BigInt @id @default(autoincrement())
  lessonid   BigInt @default(0)
  userid     BigInt @default(0)
  pageid     BigInt @default(0)
  retry      BigInt @default(0)
  flag       Int    @default(0) @db.SmallInt
  timeseen   BigInt @default(0)
  nextpageid BigInt @default(0)

  @@index([lessonid], map: "sandbox_lessbran_les_ix")
  @@index([pageid], map: "sandbox_lessbran_pag_ix")
  @@index([userid], map: "sandbox_lessbran_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lesson_grades {
  id        BigInt @id @default(autoincrement())
  lessonid  BigInt @default(0)
  userid    BigInt @default(0)
  grade     Float  @default(0)
  late      Int    @default(0) @db.SmallInt
  completed BigInt @default(0)

  @@index([lessonid], map: "sandbox_lessgrad_les_ix")
  @@index([userid], map: "sandbox_lessgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lesson_overrides {
  id          BigInt  @id @default(autoincrement())
  lessonid    BigInt  @default(0)
  groupid     BigInt?
  userid      BigInt?
  available   BigInt?
  deadline    BigInt?
  timelimit   BigInt?
  review      Int?    @db.SmallInt
  maxattempts Int?    @db.SmallInt
  retake      Int?    @db.SmallInt
  password    String? @db.VarChar(32)

  @@index([groupid], map: "sandbox_lessover_gro_ix")
  @@index([lessonid], map: "sandbox_lessover_les_ix")
  @@index([userid], map: "sandbox_lessover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lesson_pages {
  id             BigInt @id @default(autoincrement())
  lessonid       BigInt @default(0)
  prevpageid     BigInt @default(0)
  nextpageid     BigInt @default(0)
  qtype          Int    @default(0) @db.SmallInt
  qoption        Int    @default(0) @db.SmallInt
  layout         Int    @default(1) @db.SmallInt
  display        Int    @default(1) @db.SmallInt
  timecreated    BigInt @default(0)
  timemodified   BigInt @default(0)
  title          String @default("") @db.VarChar(255)
  contents       String @db.LongText
  contentsformat Int    @default(0) @db.TinyInt

  @@index([lessonid], map: "sandbox_lesspage_les_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lesson_timer {
  id                  BigInt   @id @default(autoincrement())
  lessonid            BigInt   @default(0)
  userid              BigInt   @default(0)
  starttime           BigInt   @default(0)
  lessontime          BigInt   @default(0)
  completed           Boolean? @default(false)
  timemodifiedoffline BigInt   @default(0)

  @@index([lessonid], map: "sandbox_lesstime_les_ix")
  @@index([userid], map: "sandbox_lesstime_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_license {
  id        BigInt  @id @default(autoincrement())
  shortname String? @db.VarChar(255)
  fullname  String? @db.LongText
  source    String? @db.VarChar(255)
  enabled   Boolean @default(true)
  version   BigInt  @default(0)
  custom    Boolean @default(false)
  sortorder Int     @default(0) @db.MediumInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lock_db {
  id          BigInt  @id @default(autoincrement())
  resourcekey String  @unique(map: "sandbox_lockdb_res_uix") @default("") @db.VarChar(255)
  expires     BigInt?
  owner       String? @db.VarChar(36)

  @@index([expires], map: "sandbox_lockdb_exp_ix")
  @@index([owner], map: "sandbox_lockdb_own_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_log {
  id     BigInt @id @default(autoincrement())
  time   BigInt @default(0)
  userid BigInt @default(0)
  ip     String @default("") @db.VarChar(45)
  course BigInt @default(0)
  module String @default("") @db.VarChar(20)
  cmid   BigInt @default(0)
  action String @default("") @db.VarChar(40)
  url    String @default("") @db.VarChar(100)
  info   String @default("") @db.VarChar(255)

  @@index([action], map: "sandbox_log_act_ix")
  @@index([cmid], map: "sandbox_log_cmi_ix")
  @@index([course, module, action], map: "sandbox_log_coumodact_ix")
  @@index([time], map: "sandbox_log_tim_ix")
  @@index([userid, course], map: "sandbox_log_usecou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_log_display {
  id        BigInt @id @default(autoincrement())
  module    String @default("") @db.VarChar(20)
  action    String @default("") @db.VarChar(40)
  mtable    String @default("") @db.VarChar(30)
  field     String @default("") @db.VarChar(200)
  component String @default("") @db.VarChar(100)

  @@unique([module, action], map: "sandbox_logdisp_modact_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_log_queries {
  id         BigInt  @id @default(autoincrement())
  qtype      Int     @db.MediumInt
  sqltext    String  @db.LongText
  sqlparams  String? @db.LongText
  error      Int     @default(0) @db.MediumInt
  info       String? @db.LongText
  backtrace  String? @db.LongText
  exectime   Decimal @db.Decimal(10, 5)
  timelogged BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_logstore_standard_log {
  id                BigInt  @id @default(autoincrement())
  eventname         String  @default("") @db.VarChar(255)
  component         String  @default("") @db.VarChar(100)
  action            String  @default("") @db.VarChar(100)
  target            String  @default("") @db.VarChar(100)
  objecttable       String? @db.VarChar(50)
  objectid          BigInt?
  crud              String  @default("") @db.VarChar(1)
  edulevel          Boolean
  contextid         BigInt
  contextlevel      BigInt
  contextinstanceid BigInt
  userid            BigInt
  courseid          BigInt?
  relateduserid     BigInt?
  anonymous         Boolean @default(false)
  other             String? @db.LongText
  timecreated       BigInt
  origin            String? @db.VarChar(10)
  ip                String? @db.VarChar(45)
  realuserid        BigInt?

  @@index([contextid], map: "sandbox_logsstanlog_con_ix")
  @@index([courseid], map: "sandbox_logsstanlog_cou_ix")
  @@index([courseid, anonymous, timecreated], map: "sandbox_logsstanlog_couanot_ix")
  @@index([realuserid], map: "sandbox_logsstanlog_rea_ix")
  @@index([relateduserid], map: "sandbox_logsstanlog_rel_ix")
  @@index([timecreated], map: "sandbox_logsstanlog_tim_ix")
  @@index([userid], map: "sandbox_logsstanlog_use_ix")
  @@index([userid, contextlevel, contextinstanceid, crud, edulevel, timecreated], map: "sandbox_logsstanlog_useconc_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti {
  id                            BigInt   @id @default(autoincrement())
  course                        BigInt   @default(0)
  name                          String   @default("") @db.VarChar(255)
  intro                         String?  @db.LongText
  introformat                   Int?     @default(0) @db.SmallInt
  timecreated                   BigInt   @default(0)
  timemodified                  BigInt   @default(0)
  typeid                        BigInt?
  toolurl                       String   @db.LongText
  securetoolurl                 String?  @db.LongText
  instructorchoicesendname      Boolean?
  instructorchoicesendemailaddr Boolean?
  instructorchoiceallowroster   Boolean?
  instructorchoiceallowsetting  Boolean?
  instructorcustomparameters    String?  @db.LongText
  instructorchoiceacceptgrades  Boolean?
  grade                         BigInt   @default(100)
  launchcontainer               Int      @default(1) @db.TinyInt
  resourcekey                   String?  @db.VarChar(255)
  password                      String?  @db.VarChar(255)
  debuglaunch                   Boolean  @default(false)
  showtitlelaunch               Boolean  @default(false)
  showdescriptionlaunch         Boolean  @default(false)
  servicesalt                   String?  @db.VarChar(40)
  icon                          String?  @db.LongText
  secureicon                    String?  @db.LongText

  @@index([course], map: "sandbox_lti_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti_access_tokens {
  id          BigInt  @id @default(autoincrement())
  typeid      BigInt
  scope       String  @db.LongText
  token       String  @unique(map: "sandbox_ltiaccetoke_tok_uix") @default("") @db.VarChar(128)
  validuntil  BigInt
  timecreated BigInt
  lastaccess  BigInt?

  @@index([typeid], map: "sandbox_ltiaccetoke_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti_coursevisible {
  id            BigInt  @id @default(autoincrement())
  typeid        BigInt
  courseid      BigInt
  coursevisible Boolean

  @@index([courseid], map: "sandbox_lticour_cou_ix")
  @@index([typeid], map: "sandbox_lticour_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti_submission {
  id            BigInt  @id @default(autoincrement())
  ltiid         BigInt
  userid        BigInt
  datesubmitted BigInt
  dateupdated   BigInt
  gradepercent  Decimal @db.Decimal(10, 5)
  originalgrade Decimal @db.Decimal(10, 5)
  launchid      BigInt
  state         Int     @db.TinyInt

  @@index([ltiid], map: "sandbox_ltisubm_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti_tool_proxies {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("Tool Provider") @db.VarChar(255)
  regurl            String? @db.LongText
  state             Int     @default(1) @db.TinyInt
  guid              String? @unique(map: "sandbox_ltitoolprox_gui_uix") @db.VarChar(255)
  secret            String? @db.VarChar(255)
  vendorcode        String? @db.VarChar(255)
  capabilityoffered String  @db.LongText
  serviceoffered    String  @db.LongText
  toolproxy         String? @db.LongText
  createdby         BigInt
  timecreated       BigInt
  timemodified      BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti_tool_settings {
  id             BigInt  @id @default(autoincrement())
  toolproxyid    BigInt
  typeid         BigInt?
  course         BigInt?
  coursemoduleid BigInt?
  settings       String  @db.LongText
  timecreated    BigInt
  timemodified   BigInt

  @@index([coursemoduleid], map: "sandbox_ltitoolsett_cou2_ix")
  @@index([course], map: "sandbox_ltitoolsett_cou_ix")
  @@index([toolproxyid], map: "sandbox_ltitoolsett_too_ix")
  @@index([typeid], map: "sandbox_ltitoolsett_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti_types {
  id                BigInt  @id @default(autoincrement())
  name              String  @default("basiclti Activity") @db.VarChar(255)
  baseurl           String  @db.LongText
  tooldomain        String  @default("") @db.VarChar(255)
  state             Int     @default(2) @db.TinyInt
  course            BigInt
  coursevisible     Boolean @default(false)
  ltiversion        String  @default("") @db.VarChar(10)
  clientid          String? @unique(map: "sandbox_ltitype_cli_uix") @db.VarChar(255)
  toolproxyid       BigInt?
  enabledcapability String? @db.LongText
  parameter         String? @db.LongText
  icon              String? @db.LongText
  secureicon        String? @db.LongText
  createdby         BigInt
  timecreated       BigInt
  timemodified      BigInt
  description       String? @db.LongText

  @@index([course], map: "sandbox_ltitype_cou_ix")
  @@index([tooldomain], map: "sandbox_ltitype_too_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti_types_categories {
  id         BigInt @id @default(autoincrement())
  typeid     BigInt
  categoryid BigInt

  @@index([categoryid], map: "sandbox_ltitypecate_cat_ix")
  @@index([typeid], map: "sandbox_ltitypecate_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_lti_types_config {
  id     BigInt @id @default(autoincrement())
  typeid BigInt
  name   String @default("") @db.VarChar(100)
  value  String @db.LongText

  @@index([typeid], map: "sandbox_ltitypeconf_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_ltiservice_gradebookservices {
  id              BigInt  @id @default(autoincrement())
  gradeitemid     BigInt
  courseid        BigInt
  toolproxyid     BigInt?
  typeid          BigInt?
  baseurl         String? @db.LongText
  ltilinkid       BigInt?
  resourceid      String? @db.VarChar(512)
  tag             String? @db.VarChar(255)
  subreviewurl    String? @db.LongText
  subreviewparams String? @db.LongText

  @@index([gradeitemid, courseid], map: "sandbox_ltisgrad_gracou_ix")
  @@index([ltilinkid], map: "sandbox_ltisgrad_lti_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_matrix_room {
  id     BigInt  @id @default(autoincrement())
  commid BigInt
  roomid String? @db.VarChar(255)
  topic  String? @db.VarChar(255)

  @@index([commid], map: "sandbox_matrroom_com_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message {
  id                  BigInt   @id @default(autoincrement())
  useridfrom          BigInt   @default(0)
  useridto            BigInt   @default(0)
  subject             String?  @db.LongText
  fullmessage         String?  @db.LongText
  fullmessageformat   Int?     @default(0) @db.SmallInt
  fullmessagehtml     String?  @db.LongText
  smallmessage        String?  @db.LongText
  notification        Boolean? @default(false)
  contexturl          String?  @db.LongText
  contexturlname      String?  @db.LongText
  timecreated         BigInt   @default(0)
  timeuserfromdeleted BigInt   @default(0)
  timeusertodeleted   BigInt   @default(0)
  component           String?  @db.VarChar(100)
  eventtype           String?  @db.VarChar(100)
  customdata          String?  @db.LongText

  @@index([useridto, timeusertodeleted, notification], map: "sandbox_mess_usetimnot2_ix")
  @@index([useridfrom, timeuserfromdeleted, notification], map: "sandbox_mess_usetimnot_ix")
  @@index([useridfrom, useridto, timeuserfromdeleted, timeusertodeleted], map: "sandbox_mess_useusetimtim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_airnotifier_devices {
  id           BigInt  @id @default(autoincrement())
  userdeviceid BigInt  @unique(map: "sandbox_messairndevi_use_uix")
  enable       Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_contact_requests {
  id              BigInt @id @default(autoincrement())
  userid          BigInt
  requesteduserid BigInt
  timecreated     BigInt

  @@unique([userid, requesteduserid], map: "sandbox_messcontrequ_usere_uix")
  @@index([requesteduserid], map: "sandbox_messcontrequ_req_ix")
  @@index([userid], map: "sandbox_messcontrequ_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_contacts {
  id          BigInt  @id @default(autoincrement())
  userid      BigInt
  contactid   BigInt
  timecreated BigInt?

  @@unique([userid, contactid], map: "sandbox_messcont_usecon_uix")
  @@index([contactid], map: "sandbox_messcont_con_ix")
  @@index([userid], map: "sandbox_messcont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_conversation_actions {
  id             BigInt @id @default(autoincrement())
  userid         BigInt
  conversationid BigInt
  action         BigInt
  timecreated    BigInt

  @@index([conversationid], map: "sandbox_messconvacti_con_ix")
  @@index([userid], map: "sandbox_messconvacti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_conversation_members {
  id             BigInt @id @default(autoincrement())
  conversationid BigInt
  userid         BigInt
  timecreated    BigInt

  @@index([conversationid], map: "sandbox_messconvmemb_con_ix")
  @@index([userid], map: "sandbox_messconvmemb_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_conversations {
  id           BigInt  @id @default(autoincrement())
  type         BigInt  @default(1)
  name         String? @db.VarChar(255)
  convhash     String? @db.VarChar(40)
  component    String? @db.VarChar(100)
  itemtype     String? @db.VarChar(100)
  itemid       BigInt?
  contextid    BigInt?
  enabled      Boolean @default(false)
  timecreated  BigInt
  timemodified BigInt?

  @@index([component, itemtype, itemid, contextid], map: "sandbox_messconv_comiteitec_ix")
  @@index([contextid], map: "sandbox_messconv_con2_ix")
  @@index([convhash], map: "sandbox_messconv_con_ix")
  @@index([type], map: "sandbox_messconv_typ_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_email_messages {
  id             BigInt @id @default(autoincrement())
  useridto       BigInt
  conversationid BigInt
  messageid      BigInt

  @@index([conversationid], map: "sandbox_messemaimess_con_ix")
  @@index([messageid], map: "sandbox_messemaimess_mes_ix")
  @@index([useridto], map: "sandbox_messemaimess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_popup {
  id        BigInt  @id @default(autoincrement())
  messageid BigInt
  isread    Boolean @default(false)

  @@unique([messageid, isread], map: "sandbox_messpopu_mesisr_uix")
  @@index([isread], map: "sandbox_messpopu_isr_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_popup_notifications {
  id             BigInt @id @default(autoincrement())
  notificationid BigInt

  @@index([notificationid], map: "sandbox_messpopunoti_not_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_processors {
  id      BigInt  @id @default(autoincrement())
  name    String  @default("") @db.VarChar(166)
  enabled Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_providers {
  id         BigInt  @id @default(autoincrement())
  name       String  @default("") @db.VarChar(100)
  component  String  @default("") @db.VarChar(200)
  capability String? @db.VarChar(255)

  @@unique([component, name], map: "sandbox_messprov_comnam_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_read {
  id                  BigInt   @id @default(autoincrement())
  useridfrom          BigInt   @default(0)
  useridto            BigInt   @default(0)
  subject             String?  @db.LongText
  fullmessage         String?  @db.LongText
  fullmessageformat   Int?     @default(0) @db.SmallInt
  fullmessagehtml     String?  @db.LongText
  smallmessage        String?  @db.LongText
  notification        Boolean? @default(false)
  contexturl          String?  @db.LongText
  contexturlname      String?  @db.LongText
  timecreated         BigInt   @default(0)
  timeread            BigInt   @default(0)
  timeuserfromdeleted BigInt   @default(0)
  timeusertodeleted   BigInt   @default(0)
  component           String?  @db.VarChar(100)
  eventtype           String?  @db.VarChar(100)

  @@index([notification, timeread], map: "sandbox_messread_nottim_ix")
  @@index([useridto, timeusertodeleted, notification], map: "sandbox_messread_usetimnot2_ix")
  @@index([useridfrom, timeuserfromdeleted, notification], map: "sandbox_messread_usetimnot_ix")
  @@index([useridfrom, useridto, timeuserfromdeleted, timeusertodeleted], map: "sandbox_messread_useusetimt_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_user_actions {
  id          BigInt @id @default(autoincrement())
  userid      BigInt
  messageid   BigInt
  action      BigInt
  timecreated BigInt

  @@unique([userid, messageid, action], map: "sandbox_messuseracti_useme_uix")
  @@index([messageid], map: "sandbox_messuseracti_mes_ix")
  @@index([userid], map: "sandbox_messuseracti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_message_users_blocked {
  id            BigInt  @id @default(autoincrement())
  userid        BigInt
  blockeduserid BigInt
  timecreated   BigInt?

  @@unique([userid, blockeduserid], map: "sandbox_messuserbloc_usebl_uix")
  @@index([blockeduserid], map: "sandbox_messuserbloc_blo_ix")
  @@index([userid], map: "sandbox_messuserbloc_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_messageinbound_datakeys {
  id          BigInt  @id @default(autoincrement())
  handler     BigInt
  datavalue   BigInt
  datakey     String? @db.VarChar(64)
  timecreated BigInt
  expires     BigInt?

  @@unique([handler, datavalue], map: "sandbox_messdata_handat_uix")
  @@index([handler], map: "sandbox_messdata_han_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_messageinbound_handlers {
  id                BigInt  @id @default(autoincrement())
  component         String  @default("") @db.VarChar(100)
  classname         String  @unique(map: "sandbox_messhand_cla_uix") @default("") @db.VarChar(255)
  defaultexpiration BigInt  @default(86400)
  validateaddress   Boolean @default(true)
  enabled           Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_messageinbound_messagelist {
  id          BigInt @id @default(autoincrement())
  messageid   String @db.LongText
  userid      BigInt
  address     String @db.LongText
  timecreated BigInt

  @@index([userid], map: "sandbox_messmess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_messages {
  id                BigInt  @id @default(autoincrement())
  useridfrom        BigInt
  conversationid    BigInt
  subject           String? @db.LongText
  fullmessage       String? @db.LongText
  fullmessageformat Boolean @default(false)
  fullmessagehtml   String? @db.LongText
  smallmessage      String? @db.LongText
  timecreated       BigInt
  fullmessagetrust  Int     @default(0) @db.TinyInt
  customdata        String? @db.LongText

  @@index([conversationid], map: "sandbox_mess_con_ix")
  @@index([conversationid, timecreated], map: "sandbox_mess_contim_ix")
  @@index([useridfrom], map: "sandbox_mess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_application {
  id                BigInt @id @default(autoincrement())
  name              String @default("") @db.VarChar(50)
  display_name      String @default("") @db.VarChar(50)
  xmlrpc_server_url String @default("") @db.VarChar(255)
  sso_land_url      String @default("") @db.VarChar(255)
  sso_jump_url      String @default("") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_host {
  id                 BigInt  @id @default(autoincrement())
  deleted            Boolean @default(false)
  wwwroot            String  @default("") @db.VarChar(255)
  ip_address         String  @default("") @db.VarChar(45)
  name               String  @default("") @db.VarChar(80)
  public_key         String  @db.LongText
  public_key_expires BigInt  @default(0)
  transport          Int     @default(0) @db.TinyInt
  portno             Int     @default(0) @db.MediumInt
  last_connect_time  BigInt  @default(0)
  last_log_id        BigInt  @default(0)
  force_theme        Boolean @default(false)
  theme              String? @db.VarChar(100)
  applicationid      BigInt  @default(1)
  sslverification    Boolean @default(false)

  @@index([applicationid], map: "sandbox_mnethost_app_ix")
  @@index([last_log_id], map: "sandbox_mnethost_las_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_host2service {
  id        BigInt  @id @default(autoincrement())
  hostid    BigInt  @default(0)
  serviceid BigInt  @default(0)
  publish   Boolean @default(false)
  subscribe Boolean @default(false)

  @@unique([hostid, serviceid], map: "sandbox_mnethost_hosser_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_log {
  id         BigInt @id @default(autoincrement())
  hostid     BigInt @default(0)
  remoteid   BigInt @default(0)
  time       BigInt @default(0)
  userid     BigInt @default(0)
  ip         String @default("") @db.VarChar(45)
  course     BigInt @default(0)
  coursename String @default("") @db.VarChar(40)
  module     String @default("") @db.VarChar(20)
  cmid       BigInt @default(0)
  action     String @default("") @db.VarChar(40)
  url        String @default("") @db.VarChar(100)
  info       String @default("") @db.VarChar(255)

  @@index([hostid, userid, course], map: "sandbox_mnetlog_hosusecou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_remote_rpc {
  id           BigInt  @id @default(autoincrement())
  functionname String  @default("") @db.VarChar(40)
  xmlrpcpath   String  @default("") @db.VarChar(80)
  plugintype   String  @default("") @db.VarChar(20)
  pluginname   String  @default("") @db.VarChar(20)
  enabled      Boolean
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_remote_service2rpc {
  id        BigInt @id @default(autoincrement())
  serviceid BigInt @default(0)
  rpcid     BigInt @default(0)

  @@unique([rpcid, serviceid], map: "sandbox_mnetremoserv_rpcse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_rpc {
  id           BigInt   @id @default(autoincrement())
  functionname String   @default("") @db.VarChar(40)
  xmlrpcpath   String   @default("") @db.VarChar(80)
  plugintype   String   @default("") @db.VarChar(20)
  pluginname   String   @default("") @db.VarChar(20)
  enabled      Boolean  @default(false)
  help         String   @db.LongText
  profile      String   @db.LongText
  filename     String   @default("") @db.VarChar(100)
  classname    String?  @db.VarChar(150)
  static       Boolean?

  @@index([enabled, xmlrpcpath], map: "sandbox_mnetrpc_enaxml_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_service {
  id          BigInt  @id @default(autoincrement())
  name        String  @default("") @db.VarChar(40)
  description String  @default("") @db.VarChar(40)
  apiversion  String  @default("") @db.VarChar(10)
  offer       Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_service2rpc {
  id        BigInt @id @default(autoincrement())
  serviceid BigInt @default(0)
  rpcid     BigInt @default(0)

  @@unique([rpcid, serviceid], map: "sandbox_mnetserv_rpcser_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_session {
  id              BigInt @id @default(autoincrement())
  userid          BigInt @default(0)
  username        String @default("") @db.VarChar(100)
  token           String @unique(map: "sandbox_mnetsess_tok_uix") @default("") @db.VarChar(40)
  mnethostid      BigInt @default(0)
  useragent       String @default("") @db.VarChar(40)
  confirm_timeout BigInt @default(0)
  session_id      String @default("") @db.VarChar(40)
  expires         BigInt @default(0)

  @@index([mnethostid], map: "sandbox_mnetsess_mne_ix")
  @@index([userid], map: "sandbox_mnetsess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnet_sso_access_control {
  id           BigInt @id @default(autoincrement())
  username     String @default("") @db.VarChar(100)
  mnet_host_id BigInt @default(0)
  accessctrl   String @default("allow") @db.VarChar(20)

  @@unique([mnet_host_id, username], map: "sandbox_mnetssoaccecont_mn_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnetservice_enrol_courses {
  id            BigInt @id @default(autoincrement())
  hostid        BigInt
  remoteid      BigInt
  categoryid    BigInt
  categoryname  String @default("") @db.VarChar(255)
  sortorder     BigInt @default(0)
  fullname      String @default("") @db.VarChar(254)
  shortname     String @default("") @db.VarChar(100)
  idnumber      String @default("") @db.VarChar(100)
  summary       String @db.LongText
  summaryformat Int?   @default(0) @db.SmallInt
  startdate     BigInt
  roleid        BigInt
  rolename      String @default("") @db.VarChar(255)

  @@unique([hostid, remoteid], map: "sandbox_mnetenrocour_hosre_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_mnetservice_enrol_enrolments {
  id             BigInt @id @default(autoincrement())
  hostid         BigInt
  userid         BigInt
  remotecourseid BigInt
  rolename       String @default("") @db.VarChar(255)
  enroltime      BigInt @default(0)
  enroltype      String @default("") @db.VarChar(20)

  @@index([hostid], map: "sandbox_mnetenroenro_hos_ix")
  @@index([userid], map: "sandbox_mnetenroenro_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_modules {
  id       BigInt  @id @default(autoincrement())
  name     String  @default("") @db.VarChar(20)
  cron     BigInt  @default(0)
  lastcron BigInt  @default(0)
  search   String  @default("") @db.VarChar(255)
  visible  Boolean @default(true)

  @@index([name], map: "sandbox_modu_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_moodlenet_share_progress {
  id          BigInt  @id @default(autoincrement())
  type        Int     @db.TinyInt
  courseid    BigInt
  cmid        BigInt?
  userid      BigInt
  timecreated BigInt
  resourceurl String? @db.VarChar(255)
  status      Int?    @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_my_pages {
  id        BigInt  @id @default(autoincrement())
  userid    BigInt? @default(0)
  name      String  @default("") @db.VarChar(200)
  private   Boolean @default(true)
  sortorder Int     @default(0) @db.MediumInt

  @@index([userid, private], map: "sandbox_mypage_usepri_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_notifications {
  id                BigInt  @id @default(autoincrement())
  useridfrom        BigInt
  useridto          BigInt
  subject           String? @db.LongText
  fullmessage       String? @db.LongText
  fullmessageformat Boolean @default(false)
  fullmessagehtml   String? @db.LongText
  smallmessage      String? @db.LongText
  component         String? @db.VarChar(100)
  eventtype         String? @db.VarChar(100)
  contexturl        String? @db.LongText
  contexturlname    String? @db.LongText
  timeread          BigInt?
  timecreated       BigInt
  customdata        String? @db.LongText

  @@index([timeread], map: "sandbox_noti_tim2_ix")
  @@index([timecreated], map: "sandbox_noti_tim_ix")
  @@index([useridto], map: "sandbox_noti_use2_ix")
  @@index([useridfrom], map: "sandbox_noti_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_oauth2_access_token {
  id           BigInt @id @default(autoincrement())
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt
  issuerid     BigInt @unique(map: "sandbox_oautaccetoke_iss_uix")
  token        String @db.LongText
  expires      BigInt
  scope        String @db.LongText

  @@index([usermodified], map: "sandbox_oautaccetoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_oauth2_endpoint {
  id           BigInt @id @default(autoincrement())
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt
  name         String @default("") @db.VarChar(255)
  url          String @db.LongText
  issuerid     BigInt

  @@index([issuerid], map: "sandbox_oautendp_iss_ix")
  @@index([usermodified], map: "sandbox_oautendp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_oauth2_issuer {
  id                  BigInt  @id @default(autoincrement())
  timecreated         BigInt
  timemodified        BigInt
  usermodified        BigInt
  name                String  @default("") @db.VarChar(255)
  image               String  @db.LongText
  baseurl             String  @db.LongText
  clientid            String  @db.LongText
  clientsecret        String  @db.LongText
  loginscopes         String  @db.LongText
  loginscopesoffline  String  @db.LongText
  loginparams         String  @db.LongText
  loginparamsoffline  String  @db.LongText
  alloweddomains      String  @db.LongText
  scopessupported     String? @db.LongText
  enabled             Int     @default(1) @db.TinyInt
  showonloginpage     Int     @default(1) @db.TinyInt
  basicauth           Int     @default(0) @db.TinyInt
  sortorder           BigInt
  requireconfirmation Int     @default(1) @db.TinyInt
  servicetype         String? @db.VarChar(255)
  loginpagename       String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_oauth2_refresh_token {
  id           BigInt @id @default(autoincrement())
  timecreated  BigInt
  timemodified BigInt
  userid       BigInt
  issuerid     BigInt
  token        String @db.LongText
  scopehash    String @default("") @db.VarChar(40)

  @@unique([userid, issuerid, scopehash], map: "sandbox_oautrefrtoke_useis_uix")
  @@index([issuerid], map: "sandbox_oautrefrtoke_iss_ix")
  @@index([userid], map: "sandbox_oautrefrtoke_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_oauth2_system_account {
  id            BigInt  @id @default(autoincrement())
  timecreated   BigInt
  timemodified  BigInt
  usermodified  BigInt
  issuerid      BigInt  @unique(map: "sandbox_oautsystacco_iss_uix")
  refreshtoken  String  @db.LongText
  grantedscopes String  @db.LongText
  email         String? @db.LongText
  username      String  @db.LongText

  @@index([usermodified], map: "sandbox_oautsystacco_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_oauth2_user_field_mapping {
  id            BigInt @id @default(autoincrement())
  timemodified  BigInt
  timecreated   BigInt
  usermodified  BigInt
  issuerid      BigInt
  externalfield String @default("") @db.VarChar(500)
  internalfield String @default("") @db.VarChar(64)

  @@unique([issuerid, internalfield], map: "sandbox_oautuserfielmapp_i_uix")
  @@index([issuerid], map: "sandbox_oautuserfielmapp_is_ix")
  @@index([usermodified], map: "sandbox_oautuserfielmapp_us_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_page {
  id              BigInt  @id @default(autoincrement())
  course          BigInt  @default(0)
  name            String  @default("") @db.VarChar(255)
  intro           String? @db.LongText
  introformat     Int     @default(0) @db.SmallInt
  content         String? @db.LongText
  contentformat   Int     @default(0) @db.SmallInt
  legacyfiles     Int     @default(0) @db.SmallInt
  legacyfileslast BigInt?
  display         Int     @default(0) @db.SmallInt
  displayoptions  String? @db.LongText
  revision        BigInt  @default(0)
  timemodified    BigInt  @default(0)

  @@index([course], map: "sandbox_page_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_paygw_paypal {
  id         BigInt @id @default(autoincrement())
  paymentid  BigInt @unique(map: "sandbox_paygpayp_pay_uix")
  pp_orderid String @default("The ID of the order in PayPal") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_payment_accounts {
  id           BigInt  @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  idnumber     String? @db.VarChar(100)
  contextid    BigInt
  enabled      Boolean @default(false)
  archived     Boolean @default(false)
  timecreated  BigInt?
  timemodified BigInt?

  @@index([contextid], map: "sandbox_paymacco_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_payment_gateways {
  id           BigInt  @id @default(autoincrement())
  accountid    BigInt
  gateway      String  @default("") @db.VarChar(100)
  enabled      Boolean @default(true)
  config       String? @db.LongText
  timecreated  BigInt
  timemodified BigInt

  @@index([accountid], map: "sandbox_paymgate_acc_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_payments {
  id           BigInt @id @default(autoincrement())
  component    String @default("") @db.VarChar(100)
  paymentarea  String @default("") @db.VarChar(50)
  itemid       BigInt
  userid       BigInt
  amount       String @default("") @db.VarChar(20)
  currency     String @default("") @db.VarChar(3)
  accountid    BigInt
  gateway      String @default("") @db.VarChar(100)
  timecreated  BigInt @default(0)
  timemodified BigInt @default(0)

  @@index([accountid], map: "sandbox_paym_acc_ix")
  @@index([component, paymentarea, itemid], map: "sandbox_paym_compayite_ix")
  @@index([gateway], map: "sandbox_paym_gat_ix")
  @@index([userid], map: "sandbox_paym_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_portfolio_instance {
  id      BigInt  @id @default(autoincrement())
  plugin  String  @default("") @db.VarChar(50)
  name    String  @default("") @db.VarChar(255)
  visible Boolean @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_portfolio_instance_config {
  id       BigInt  @id @default(autoincrement())
  instance BigInt
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@index([instance], map: "sandbox_portinstconf_ins_ix")
  @@index([name], map: "sandbox_portinstconf_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_portfolio_instance_user {
  id       BigInt  @id @default(autoincrement())
  instance BigInt
  userid   BigInt
  name     String  @default("") @db.VarChar(255)
  value    String? @db.LongText

  @@index([instance], map: "sandbox_portinstuser_ins_ix")
  @@index([userid], map: "sandbox_portinstuser_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_portfolio_log {
  id               BigInt  @id @default(autoincrement())
  userid           BigInt
  time             BigInt
  portfolio        BigInt
  caller_class     String  @default("") @db.VarChar(150)
  caller_file      String  @default("") @db.VarChar(255)
  caller_component String? @db.VarChar(255)
  caller_sha1      String  @default("") @db.VarChar(255)
  tempdataid       BigInt  @default(0)
  returnurl        String  @default("") @db.VarChar(255)
  continueurl      String  @default("") @db.VarChar(255)

  @@index([portfolio], map: "sandbox_portlog_por_ix")
  @@index([tempdataid], map: "sandbox_portlog_tem_ix")
  @@index([userid], map: "sandbox_portlog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_portfolio_mahara_queue {
  id         BigInt @id @default(autoincrement())
  transferid BigInt
  token      String @default("") @db.VarChar(50)

  @@index([token], map: "sandbox_portmahaqueu_tok_ix")
  @@index([transferid], map: "sandbox_portmahaqueu_tra_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_portfolio_tempdata {
  id         BigInt  @id @default(autoincrement())
  data       String? @db.LongText
  expirytime BigInt
  userid     BigInt
  instance   BigInt? @default(0)
  queued     Boolean @default(false)

  @@index([instance], map: "sandbox_porttemp_ins_ix")
  @@index([userid], map: "sandbox_porttemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_post {
  id             BigInt  @id @default(autoincrement())
  module         String  @default("") @db.VarChar(20)
  userid         BigInt  @default(0)
  courseid       BigInt  @default(0)
  groupid        BigInt  @default(0)
  moduleid       BigInt  @default(0)
  coursemoduleid BigInt  @default(0)
  subject        String  @default("") @db.VarChar(128)
  summary        String? @db.LongText
  content        String? @db.LongText
  uniquehash     String  @default("") @db.VarChar(255)
  rating         BigInt  @default(0)
  format         BigInt  @default(0)
  summaryformat  Int     @default(0) @db.TinyInt
  attachment     String? @db.VarChar(100)
  publishstate   String  @default("draft") @db.VarChar(20)
  lastmodified   BigInt  @default(0)
  created        BigInt  @default(0)
  usermodified   BigInt?

  @@unique([id, userid], map: "sandbox_post_iduse_uix")
  @@index([coursemoduleid], map: "sandbox_post_cou2_ix")
  @@index([courseid], map: "sandbox_post_cou_ix")
  @@index([lastmodified], map: "sandbox_post_las_ix")
  @@index([module], map: "sandbox_post_mod_ix")
  @@index([subject], map: "sandbox_post_sub_ix")
  @@index([usermodified], map: "sandbox_post_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_profiling {
  id                 BigInt @id @default(autoincrement())
  runid              String @unique(map: "sandbox_prof_run_uix") @default("") @db.VarChar(32)
  url                String @default("") @db.VarChar(255)
  data               String @db.LongText
  totalexecutiontime BigInt
  totalcputime       BigInt
  totalcalls         BigInt
  totalmemory        BigInt
  runreference       Int    @default(0) @db.TinyInt
  runcomment         String @default("") @db.VarChar(255)
  timecreated        BigInt

  @@index([timecreated, runreference], map: "sandbox_prof_timrun_ix")
  @@index([url, runreference], map: "sandbox_prof_urlrun_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_ddimageortext {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "sandbox_qtypddim_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_ddimageortext_drags {
  id         BigInt @id @default(autoincrement())
  questionid BigInt @default(0)
  no         BigInt @default(0)
  draggroup  BigInt @default(0)
  infinite   Int    @default(0) @db.SmallInt
  label      String @db.LongText

  @@index([questionid], map: "sandbox_qtypddimdrag_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_ddimageortext_drops {
  id         BigInt @id @default(autoincrement())
  questionid BigInt @default(0)
  no         BigInt @default(0)
  xleft      BigInt @default(0)
  ytop       BigInt @default(0)
  choice     BigInt @default(0)
  label      String @db.LongText

  @@index([questionid], map: "sandbox_qtypddimdrop_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_ddmarker {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
  showmisplaced                  Int    @default(0) @db.SmallInt

  @@index([questionid], map: "sandbox_qtypddma_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_ddmarker_drags {
  id         BigInt @id @default(autoincrement())
  questionid BigInt @default(0)
  no         BigInt @default(0)
  label      String @db.LongText
  infinite   Int    @default(0) @db.SmallInt
  noofdrags  BigInt @default(1)

  @@index([questionid], map: "sandbox_qtypddmadrag_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_ddmarker_drops {
  id         BigInt  @id @default(autoincrement())
  questionid BigInt  @default(0)
  no         BigInt  @default(0)
  shape      String? @db.VarChar(255)
  coords     String  @db.LongText
  choice     BigInt  @default(0)

  @@index([questionid], map: "sandbox_qtypddmadrop_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_essay_options {
  id                     BigInt  @id @default(autoincrement())
  questionid             BigInt  @unique(map: "sandbox_qtypessaopti_que_uix")
  responseformat         String  @default("editor") @db.VarChar(16)
  responserequired       Int     @default(1) @db.TinyInt
  responsefieldlines     Int     @default(15) @db.SmallInt
  minwordlimit           BigInt?
  maxwordlimit           BigInt?
  attachments            Int     @default(0) @db.SmallInt
  attachmentsrequired    Int     @default(0) @db.SmallInt
  graderinfo             String? @db.LongText
  graderinfoformat       Int     @default(0) @db.SmallInt
  responsetemplate       String? @db.LongText
  responsetemplateformat Int     @default(0) @db.SmallInt
  maxbytes               BigInt  @default(0)
  filetypeslist          String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_match_options {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @unique(map: "sandbox_qtypmatcopti_que_uix") @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_match_subquestions {
  id                 BigInt @id @default(autoincrement())
  questionid         BigInt @default(0)
  questiontext       String @db.LongText
  questiontextformat Int    @default(0) @db.TinyInt
  answertext         String @default("") @db.VarChar(255)

  @@index([questionid], map: "sandbox_qtypmatcsubq_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_multichoice_options {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @unique(map: "sandbox_qtypmultopti_que_uix") @default(0)
  layout                         Int    @default(0) @db.SmallInt
  single                         Int    @default(0) @db.SmallInt
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  answernumbering                String @default("abc") @db.VarChar(10)
  shownumcorrect                 Int    @default(0) @db.TinyInt
  showstandardinstruction        Int    @default(1) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_ordering_options {
  id                             BigInt  @id @default(autoincrement())
  questionid                     BigInt  @unique(map: "sandbox_qtypordeopti_que_uix") @default(0)
  layouttype                     Int     @default(0) @db.TinyInt
  selecttype                     Int     @default(0) @db.TinyInt
  selectcount                    Int     @default(2) @db.SmallInt
  gradingtype                    Int     @default(0) @db.TinyInt
  showgrading                    Int     @default(0) @db.TinyInt
  numberingstyle                 String  @default("none") @db.VarChar(10)
  correctfeedback                String? @db.LongText
  correctfeedbackformat          Int     @default(0) @db.TinyInt
  incorrectfeedback              String? @db.LongText
  incorrectfeedbackformat        Int     @default(0) @db.TinyInt
  partiallycorrectfeedback       String? @db.LongText
  partiallycorrectfeedbackformat Int     @default(0) @db.TinyInt
  shownumcorrect                 Int     @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_randomsamatch_options {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @unique(map: "sandbox_qtyprandopti_que_uix") @default(0)
  choose                         BigInt @default(4)
  subcats                        Int    @default(1) @db.TinyInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_qtype_shortanswer_options {
  id         BigInt @id @default(autoincrement())
  questionid BigInt @unique(map: "sandbox_qtypshoropti_que_uix") @default(0)
  usecase    Int    @default(0) @db.TinyInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question {
  id                    BigInt  @id @default(autoincrement())
  parent                BigInt  @default(0)
  name                  String  @default("") @db.VarChar(255)
  questiontext          String  @db.LongText
  questiontextformat    Int     @default(0) @db.TinyInt
  generalfeedback       String  @db.LongText
  generalfeedbackformat Int     @default(0) @db.TinyInt
  defaultmark           Decimal @default(1.0000000) @db.Decimal(12, 7)
  penalty               Decimal @default(0.3333333) @db.Decimal(12, 7)
  qtype                 String  @default("") @db.VarChar(20)
  length                BigInt  @default(1)
  stamp                 String  @default("") @db.VarChar(255)
  timecreated           BigInt  @default(0)
  timemodified          BigInt  @default(0)
  createdby             BigInt?
  modifiedby            BigInt?

  @@index([createdby], map: "sandbox_ques_cre_ix")
  @@index([modifiedby], map: "sandbox_ques_mod_ix")
  @@index([parent], map: "sandbox_ques_par_ix")
  @@index([qtype], map: "sandbox_ques_qty_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_answers {
  id             BigInt  @id @default(autoincrement())
  question       BigInt  @default(0)
  answer         String  @db.LongText
  answerformat   Int     @default(0) @db.TinyInt
  fraction       Decimal @default(0.0000000) @db.Decimal(12, 7)
  feedback       String  @db.LongText
  feedbackformat Int     @default(0) @db.TinyInt

  @@index([question], map: "sandbox_quesansw_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_attempt_step_data {
  id            BigInt  @id @default(autoincrement())
  attemptstepid BigInt
  name          String  @default("") @db.VarChar(32)
  value         String? @db.LongText

  @@index([attemptstepid], map: "sandbox_quesattestepdata_at_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_attempt_steps {
  id                BigInt   @id @default(autoincrement())
  questionattemptid BigInt
  sequencenumber    BigInt
  state             String   @default("") @db.VarChar(13)
  fraction          Decimal? @db.Decimal(12, 7)
  timecreated       BigInt
  userid            BigInt?

  @@unique([questionattemptid, sequencenumber], map: "sandbox_quesattestep_quese_uix")
  @@index([questionattemptid], map: "sandbox_quesattestep_que_ix")
  @@index([userid], map: "sandbox_quesattestep_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_attempts {
  id              BigInt  @id @default(autoincrement())
  questionusageid BigInt
  slot            BigInt
  behaviour       String  @default("") @db.VarChar(32)
  questionid      BigInt
  variant         BigInt  @default(1)
  maxmark         Decimal @db.Decimal(12, 7)
  minfraction     Decimal @db.Decimal(12, 7)
  maxfraction     Decimal @default(1.0000000) @db.Decimal(12, 7)
  flagged         Boolean @default(false)
  questionsummary String? @db.LongText
  rightanswer     String? @db.LongText
  responsesummary String? @db.LongText
  timemodified    BigInt

  @@unique([questionusageid, slot], map: "sandbox_quesatte_queslo_uix")
  @@index([behaviour], map: "sandbox_quesatte_beh_ix")
  @@index([questionusageid], map: "sandbox_quesatte_que2_ix")
  @@index([questionid], map: "sandbox_quesatte_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_bank_entries {
  id                 BigInt  @id @default(autoincrement())
  questioncategoryid BigInt  @default(0)
  idnumber           String? @db.VarChar(100)
  ownerid            BigInt?

  @@unique([questioncategoryid, idnumber], map: "sandbox_quesbankentr_queid_uix")
  @@index([ownerid], map: "sandbox_quesbankentr_own_ix")
  @@index([questioncategoryid], map: "sandbox_quesbankentr_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_calculated {
  id                  BigInt @id @default(autoincrement())
  question            BigInt @default(0)
  answer              BigInt @default(0)
  tolerance           String @default("0.0") @db.VarChar(20)
  tolerancetype       BigInt @default(1)
  correctanswerlength BigInt @default(2)
  correctanswerformat BigInt @default(2)

  @@index([answer], map: "sandbox_quescalc_ans_ix")
  @@index([question], map: "sandbox_quescalc_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_calculated_options {
  id                             BigInt  @id @default(autoincrement())
  question                       BigInt  @default(0)
  synchronize                    Int     @default(0) @db.TinyInt
  single                         Int     @default(0) @db.SmallInt
  shuffleanswers                 Int     @default(0) @db.SmallInt
  correctfeedback                String? @db.LongText
  correctfeedbackformat          Int     @default(0) @db.TinyInt
  partiallycorrectfeedback       String? @db.LongText
  partiallycorrectfeedbackformat Int     @default(0) @db.TinyInt
  incorrectfeedback              String? @db.LongText
  incorrectfeedbackformat        Int     @default(0) @db.TinyInt
  answernumbering                String  @default("abc") @db.VarChar(10)
  shownumcorrect                 Int     @default(0) @db.TinyInt

  @@index([question], map: "sandbox_quescalcopti_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_categories {
  id         BigInt  @id @default(autoincrement())
  name       String  @default("") @db.VarChar(255)
  contextid  BigInt  @default(0)
  info       String  @db.LongText
  infoformat Int     @default(0) @db.TinyInt
  stamp      String  @default("") @db.VarChar(255)
  parent     BigInt  @default(0)
  sortorder  BigInt  @default(999)
  idnumber   String? @db.VarChar(100)

  @@unique([contextid, idnumber], map: "sandbox_quescate_conidn_uix")
  @@unique([contextid, stamp], map: "sandbox_quescate_consta_uix")
  @@index([contextid], map: "sandbox_quescate_con_ix")
  @@index([parent], map: "sandbox_quescate_par_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_dataset_definitions {
  id        BigInt @id @default(autoincrement())
  category  BigInt @default(0)
  name      String @default("") @db.VarChar(255)
  type      BigInt @default(0)
  options   String @default("") @db.VarChar(255)
  itemcount BigInt @default(0)

  @@index([category], map: "sandbox_quesdatadefi_cat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_dataset_items {
  id         BigInt @id @default(autoincrement())
  definition BigInt @default(0)
  itemnumber BigInt @default(0)
  value      String @default("") @db.VarChar(255)

  @@index([definition], map: "sandbox_quesdataitem_def_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_datasets {
  id                BigInt @id @default(autoincrement())
  question          BigInt @default(0)
  datasetdefinition BigInt @default(0)

  @@index([datasetdefinition], map: "sandbox_quesdata_dat_ix")
  @@index([question], map: "sandbox_quesdata_que_ix")
  @@index([question, datasetdefinition], map: "sandbox_quesdata_quedat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_ddwtos {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "sandbox_quesddwt_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_gapselect {
  id                             BigInt @id @default(autoincrement())
  questionid                     BigInt @default(0)
  shuffleanswers                 Int    @default(1) @db.SmallInt
  correctfeedback                String @db.LongText
  correctfeedbackformat          Int    @default(0) @db.TinyInt
  partiallycorrectfeedback       String @db.LongText
  partiallycorrectfeedbackformat Int    @default(0) @db.TinyInt
  incorrectfeedback              String @db.LongText
  incorrectfeedbackformat        Int    @default(0) @db.TinyInt
  shownumcorrect                 Int    @default(0) @db.TinyInt

  @@index([questionid], map: "sandbox_quesgaps_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_hints {
  id             BigInt   @id @default(autoincrement())
  questionid     BigInt
  hint           String   @db.LongText
  hintformat     Int      @default(0) @db.SmallInt
  shownumcorrect Boolean?
  clearwrong     Boolean?
  options        String?  @db.VarChar(255)

  @@index([questionid], map: "sandbox_queshint_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_multianswer {
  id       BigInt @id @default(autoincrement())
  question BigInt @default(0)
  sequence String @db.LongText

  @@index([question], map: "sandbox_quesmult_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_numerical {
  id        BigInt @id @default(autoincrement())
  question  BigInt @default(0)
  answer    BigInt @default(0)
  tolerance String @default("0.0") @db.VarChar(255)

  @@index([answer], map: "sandbox_quesnume_ans_ix")
  @@index([question], map: "sandbox_quesnume_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_numerical_options {
  id              BigInt  @id @default(autoincrement())
  question        BigInt  @default(0)
  showunits       Int     @default(0) @db.SmallInt
  unitsleft       Int     @default(0) @db.SmallInt
  unitgradingtype Int     @default(0) @db.SmallInt
  unitpenalty     Decimal @default(0.1000000) @db.Decimal(12, 7)

  @@index([question], map: "sandbox_quesnumeopti_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_numerical_units {
  id         BigInt  @id @default(autoincrement())
  question   BigInt  @default(0)
  multiplier Decimal @default(1.0000000000000000000) @db.Decimal(38, 19)
  unit       String  @default("") @db.VarChar(50)

  @@unique([question, unit], map: "sandbox_quesnumeunit_queun_uix")
  @@index([question], map: "sandbox_quesnumeunit_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_references {
  id                  BigInt  @id @default(autoincrement())
  usingcontextid      BigInt  @default(0)
  component           String? @db.VarChar(100)
  questionarea        String? @db.VarChar(50)
  itemid              BigInt?
  questionbankentryid BigInt  @default(0)
  version             BigInt?

  @@unique([usingcontextid, component, questionarea, itemid], map: "sandbox_quesrefe_usicomque_uix")
  @@index([questionbankentryid], map: "sandbox_quesrefe_que_ix")
  @@index([usingcontextid], map: "sandbox_quesrefe_usi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_response_analysis {
  id           BigInt  @id @default(autoincrement())
  hashcode     String  @default("") @db.VarChar(40)
  whichtries   String  @default("") @db.VarChar(255)
  timemodified BigInt
  questionid   BigInt
  variant      BigInt?
  subqid       String  @default("") @db.VarChar(100)
  aid          String? @db.VarChar(100)
  response     String? @db.LongText
  credit       Decimal @db.Decimal(15, 5)

  @@index([questionid], map: "sandbox_quesrespanal_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_response_count {
  id         BigInt @id @default(autoincrement())
  analysisid BigInt
  try        BigInt
  rcount     BigInt

  @@index([analysisid], map: "sandbox_quesrespcoun_ana_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_set_references {
  id                 BigInt  @id @default(autoincrement())
  usingcontextid     BigInt  @default(0)
  component          String? @db.VarChar(100)
  questionarea       String? @db.VarChar(50)
  itemid             BigInt?
  questionscontextid BigInt  @default(0)
  filtercondition    String? @db.LongText

  @@unique([usingcontextid, component, questionarea, itemid], map: "sandbox_quessetrefe_usicom_uix")
  @@index([questionscontextid], map: "sandbox_quessetrefe_que_ix")
  @@index([usingcontextid], map: "sandbox_quessetrefe_usi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_statistics {
  id                       BigInt   @id @default(autoincrement())
  hashcode                 String   @default("") @db.VarChar(40)
  timemodified             BigInt
  questionid               BigInt
  slot                     BigInt?
  subquestion              Int      @db.SmallInt
  variant                  BigInt?
  s                        BigInt   @default(0)
  effectiveweight          Decimal? @db.Decimal(15, 5)
  negcovar                 Int      @default(0) @db.TinyInt
  discriminationindex      Decimal? @db.Decimal(15, 5)
  discriminativeefficiency Decimal? @db.Decimal(15, 5)
  sd                       Decimal? @db.Decimal(15, 10)
  facility                 Decimal? @db.Decimal(15, 10)
  subquestions             String?  @db.LongText
  maxmark                  Decimal? @db.Decimal(12, 7)
  positions                String?  @db.LongText
  randomguessscore         Decimal? @db.Decimal(12, 7)

  @@index([questionid], map: "sandbox_quesstat_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_truefalse {
  id                      BigInt @id @default(autoincrement())
  question                BigInt @default(0)
  trueanswer              BigInt @default(0)
  falseanswer             BigInt @default(0)
  showstandardinstruction Int    @default(1) @db.TinyInt

  @@index([question], map: "sandbox_questrue_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_usages {
  id                 BigInt @id @default(autoincrement())
  contextid          BigInt
  component          String @default("") @db.VarChar(255)
  preferredbehaviour String @default("") @db.VarChar(32)

  @@index([contextid], map: "sandbox_quesusag_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_question_versions {
  id                  BigInt @id @default(autoincrement())
  questionbankentryid BigInt @default(0)
  version             BigInt @default(1)
  questionid          BigInt @default(0)
  status              String @default("ready") @db.VarChar(10)

  @@index([questionid], map: "sandbox_quesvers_que2_ix")
  @@index([questionbankentryid], map: "sandbox_quesvers_que_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz {
  id                          BigInt   @id @default(autoincrement())
  course                      BigInt   @default(0)
  name                        String   @default("") @db.VarChar(255)
  intro                       String   @db.LongText
  introformat                 Int      @default(0) @db.SmallInt
  timeopen                    BigInt   @default(0)
  timeclose                   BigInt   @default(0)
  timelimit                   BigInt   @default(0)
  overduehandling             String   @default("autoabandon") @db.VarChar(16)
  graceperiod                 BigInt   @default(0)
  preferredbehaviour          String   @default("") @db.VarChar(32)
  canredoquestions            Int      @default(0) @db.SmallInt
  attempts                    Int      @default(0) @db.MediumInt
  attemptonlast               Int      @default(0) @db.SmallInt
  grademethod                 Int      @default(1) @db.SmallInt
  decimalpoints               Int      @default(2) @db.SmallInt
  questiondecimalpoints       Int      @default(-1) @db.SmallInt
  reviewattempt               Int      @default(0) @db.MediumInt
  reviewcorrectness           Int      @default(0) @db.MediumInt
  reviewmaxmarks              Int      @default(0) @db.MediumInt
  reviewmarks                 Int      @default(0) @db.MediumInt
  reviewspecificfeedback      Int      @default(0) @db.MediumInt
  reviewgeneralfeedback       Int      @default(0) @db.MediumInt
  reviewrightanswer           Int      @default(0) @db.MediumInt
  reviewoverallfeedback       Int      @default(0) @db.MediumInt
  questionsperpage            BigInt   @default(0)
  navmethod                   String   @default("free") @db.VarChar(16)
  shuffleanswers              Int      @default(0) @db.SmallInt
  sumgrades                   Decimal  @default(0.00000) @db.Decimal(10, 5)
  grade                       Decimal  @default(0.00000) @db.Decimal(10, 5)
  timecreated                 BigInt   @default(0)
  timemodified                BigInt   @default(0)
  password                    String   @default("") @db.VarChar(255)
  subnet                      String   @default("") @db.VarChar(255)
  browsersecurity             String   @default("") @db.VarChar(32)
  delay1                      BigInt   @default(0)
  delay2                      BigInt   @default(0)
  showuserpicture             Int      @default(0) @db.SmallInt
  showblocks                  Int      @default(0) @db.SmallInt
  completionattemptsexhausted Boolean? @default(false)
  completionminattempts       BigInt   @default(0)
  allowofflineattempts        Boolean? @default(false)

  @@index([course], map: "sandbox_quiz_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_attempts {
  id                         BigInt   @id @default(autoincrement())
  quiz                       BigInt   @default(0)
  userid                     BigInt   @default(0)
  attempt                    Int      @default(0) @db.MediumInt
  uniqueid                   BigInt   @unique(map: "sandbox_quizatte_uni_uix") @default(0)
  layout                     String   @db.LongText
  currentpage                BigInt   @default(0)
  preview                    Int      @default(0) @db.SmallInt
  state                      String   @default("inprogress") @db.VarChar(16)
  timestart                  BigInt   @default(0)
  timefinish                 BigInt   @default(0)
  timemodified               BigInt   @default(0)
  timemodifiedoffline        BigInt   @default(0)
  timecheckstate             BigInt?  @default(0)
  sumgrades                  Decimal? @db.Decimal(10, 5)
  gradednotificationsenttime BigInt?

  @@unique([quiz, userid, attempt], map: "sandbox_quizatte_quiuseatt_uix")
  @@index([quiz], map: "sandbox_quizatte_qui_ix")
  @@index([state, timecheckstate], map: "sandbox_quizatte_statim_ix")
  @@index([userid], map: "sandbox_quizatte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_feedback {
  id                 BigInt  @id @default(autoincrement())
  quizid             BigInt  @default(0)
  feedbacktext       String  @db.LongText
  feedbacktextformat Int     @default(0) @db.TinyInt
  mingrade           Decimal @default(0.00000) @db.Decimal(10, 5)
  maxgrade           Decimal @default(0.00000) @db.Decimal(10, 5)

  @@index([quizid], map: "sandbox_quizfeed_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_grade_items {
  id        BigInt @id @default(autoincrement())
  quizid    BigInt
  sortorder BigInt
  name      String @default("") @db.VarChar(255)

  @@unique([quizid, sortorder], map: "sandbox_quizgraditem_quiso_uix")
  @@index([quizid], map: "sandbox_quizgraditem_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_grades {
  id           BigInt  @id @default(autoincrement())
  quiz         BigInt  @default(0)
  userid       BigInt  @default(0)
  grade        Decimal @default(0.00000) @db.Decimal(10, 5)
  timemodified BigInt  @default(0)

  @@index([quiz], map: "sandbox_quizgrad_qui_ix")
  @@index([userid], map: "sandbox_quizgrad_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_overrides {
  id        BigInt  @id @default(autoincrement())
  quiz      BigInt  @default(0)
  groupid   BigInt?
  userid    BigInt?
  timeopen  BigInt?
  timeclose BigInt?
  timelimit BigInt?
  attempts  Int?    @db.MediumInt
  password  String? @db.VarChar(255)

  @@index([groupid], map: "sandbox_quizover_gro_ix")
  @@index([quiz], map: "sandbox_quizover_qui_ix")
  @@index([userid], map: "sandbox_quizover_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_overview_regrades {
  id              BigInt   @id @default(autoincrement())
  questionusageid BigInt
  slot            BigInt
  newfraction     Decimal? @db.Decimal(12, 7)
  oldfraction     Decimal? @db.Decimal(12, 7)
  regraded        Int      @db.SmallInt
  timemodified    BigInt

  @@index([questionusageid, slot], map: "sandbox_quizoverregr_queslo_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_reports {
  id           BigInt  @id @default(autoincrement())
  name         String? @unique(map: "sandbox_quizrepo_nam_uix") @db.VarChar(255)
  displayorder BigInt
  capability   String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_sections {
  id               BigInt  @id @default(autoincrement())
  quizid           BigInt
  firstslot        BigInt
  heading          String? @db.VarChar(1333)
  shufflequestions Int     @default(0) @db.SmallInt

  @@unique([quizid, firstslot], map: "sandbox_quizsect_quifir_uix")
  @@index([quizid], map: "sandbox_quizsect_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_slots {
  id              BigInt  @id @default(autoincrement())
  slot            BigInt
  quizid          BigInt  @default(0)
  page            BigInt
  displaynumber   String? @db.VarChar(16)
  requireprevious Int     @default(0) @db.SmallInt
  maxmark         Decimal @default(0.0000000) @db.Decimal(12, 7)
  quizgradeitemid BigInt?

  @@unique([quizid, slot], map: "sandbox_quizslot_quislo_uix")
  @@index([quizgradeitemid], map: "sandbox_quizslot_qui2_ix")
  @@index([quizid], map: "sandbox_quizslot_qui_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quiz_statistics {
  id                   BigInt   @id @default(autoincrement())
  hashcode             String   @default("") @db.VarChar(40)
  whichattempts        Int      @db.SmallInt
  timemodified         BigInt
  firstattemptscount   BigInt
  highestattemptscount BigInt
  lastattemptscount    BigInt
  allattemptscount     BigInt
  firstattemptsavg     Decimal? @db.Decimal(15, 5)
  highestattemptsavg   Decimal? @db.Decimal(15, 5)
  lastattemptsavg      Decimal? @db.Decimal(15, 5)
  allattemptsavg       Decimal? @db.Decimal(15, 5)
  median               Decimal? @db.Decimal(15, 5)
  standarddeviation    Decimal? @db.Decimal(15, 5)
  skewness             Decimal? @db.Decimal(15, 10)
  kurtosis             Decimal? @db.Decimal(15, 5)
  cic                  Decimal? @db.Decimal(15, 10)
  errorratio           Decimal? @db.Decimal(15, 10)
  standarderror        Decimal? @db.Decimal(15, 10)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quizaccess_seb_quizsettings {
  id                     BigInt   @id @default(autoincrement())
  quizid                 BigInt   @unique(map: "sandbox_quizsebquiz_qui_uix")
  cmid                   BigInt   @unique(map: "sandbox_quizsebquiz_cmi_uix")
  templateid             BigInt
  requiresafeexambrowser Boolean
  showsebtaskbar         Boolean?
  showwificontrol        Boolean?
  showreloadbutton       Boolean?
  showtime               Boolean?
  showkeyboardlayout     Boolean?
  allowuserquitseb       Boolean?
  quitpassword           String?  @db.LongText
  linkquitseb            String?  @db.LongText
  userconfirmquit        Boolean?
  enableaudiocontrol     Boolean?
  muteonstartup          Boolean?
  allowspellchecking     Boolean?
  allowreloadinexam      Boolean?
  activateurlfiltering   Boolean?
  filterembeddedcontent  Boolean?
  expressionsallowed     String?  @db.LongText
  regexallowed           String?  @db.LongText
  expressionsblocked     String?  @db.LongText
  regexblocked           String?  @db.LongText
  allowedbrowserexamkeys String?  @db.LongText
  showsebdownloadlink    Boolean?
  usermodified           BigInt   @default(0)
  timecreated            BigInt   @default(0)
  timemodified           BigInt   @default(0)

  @@index([templateid], map: "sandbox_quizsebquiz_tem_ix")
  @@index([usermodified], map: "sandbox_quizsebquiz_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_quizaccess_seb_template {
  id           BigInt  @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  description  String  @db.LongText
  content      String  @db.LongText
  enabled      Boolean
  sortorder    BigInt
  usermodified BigInt  @default(0)
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([usermodified], map: "sandbox_quizsebtemp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_rating {
  id           BigInt @id @default(autoincrement())
  contextid    BigInt
  component    String @default("") @db.VarChar(100)
  ratingarea   String @default("") @db.VarChar(50)
  itemid       BigInt
  scaleid      BigInt
  rating       BigInt
  userid       BigInt
  timecreated  BigInt
  timemodified BigInt

  @@index([component, ratingarea, contextid, itemid], map: "sandbox_rati_comratconite_ix")
  @@index([contextid], map: "sandbox_rati_con_ix")
  @@index([scaleid], map: "sandbox_rati_sca_ix")
  @@index([userid], map: "sandbox_rati_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_registration_hubs {
  id           BigInt  @id @default(autoincrement())
  token        String  @default("") @db.VarChar(255)
  hubname      String  @default("") @db.VarChar(255)
  huburl       String  @default("") @db.VarChar(255)
  confirmed    Boolean @default(false)
  secret       String? @db.VarChar(255)
  timemodified BigInt  @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_reportbuilder_audience {
  id           BigInt  @id @default(autoincrement())
  reportid     BigInt
  heading      String? @db.VarChar(255)
  classname    String  @default("") @db.VarChar(255)
  configdata   String  @db.LongText
  usercreated  BigInt  @default(0)
  usermodified BigInt  @default(0)
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([reportid], map: "sandbox_repoaudi_rep_ix")
  @@index([usermodified], map: "sandbox_repoaudi_use2_ix")
  @@index([usercreated], map: "sandbox_repoaudi_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_reportbuilder_column {
  id               BigInt  @id @default(autoincrement())
  reportid         BigInt  @default(0)
  uniqueidentifier String  @default("") @db.VarChar(255)
  aggregation      String? @db.VarChar(32)
  heading          String? @db.VarChar(255)
  columnorder      BigInt
  sortenabled      Boolean @default(false)
  sortdirection    Boolean
  sortorder        BigInt?
  usercreated      BigInt  @default(0)
  usermodified     BigInt  @default(0)
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)

  @@index([reportid], map: "sandbox_repocolu_rep_ix")
  @@index([usermodified], map: "sandbox_repocolu_use2_ix")
  @@index([usercreated], map: "sandbox_repocolu_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_reportbuilder_filter {
  id               BigInt  @id @default(autoincrement())
  reportid         BigInt  @default(0)
  uniqueidentifier String  @default("") @db.VarChar(255)
  heading          String? @db.VarChar(255)
  iscondition      Boolean @default(false)
  filterorder      BigInt
  usercreated      BigInt  @default(0)
  usermodified     BigInt  @default(0)
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)

  @@unique([reportid, uniqueidentifier, iscondition], map: "sandbox_repofilt_repuniisc_uix")
  @@index([reportid], map: "sandbox_repofilt_rep_ix")
  @@index([usermodified], map: "sandbox_repofilt_use2_ix")
  @@index([usercreated], map: "sandbox_repofilt_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_reportbuilder_report {
  id            BigInt  @id @default(autoincrement())
  name          String? @db.VarChar(255)
  source        String  @default("") @db.VarChar(255)
  type          Int     @default(0) @db.TinyInt
  uniquerows    Boolean @default(false)
  conditiondata String? @db.LongText
  settingsdata  String? @db.LongText
  contextid     BigInt
  component     String  @default("") @db.VarChar(100)
  area          String  @default("") @db.VarChar(100)
  itemid        BigInt  @default(0)
  usercreated   BigInt  @default(0)
  usermodified  BigInt  @default(0)
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)

  @@index([contextid], map: "sandbox_reporepo_con_ix")
  @@index([usermodified], map: "sandbox_reporepo_use2_ix")
  @@index([usercreated], map: "sandbox_reporepo_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_reportbuilder_schedule {
  id            BigInt  @id @default(autoincrement())
  reportid      BigInt  @default(0)
  name          String  @default("") @db.VarChar(255)
  enabled       Boolean @default(true)
  audiences     String  @db.LongText
  format        String  @default("") @db.VarChar(255)
  subject       String  @default("") @db.VarChar(255)
  message       String  @db.LongText
  messageformat BigInt
  userviewas    BigInt  @default(0)
  timescheduled BigInt  @default(0)
  recurrence    BigInt  @default(0)
  reportempty   BigInt  @default(0)
  timelastsent  BigInt  @default(0)
  timenextsend  BigInt  @default(0)
  usercreated   BigInt  @default(0)
  usermodified  BigInt  @default(0)
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)

  @@index([reportid], map: "sandbox_reposche_rep_ix")
  @@index([usercreated], map: "sandbox_reposche_use2_ix")
  @@index([usermodified], map: "sandbox_reposche_use3_ix")
  @@index([userviewas], map: "sandbox_reposche_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_repository {
  id        BigInt   @id @default(autoincrement())
  type      String   @default("") @db.VarChar(255)
  visible   Boolean? @default(true)
  sortorder BigInt   @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_repository_instance_config {
  id         BigInt  @id @default(autoincrement())
  instanceid BigInt
  name       String  @default("") @db.VarChar(255)
  value      String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_repository_instances {
  id           BigInt  @id @default(autoincrement())
  name         String  @default("") @db.VarChar(255)
  typeid       BigInt
  userid       BigInt  @default(0)
  contextid    BigInt
  username     String? @db.VarChar(255)
  password     String? @db.VarChar(255)
  timecreated  BigInt?
  timemodified BigInt?
  readonly     Boolean @default(false)

  @@index([contextid], map: "sandbox_repoinst_con_ix")
  @@index([userid], map: "sandbox_repoinst_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_repository_onedrive_access {
  id           BigInt @id @default(autoincrement())
  timemodified BigInt
  timecreated  BigInt
  usermodified BigInt
  permissionid String @default("") @db.VarChar(255)
  itemid       String @default("") @db.VarChar(255)

  @@index([usermodified], map: "sandbox_repoonedacce_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_resource {
  id              BigInt  @id @default(autoincrement())
  course          BigInt  @default(0)
  name            String  @default("") @db.VarChar(255)
  intro           String? @db.LongText
  introformat     Int     @default(0) @db.SmallInt
  tobemigrated    Int     @default(0) @db.SmallInt
  legacyfiles     Int     @default(0) @db.SmallInt
  legacyfileslast BigInt?
  display         Int     @default(0) @db.SmallInt
  displayoptions  String? @db.LongText
  filterfiles     Int     @default(0) @db.SmallInt
  revision        BigInt  @default(0)
  timemodified    BigInt  @default(0)

  @@index([course], map: "sandbox_reso_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_resource_old {
  id           BigInt  @id @default(autoincrement())
  course       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  type         String  @default("") @db.VarChar(30)
  reference    String  @default("") @db.VarChar(255)
  intro        String? @db.LongText
  introformat  Int     @default(0) @db.SmallInt
  alltext      String  @db.LongText
  popup        String  @db.LongText
  options      String  @default("") @db.VarChar(255)
  timemodified BigInt  @default(0)
  oldid        BigInt  @unique(map: "sandbox_resoold_old_uix")
  cmid         BigInt?
  newmodule    String? @db.VarChar(50)
  newid        BigInt?
  migrated     BigInt  @default(0)

  @@index([cmid], map: "sandbox_resoold_cmi_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role {
  id          BigInt @id @default(autoincrement())
  name        String @default("") @db.VarChar(255)
  shortname   String @unique(map: "sandbox_role_sho_uix") @default("") @db.VarChar(100)
  description String @db.LongText
  sortorder   BigInt @unique(map: "sandbox_role_sor_uix") @default(0)
  archetype   String @default("") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role_allow_assign {
  id          BigInt @id @default(autoincrement())
  roleid      BigInt @default(0)
  allowassign BigInt @default(0)

  @@unique([roleid, allowassign], map: "sandbox_rolealloassi_rolal_uix")
  @@index([allowassign], map: "sandbox_rolealloassi_all_ix")
  @@index([roleid], map: "sandbox_rolealloassi_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role_allow_override {
  id            BigInt @id @default(autoincrement())
  roleid        BigInt @default(0)
  allowoverride BigInt @default(0)

  @@unique([roleid, allowoverride], map: "sandbox_rolealloover_rolal_uix")
  @@index([allowoverride], map: "sandbox_rolealloover_all_ix")
  @@index([roleid], map: "sandbox_rolealloover_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role_allow_switch {
  id          BigInt @id @default(autoincrement())
  roleid      BigInt
  allowswitch BigInt

  @@unique([roleid, allowswitch], map: "sandbox_rolealloswit_rolal_uix")
  @@index([allowswitch], map: "sandbox_rolealloswit_all_ix")
  @@index([roleid], map: "sandbox_rolealloswit_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role_allow_view {
  id        BigInt @id @default(autoincrement())
  roleid    BigInt
  allowview BigInt

  @@unique([roleid, allowview], map: "sandbox_rolealloview_rolal_uix")
  @@index([allowview], map: "sandbox_rolealloview_all_ix")
  @@index([roleid], map: "sandbox_rolealloview_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role_assignments {
  id           BigInt @id @default(autoincrement())
  roleid       BigInt @default(0)
  contextid    BigInt @default(0)
  userid       BigInt @default(0)
  timemodified BigInt @default(0)
  modifierid   BigInt @default(0)
  component    String @default("") @db.VarChar(100)
  itemid       BigInt @default(0)
  sortorder    BigInt @default(0)

  @@index([component, itemid, userid], map: "sandbox_roleassi_comiteuse_ix")
  @@index([contextid], map: "sandbox_roleassi_con_ix")
  @@index([roleid], map: "sandbox_roleassi_rol_ix")
  @@index([roleid, contextid], map: "sandbox_roleassi_rolcon_ix")
  @@index([sortorder], map: "sandbox_roleassi_sor_ix")
  @@index([userid], map: "sandbox_roleassi_use_ix")
  @@index([userid, contextid, roleid], map: "sandbox_roleassi_useconrol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role_capabilities {
  id           BigInt @id @default(autoincrement())
  contextid    BigInt @default(0)
  roleid       BigInt @default(0)
  capability   String @default("") @db.VarChar(255)
  permission   BigInt @default(0)
  timemodified BigInt @default(0)
  modifierid   BigInt @default(0)

  @@unique([roleid, contextid, capability], map: "sandbox_rolecapa_rolconcap_uix")
  @@index([capability], map: "sandbox_rolecapa_cap_ix")
  @@index([contextid], map: "sandbox_rolecapa_con_ix")
  @@index([modifierid], map: "sandbox_rolecapa_mod_ix")
  @@index([roleid], map: "sandbox_rolecapa_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role_context_levels {
  id           BigInt @id @default(autoincrement())
  roleid       BigInt
  contextlevel BigInt

  @@unique([contextlevel, roleid], map: "sandbox_rolecontleve_conro_uix")
  @@index([roleid], map: "sandbox_rolecontleve_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_role_names {
  id        BigInt @id @default(autoincrement())
  roleid    BigInt @default(0)
  contextid BigInt @default(0)
  name      String @default("") @db.VarChar(255)

  @@unique([roleid, contextid], map: "sandbox_rolename_rolcon_uix")
  @@index([contextid], map: "sandbox_rolename_con_ix")
  @@index([roleid], map: "sandbox_rolename_rol_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scale {
  id                BigInt @id @default(autoincrement())
  courseid          BigInt @default(0)
  userid            BigInt @default(0)
  name              String @default("") @db.VarChar(255)
  scale             String @db.LongText
  description       String @db.LongText
  descriptionformat Int    @default(0) @db.TinyInt
  timemodified      BigInt @default(0)

  @@index([courseid], map: "sandbox_scal_cou_ix")
  @@index([userid], map: "sandbox_scal_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scale_history {
  id           BigInt  @id @default(autoincrement())
  action       BigInt  @default(0)
  oldid        BigInt
  source       String? @db.VarChar(255)
  timemodified BigInt?
  loggeduser   BigInt?
  courseid     BigInt  @default(0)
  userid       BigInt  @default(0)
  name         String  @default("") @db.VarChar(255)
  scale        String  @db.LongText
  description  String  @db.LongText

  @@index([action], map: "sandbox_scalhist_act_ix")
  @@index([courseid], map: "sandbox_scalhist_cou_ix")
  @@index([loggeduser], map: "sandbox_scalhist_log_ix")
  @@index([oldid], map: "sandbox_scalhist_old_ix")
  @@index([timemodified], map: "sandbox_scalhist_tim_ix")
  @@index([userid], map: "sandbox_scalhist_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm {
  id                       BigInt   @id @default(autoincrement())
  course                   BigInt   @default(0)
  name                     String   @default("") @db.VarChar(255)
  scormtype                String   @default("local") @db.VarChar(50)
  reference                String   @default("") @db.VarChar(255)
  intro                    String   @db.LongText
  introformat              Int      @default(0) @db.SmallInt
  version                  String   @default("") @db.VarChar(9)
  maxgrade                 Float    @default(0)
  grademethod              Int      @default(0) @db.TinyInt
  whatgrade                BigInt   @default(0)
  maxattempt               BigInt   @default(1)
  forcecompleted           Boolean  @default(false)
  forcenewattempt          Boolean  @default(false)
  lastattemptlock          Boolean  @default(false)
  masteryoverride          Boolean  @default(true)
  displayattemptstatus     Boolean  @default(true)
  displaycoursestructure   Boolean  @default(false)
  updatefreq               Boolean  @default(false)
  sha1hash                 String?  @db.VarChar(40)
  md5hash                  String   @default("") @db.VarChar(32)
  revision                 BigInt   @default(0)
  launch                   BigInt   @default(0)
  skipview                 Boolean  @default(true)
  hidebrowse               Boolean  @default(false)
  hidetoc                  Boolean  @default(false)
  nav                      Boolean  @default(true)
  navpositionleft          BigInt?  @default(-100)
  navpositiontop           BigInt?  @default(-100)
  auto                     Boolean  @default(false)
  popup                    Boolean  @default(false)
  options                  String   @default("") @db.VarChar(255)
  width                    BigInt   @default(100)
  height                   BigInt   @default(600)
  timeopen                 BigInt   @default(0)
  timeclose                BigInt   @default(0)
  timemodified             BigInt   @default(0)
  completionstatusrequired Boolean?
  completionscorerequired  BigInt?
  completionstatusallscos  Boolean?
  autocommit               Boolean  @default(false)

  @@index([course], map: "sandbox_scor_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_aicc_session {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt  @default(0)
  scormid      BigInt  @default(0)
  hacpsession  String  @default("") @db.VarChar(255)
  scoid        BigInt? @default(0)
  scormmode    String? @db.VarChar(50)
  scormstatus  String? @db.VarChar(255)
  attempt      BigInt?
  lessonstatus String? @db.VarChar(255)
  sessiontime  String? @db.VarChar(255)
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@index([scormid], map: "sandbox_scoraiccsess_sco_ix")
  @@index([userid], map: "sandbox_scoraiccsess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_attempt {
  id      BigInt @id @default(autoincrement())
  userid  BigInt
  scormid BigInt
  attempt BigInt @default(1)

  @@index([scormid], map: "sandbox_scoratte_sco_ix")
  @@index([userid], map: "sandbox_scoratte_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_element {
  id      BigInt @id @default(autoincrement())
  element String @unique(map: "sandbox_scorelem_ele_uix") @default("") @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_scoes {
  id           BigInt @id @default(autoincrement())
  scorm        BigInt @default(0)
  manifest     String @default("") @db.VarChar(255)
  organization String @default("") @db.VarChar(255)
  parent       String @default("") @db.VarChar(255)
  identifier   String @default("") @db.VarChar(255)
  launch       String @db.LongText
  scormtype    String @default("") @db.VarChar(5)
  title        String @default("") @db.VarChar(255)
  sortorder    BigInt @default(0)

  @@index([scorm], map: "sandbox_scorscoe_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_scoes_data {
  id    BigInt @id @default(autoincrement())
  scoid BigInt @default(0)
  name  String @default("") @db.VarChar(255)
  value String @db.LongText

  @@index([scoid], map: "sandbox_scorscoedata_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_scoes_value {
  id           BigInt @id @default(autoincrement())
  scoid        BigInt
  attemptid    BigInt
  elementid    BigInt
  value        String @db.LongText
  timemodified BigInt @default(0)

  @@index([attemptid], map: "sandbox_scorscoevalu_att_ix")
  @@index([elementid], map: "sandbox_scorscoevalu_ele_ix")
  @@index([scoid], map: "sandbox_scorscoevalu_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_seq_mapinfo {
  id                     BigInt  @id @default(autoincrement())
  scoid                  BigInt  @default(0)
  objectiveid            BigInt  @default(0)
  targetobjectiveid      BigInt  @default(0)
  readsatisfiedstatus    Boolean @default(true)
  readnormalizedmeasure  Boolean @default(true)
  writesatisfiedstatus   Boolean @default(false)
  writenormalizedmeasure Boolean @default(false)

  @@unique([scoid, id, objectiveid], map: "sandbox_scorseqmapi_scoido_uix")
  @@index([objectiveid], map: "sandbox_scorseqmapi_obj_ix")
  @@index([scoid], map: "sandbox_scorseqmapi_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_seq_objective {
  id                   BigInt  @id @default(autoincrement())
  scoid                BigInt  @default(0)
  primaryobj           Boolean @default(false)
  objectiveid          String  @default("") @db.VarChar(255)
  satisfiedbymeasure   Boolean @default(true)
  minnormalizedmeasure Float   @default(0.0000) @db.Float

  @@unique([scoid, id], map: "sandbox_scorseqobje_scoid_uix")
  @@index([scoid], map: "sandbox_scorseqobje_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_seq_rolluprule {
  id                   BigInt @id @default(autoincrement())
  scoid                BigInt @default(0)
  childactivityset     String @default("") @db.VarChar(15)
  minimumcount         BigInt @default(0)
  minimumpercent       Float  @default(0.0000) @db.Float
  conditioncombination String @default("all") @db.VarChar(3)
  action               String @default("") @db.VarChar(15)

  @@unique([scoid, id], map: "sandbox_scorseqroll_scoid_uix")
  @@index([scoid], map: "sandbox_scorseqroll_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_seq_rolluprulecond {
  id           BigInt @id @default(autoincrement())
  scoid        BigInt @default(0)
  rollupruleid BigInt @default(0)
  operator     String @default("noOp") @db.VarChar(5)
  cond         String @default("") @db.VarChar(25)

  @@unique([scoid, rollupruleid, id], map: "sandbox_scorseqroll_scorol_uix")
  @@index([rollupruleid], map: "sandbox_scorseqroll_rol_ix")
  @@index([scoid], map: "sandbox_scorseqroll_sco2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_seq_rulecond {
  id                 BigInt @id @default(autoincrement())
  scoid              BigInt @default(0)
  ruleconditionsid   BigInt @default(0)
  refrencedobjective String @default("") @db.VarChar(255)
  measurethreshold   Float  @default(0.0000) @db.Float
  operator           String @default("noOp") @db.VarChar(5)
  cond               String @default("always") @db.VarChar(30)

  @@unique([id, scoid, ruleconditionsid], map: "sandbox_scorseqrule_idscor_uix")
  @@index([ruleconditionsid], map: "sandbox_scorseqrule_rul_ix")
  @@index([scoid], map: "sandbox_scorseqrule_sco2_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_scorm_seq_ruleconds {
  id                   BigInt @id @default(autoincrement())
  scoid                BigInt @default(0)
  conditioncombination String @default("all") @db.VarChar(3)
  ruletype             Int    @default(0) @db.TinyInt
  action               String @default("") @db.VarChar(25)

  @@unique([scoid, id], map: "sandbox_scorseqrule_scoid_uix")
  @@index([scoid], map: "sandbox_scorseqrule_sco_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_search_index_requests {
  id            BigInt @id @default(autoincrement())
  contextid     BigInt
  searcharea    String @default("") @db.VarChar(255)
  timerequested BigInt
  partialarea   String @default("") @db.VarChar(255)
  partialtime   BigInt
  indexpriority BigInt

  @@index([contextid], map: "sandbox_searinderequ_con_ix")
  @@index([indexpriority, timerequested], map: "sandbox_searinderequ_indtim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_search_simpledb_index {
  id           BigInt  @id @default(autoincrement())
  docid        String  @unique(map: "sandbox_searsimpinde_doc_uix") @default("") @db.VarChar(255)
  itemid       BigInt
  title        String? @db.LongText
  content      String? @db.LongText
  contextid    BigInt
  areaid       String  @default("") @db.VarChar(255)
  type         Boolean
  courseid     BigInt
  owneruserid  BigInt?
  modified     BigInt
  userid       BigInt?
  description1 String? @db.LongText
  description2 String? @db.LongText

  @@index([areaid], map: "sandbox_searsimpinde_are_ix")
  @@index([contextid], map: "sandbox_searsimpinde_con_ix")
  @@index([courseid], map: "sandbox_searsimpinde_cou_ix")
  @@index([owneruserid, contextid], map: "sandbox_searsimpinde_owncon_ix")
  @@fulltext([title, content, description1, description2], map: "sandbox_search_simpledb_index_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_sessions {
  id           BigInt  @id @default(autoincrement())
  state        BigInt  @default(0)
  sid          String  @unique(map: "sandbox_sess_sid_uix") @default("") @db.VarChar(128)
  userid       BigInt
  sessdata     String? @db.LongText
  timecreated  BigInt
  timemodified BigInt
  firstip      String? @db.VarChar(45)
  lastip       String? @db.VarChar(45)

  @@index([state], map: "sandbox_sess_sta_ix")
  @@index([timemodified], map: "sandbox_sess_tim2_ix")
  @@index([timecreated], map: "sandbox_sess_tim_ix")
  @@index([userid], map: "sandbox_sess_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_sms_gateways {
  id      BigInt @id @default(autoincrement())
  name    String @default("") @db.VarChar(255)
  gateway String @default("") @db.VarChar(255)
  enabled Int    @default(1) @db.TinyInt
  config  String @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_sms_messages {
  id              BigInt  @id @default(autoincrement())
  recipientnumber String  @default("") @db.VarChar(30)
  content         String? @db.LongText
  component       String  @default("") @db.VarChar(100)
  messagetype     String  @default("") @db.VarChar(100)
  recipientuserid BigInt?
  issensitive     Int     @default(0) @db.TinyInt
  gatewayid       BigInt?
  status          String? @db.VarChar(100)
  timecreated     BigInt

  @@index([gatewayid], map: "sandbox_smsmess_gat_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_stats_daily {
  id       BigInt @id @default(autoincrement())
  courseid BigInt @default(0)
  timeend  BigInt @default(0)
  roleid   BigInt @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    BigInt @default(0)
  stat2    BigInt @default(0)

  @@index([courseid], map: "sandbox_statdail_cou_ix")
  @@index([roleid], map: "sandbox_statdail_rol_ix")
  @@index([timeend], map: "sandbox_statdail_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_stats_monthly {
  id       BigInt @id @default(autoincrement())
  courseid BigInt @default(0)
  timeend  BigInt @default(0)
  roleid   BigInt @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    BigInt @default(0)
  stat2    BigInt @default(0)

  @@index([courseid], map: "sandbox_statmont_cou_ix")
  @@index([roleid], map: "sandbox_statmont_rol_ix")
  @@index([timeend], map: "sandbox_statmont_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_stats_user_daily {
  id          BigInt @id @default(autoincrement())
  courseid    BigInt @default(0)
  userid      BigInt @default(0)
  roleid      BigInt @default(0)
  timeend     BigInt @default(0)
  statsreads  BigInt @default(0)
  statswrites BigInt @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "sandbox_statuserdail_cou_ix")
  @@index([roleid], map: "sandbox_statuserdail_rol_ix")
  @@index([timeend], map: "sandbox_statuserdail_tim_ix")
  @@index([userid], map: "sandbox_statuserdail_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_stats_user_monthly {
  id          BigInt @id @default(autoincrement())
  courseid    BigInt @default(0)
  userid      BigInt @default(0)
  roleid      BigInt @default(0)
  timeend     BigInt @default(0)
  statsreads  BigInt @default(0)
  statswrites BigInt @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "sandbox_statusermont_cou_ix")
  @@index([roleid], map: "sandbox_statusermont_rol_ix")
  @@index([timeend], map: "sandbox_statusermont_tim_ix")
  @@index([userid], map: "sandbox_statusermont_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_stats_user_weekly {
  id          BigInt @id @default(autoincrement())
  courseid    BigInt @default(0)
  userid      BigInt @default(0)
  roleid      BigInt @default(0)
  timeend     BigInt @default(0)
  statsreads  BigInt @default(0)
  statswrites BigInt @default(0)
  stattype    String @default("") @db.VarChar(30)

  @@index([courseid], map: "sandbox_statuserweek_cou_ix")
  @@index([roleid], map: "sandbox_statuserweek_rol_ix")
  @@index([timeend], map: "sandbox_statuserweek_tim_ix")
  @@index([userid], map: "sandbox_statuserweek_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_stats_weekly {
  id       BigInt @id @default(autoincrement())
  courseid BigInt @default(0)
  timeend  BigInt @default(0)
  roleid   BigInt @default(0)
  stattype String @default("activity") @db.VarChar(20)
  stat1    BigInt @default(0)
  stat2    BigInt @default(0)

  @@index([courseid], map: "sandbox_statweek_cou_ix")
  @@index([roleid], map: "sandbox_statweek_rol_ix")
  @@index([timeend], map: "sandbox_statweek_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_stored_progress {
  id               BigInt   @id @default(autoincrement())
  idnumber         String   @default("") @db.VarChar(255)
  timestart        BigInt?
  lastupdate       BigInt?
  percentcompleted Decimal? @default(0.00) @db.Decimal(5, 2)
  message          String?  @db.VarChar(255)
  haserrored       Boolean  @default(false)

  @@index([idnumber], map: "sandbox_storprog_idn_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_subsection {
  id           BigInt @id @default(autoincrement())
  course       BigInt @default(0)
  name         String @default("") @db.VarChar(255)
  timemodified BigInt @default(0)

  @@index([course], map: "sandbox_subs_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_survey {
  id               BigInt  @id @default(autoincrement())
  course           BigInt  @default(0)
  template         BigInt  @default(0)
  days             Int     @default(0) @db.MediumInt
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)
  name             String  @default("") @db.VarChar(255)
  intro            String  @db.LongText
  introformat      Int     @default(0) @db.SmallInt
  questions        String  @default("") @db.VarChar(255)
  completionsubmit Boolean @default(false)

  @@index([course], map: "sandbox_surv_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_survey_analysis {
  id     BigInt @id @default(autoincrement())
  survey BigInt @default(0)
  userid BigInt @default(0)
  notes  String @db.LongText

  @@index([survey], map: "sandbox_survanal_sur_ix")
  @@index([userid], map: "sandbox_survanal_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_survey_answers {
  id       BigInt @id @default(autoincrement())
  userid   BigInt @default(0)
  survey   BigInt @default(0)
  question BigInt @default(0)
  time     BigInt @default(0)
  answer1  String @db.LongText
  answer2  String @db.LongText

  @@index([question], map: "sandbox_survansw_que_ix")
  @@index([survey], map: "sandbox_survansw_sur_ix")
  @@index([userid], map: "sandbox_survansw_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_survey_questions {
  id        BigInt  @id @default(autoincrement())
  text      String  @default("") @db.VarChar(255)
  shorttext String  @default("") @db.VarChar(30)
  multi     String  @default("") @db.VarChar(100)
  intro     String  @default("") @db.VarChar(50)
  type      Int     @default(0) @db.SmallInt
  options   String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tag {
  id                BigInt  @id @default(autoincrement())
  userid            BigInt
  tagcollid         BigInt
  name              String  @default("") @db.VarChar(255)
  rawname           String  @default("") @db.VarChar(255)
  isstandard        Boolean @default(false)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  flag              Int?    @default(0) @db.SmallInt
  timemodified      BigInt?

  @@unique([tagcollid, name], map: "sandbox_tag_tagnam_uix")
  @@index([tagcollid], map: "sandbox_tag_tag_ix")
  @@index([tagcollid, isstandard], map: "sandbox_tag_tagiss_ix")
  @@index([userid], map: "sandbox_tag_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tag_area {
  id               BigInt  @id @default(autoincrement())
  component        String  @default("") @db.VarChar(100)
  itemtype         String  @default("") @db.VarChar(100)
  enabled          Boolean @default(true)
  tagcollid        BigInt
  callback         String? @db.VarChar(100)
  callbackfile     String? @db.VarChar(100)
  showstandard     Boolean @default(false)
  multiplecontexts Boolean @default(false)

  @@unique([component, itemtype], map: "sandbox_tagarea_comite_uix")
  @@index([tagcollid], map: "sandbox_tagarea_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tag_coll {
  id         BigInt  @id @default(autoincrement())
  name       String? @db.VarChar(255)
  isdefault  Int     @default(0) @db.TinyInt
  component  String? @db.VarChar(100)
  sortorder  Int     @default(0) @db.MediumInt
  searchable Int     @default(1) @db.TinyInt
  customurl  String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tag_correlation {
  id             BigInt @id @default(autoincrement())
  tagid          BigInt
  correlatedtags String @db.LongText

  @@index([tagid], map: "sandbox_tagcorr_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tag_instance {
  id           BigInt  @id @default(autoincrement())
  tagid        BigInt
  component    String  @default("") @db.VarChar(100)
  itemtype     String  @default("") @db.VarChar(100)
  itemid       BigInt
  contextid    BigInt?
  tiuserid     BigInt  @default(0)
  ordering     BigInt?
  timecreated  BigInt  @default(0)
  timemodified BigInt  @default(0)

  @@unique([component, itemtype, itemid, contextid, tiuserid, tagid], map: "sandbox_taginst_comiteitec_uix")
  @@index([contextid], map: "sandbox_taginst_con_ix")
  @@index([itemtype, component, tagid, contextid], map: "sandbox_taginst_itecomtagco_ix")
  @@index([tagid], map: "sandbox_taginst_tag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_task_adhoc {
  id                BigInt  @id @default(autoincrement())
  component         String  @default("") @db.VarChar(255)
  classname         String  @default("") @db.VarChar(255)
  nextruntime       BigInt
  faildelay         BigInt?
  customdata        String? @db.LongText
  userid            BigInt?
  timecreated       BigInt  @default(0)
  timestarted       BigInt?
  hostname          String? @db.VarChar(255)
  pid               BigInt?
  attemptsavailable Int?    @db.TinyInt
  firststartingtime BigInt?

  @@index([nextruntime], map: "sandbox_taskadho_nex_ix")
  @@index([timestarted], map: "sandbox_taskadho_tim_ix")
  @@index([userid], map: "sandbox_taskadho_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_task_log {
  id        BigInt  @id @default(autoincrement())
  type      Int     @db.SmallInt
  component String  @default("") @db.VarChar(255)
  classname String  @default("") @db.VarChar(255)
  userid    BigInt
  timestart Decimal @db.Decimal(20, 10)
  timeend   Decimal @db.Decimal(20, 10)
  dbreads   BigInt
  dbwrites  BigInt
  result    Int     @db.TinyInt
  output    String  @db.LongText
  hostname  String? @db.VarChar(255)
  pid       BigInt?

  @@index([classname], map: "sandbox_tasklog_cla_ix")
  @@index([timestart], map: "sandbox_tasklog_tim_ix")
  @@index([userid], map: "sandbox_tasklog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_task_scheduled {
  id          BigInt  @id @default(autoincrement())
  component   String  @default("") @db.VarChar(255)
  classname   String  @unique(map: "sandbox_tasksche_cla_uix") @default("") @db.VarChar(255)
  lastruntime BigInt?
  nextruntime BigInt?
  minute      String  @default("") @db.VarChar(200)
  hour        String  @default("") @db.VarChar(70)
  day         String  @default("") @db.VarChar(90)
  month       String  @default("") @db.VarChar(30)
  dayofweek   String  @default("") @db.VarChar(25)
  faildelay   BigInt?
  customised  Int     @default(0) @db.TinyInt
  disabled    Boolean @default(false)
  timestarted BigInt?
  hostname    String? @db.VarChar(255)
  pid         BigInt?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tiny_autosave {
  id           BigInt  @id @default(autoincrement())
  elementid    String  @default("") @db.VarChar(255)
  contextid    BigInt
  pagehash     String  @default("") @db.VarChar(64)
  userid       BigInt
  drafttext    String  @db.LongText
  draftid      BigInt?
  pageinstance String  @default("") @db.VarChar(64)
  timemodified BigInt  @default(0)

  @@unique([elementid, contextid, userid, pagehash], map: "sandbox_tinyauto_eleconuse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_areas {
  id          BigInt  @id @default(autoincrement())
  type        Int     @default(0) @db.TinyInt
  contextid   BigInt?
  component   String? @db.VarChar(100)
  tablename   String? @db.VarChar(40)
  fieldorarea String? @db.VarChar(50)
  itemid      BigInt?
  filename    String? @db.VarChar(1333)
  reftable    String? @db.VarChar(40)
  refid       BigInt?
  cmid        BigInt?
  courseid    BigInt?
  categoryid  BigInt?

  @@index([categoryid], map: "sandbox_toolbricarea_cat_ix")
  @@index([cmid], map: "sandbox_toolbricarea_cmi_ix")
  @@index([contextid], map: "sandbox_toolbricarea_con_ix")
  @@index([courseid], map: "sandbox_toolbricarea_cou_ix")
  @@index([courseid, cmid], map: "sandbox_toolbricarea_coucmi_ix")
  @@index([reftable, refid, type], map: "sandbox_toolbricarea_refref_ix")
  @@index([type, contextid, component, fieldorarea, itemid], map: "sandbox_toolbricarea_typcon_ix")
  @@index([type, tablename, itemid, fieldorarea], map: "sandbox_toolbricarea_typtab_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_cache_acts {
  id               BigInt   @id @default(autoincrement())
  courseid         BigInt
  status           Boolean?
  component        String?  @db.VarChar(64)
  totalactivities  BigInt?
  failedactivities BigInt?
  passedactivities BigInt?
  errorcount       BigInt?

  @@index([courseid], map: "sandbox_toolbriccachacts_co_ix")
  @@index([status], map: "sandbox_toolbriccachacts_st_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_cache_check {
  id         BigInt   @id @default(autoincrement())
  courseid   BigInt
  status     Boolean?
  checkid    BigInt?
  checkcount BigInt?
  errorcount BigInt?

  @@index([courseid], map: "sandbox_toolbriccachchec_co_ix")
  @@index([errorcount], map: "sandbox_toolbriccachchec_er_ix")
  @@index([status], map: "sandbox_toolbriccachchec_st_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_checks {
  id         BigInt  @id @default(autoincrement())
  checktype  String? @db.VarChar(64)
  shortname  String? @db.VarChar(64)
  checkgroup BigInt? @default(0)
  status     Int     @db.SmallInt
  severity   Int     @default(0) @db.TinyInt

  @@index([checkgroup], map: "sandbox_toolbricchec_che2_ix")
  @@index([checktype], map: "sandbox_toolbricchec_che_ix")
  @@index([status], map: "sandbox_toolbricchec_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_content {
  id          BigInt  @id @default(autoincrement())
  areaid      BigInt
  contenthash String  @default("") @db.VarChar(40)
  iscurrent   Boolean @default(false)
  status      Int     @default(0) @db.TinyInt
  timecreated BigInt
  timechecked BigInt?

  @@index([areaid], map: "sandbox_toolbriccont_are_ix")
  @@index([iscurrent, areaid], map: "sandbox_toolbriccont_iscare_ix")
  @@index([status], map: "sandbox_toolbriccont_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_errors {
  id         BigInt  @id @default(autoincrement())
  resultid   BigInt
  linenumber BigInt  @default(0)
  errordata  String? @db.LongText
  htmlcode   String? @db.LongText

  @@index([resultid], map: "sandbox_toolbricerro_res_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_process {
  id             BigInt  @id @default(autoincrement())
  courseid       BigInt
  item           String? @db.VarChar(64)
  contextid      BigInt?
  innercontextid BigInt?
  timecreated    BigInt?
  timecompleted  BigInt?

  @@index([timecompleted], map: "sandbox_toolbricproc_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_results {
  id         BigInt  @id @default(autoincrement())
  contentid  BigInt?
  checkid    BigInt
  errorcount BigInt  @default(0)

  @@index([checkid], map: "sandbox_toolbricresu_che_ix")
  @@index([contentid], map: "sandbox_toolbricresu_con_ix")
  @@index([contentid, checkid], map: "sandbox_toolbricresu_conche_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_schedule {
  id           BigInt  @id @default(autoincrement())
  contextlevel BigInt  @default(50)
  instanceid   BigInt
  contextid    BigInt?
  status       Int     @default(0) @db.TinyInt
  timeanalyzed BigInt? @default(0)
  timemodified BigInt? @default(0)

  @@unique([contextlevel, instanceid], map: "sandbox_toolbricsche_conin_uix")
  @@index([status], map: "sandbox_toolbricsche_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_brickfield_summary {
  id                BigInt   @id @default(autoincrement())
  courseid          BigInt
  status            Boolean?
  activities        BigInt?
  activitiespassed  BigInt?
  activitiesfailed  BigInt?
  errorschecktype1  BigInt?
  errorschecktype2  BigInt?
  errorschecktype3  BigInt?
  errorschecktype4  BigInt?
  errorschecktype5  BigInt?
  errorschecktype6  BigInt?
  errorschecktype7  BigInt?
  failedchecktype1  BigInt?
  failedchecktype2  BigInt?
  failedchecktype3  BigInt?
  failedchecktype4  BigInt?
  failedchecktype5  BigInt?
  failedchecktype6  BigInt?
  failedchecktype7  BigInt?
  percentchecktype1 BigInt?
  percentchecktype2 BigInt?
  percentchecktype3 BigInt?
  percentchecktype4 BigInt?
  percentchecktype5 BigInt?
  percentchecktype6 BigInt?
  percentchecktype7 BigInt?

  @@index([courseid], map: "sandbox_toolbricsumm_cou_ix")
  @@index([status], map: "sandbox_toolbricsumm_sta_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_cohortroles {
  id           BigInt  @id @default(autoincrement())
  cohortid     BigInt
  roleid       BigInt
  userid       BigInt
  timecreated  BigInt
  timemodified BigInt
  usermodified BigInt?

  @@unique([cohortid, roleid, userid], map: "sandbox_toolcoho_cohroluse_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_customlang {
  id             BigInt  @id @default(autoincrement())
  lang           String  @default("") @db.VarChar(20)
  componentid    BigInt
  stringid       String  @default("") @db.VarChar(255)
  original       String  @db.LongText
  master         String? @db.LongText
  local          String? @db.LongText
  timemodified   BigInt
  timecustomized BigInt?
  outdated       Int?    @default(0) @db.SmallInt
  modified       Int?    @default(0) @db.SmallInt

  @@unique([lang, componentid, stringid], map: "sandbox_toolcust_lancomstr_uix")
  @@index([componentid], map: "sandbox_toolcust_com_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_customlang_components {
  id      BigInt  @id @default(autoincrement())
  name    String  @default("") @db.VarChar(255)
  version String? @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_category {
  id                BigInt   @id @default(autoincrement())
  name              String   @default("") @db.VarChar(100)
  description       String?  @db.LongText
  descriptionformat Boolean?
  usermodified      BigInt
  timecreated       BigInt
  timemodified      BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_contextlist {
  id           BigInt @id @default(autoincrement())
  component    String @default("") @db.VarChar(255)
  timecreated  BigInt @default(0)
  timemodified BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_ctxexpired {
  id             BigInt  @id @default(autoincrement())
  contextid      BigInt  @unique(map: "sandbox_tooldatactxe_con_uix")
  unexpiredroles String? @db.LongText
  expiredroles   String? @db.LongText
  defaultexpired Boolean
  status         Int     @default(0) @db.TinyInt
  usermodified   BigInt
  timecreated    BigInt
  timemodified   BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_ctxinstance {
  id           BigInt  @id @default(autoincrement())
  contextid    BigInt  @unique(map: "sandbox_tooldatactxi_con_uix")
  purposeid    BigInt?
  categoryid   BigInt?
  usermodified BigInt
  timecreated  BigInt
  timemodified BigInt

  @@index([categoryid], map: "sandbox_tooldatactxi_cat_ix")
  @@index([purposeid], map: "sandbox_tooldatactxi_pur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_ctxlevel {
  id           BigInt  @id @default(autoincrement())
  contextlevel Int     @unique(map: "sandbox_tooldatactxl_con_uix") @db.SmallInt
  purposeid    BigInt?
  categoryid   BigInt?
  usermodified BigInt
  timecreated  BigInt
  timemodified BigInt

  @@index([categoryid], map: "sandbox_tooldatactxl_cat_ix")
  @@index([purposeid], map: "sandbox_tooldatactxl_pur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_ctxlst_ctx {
  id            BigInt @id @default(autoincrement())
  contextid     BigInt
  contextlistid BigInt
  status        Int    @default(0) @db.TinyInt
  timecreated   BigInt @default(0)
  timemodified  BigInt @default(0)

  @@index([contextlistid], map: "sandbox_tooldatactxlctx_con_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_purpose {
  id                   BigInt   @id @default(autoincrement())
  name                 String   @default("") @db.VarChar(100)
  description          String?  @db.LongText
  descriptionformat    Boolean?
  lawfulbases          String   @db.LongText
  sensitivedatareasons String?  @db.LongText
  retentionperiod      String   @default("") @db.VarChar(255)
  protected            Boolean?
  usermodified         BigInt
  timecreated          BigInt
  timemodified         BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_purposerole {
  id                   BigInt   @id @default(autoincrement())
  purposeid            BigInt
  roleid               BigInt
  lawfulbases          String?  @db.LongText
  sensitivedatareasons String?  @db.LongText
  retentionperiod      String   @default("") @db.VarChar(255)
  protected            Boolean?
  usermodified         BigInt
  timecreated          BigInt
  timemodified         BigInt

  @@unique([purposeid, roleid], map: "sandbox_tooldatapurp_purro_uix")
  @@index([purposeid], map: "sandbox_tooldatapurp_pur_ix")
  @@index([roleid], map: "sandbox_tooldatapurp_rol_ix")
  @@index([usermodified], map: "sandbox_tooldatapurp_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_request {
  id               BigInt  @id @default(autoincrement())
  type             BigInt  @default(0)
  comments         String? @db.LongText
  commentsformat   Int     @default(0) @db.TinyInt
  userid           BigInt  @default(0)
  requestedby      BigInt  @default(0)
  status           Int     @default(0) @db.TinyInt
  dpo              BigInt? @default(0)
  dpocomment       String? @db.LongText
  dpocommentformat Int     @default(0) @db.TinyInt
  systemapproved   Int     @default(0) @db.SmallInt
  usermodified     BigInt  @default(0)
  timecreated      BigInt  @default(0)
  timemodified     BigInt  @default(0)
  creationmethod   BigInt  @default(0)

  @@index([dpo], map: "sandbox_tooldatarequ_dpo_ix")
  @@index([requestedby], map: "sandbox_tooldatarequ_req_ix")
  @@index([usermodified], map: "sandbox_tooldatarequ_use2_ix")
  @@index([userid], map: "sandbox_tooldatarequ_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_dataprivacy_rqst_ctxlst {
  id            BigInt @id @default(autoincrement())
  requestid     BigInt
  contextlistid BigInt

  @@unique([requestid, contextlistid], map: "sandbox_tooldatarqstctxl_r_uix")
  @@index([contextlistid], map: "sandbox_tooldatarqstctxl_co_ix")
  @@index([requestid], map: "sandbox_tooldatarqstctxl_re_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_mfa {
  id            BigInt  @id @default(autoincrement())
  userid        BigInt
  factor        String  @default("") @db.VarChar(100)
  secret        String? @db.VarChar(1333)
  label         String? @db.VarChar(1333)
  timecreated   BigInt?
  createdfromip String? @db.VarChar(100)
  timemodified  BigInt?
  lastverified  BigInt?
  revoked       Boolean @default(false)
  lockcounter   Int     @default(0) @db.MediumInt

  @@index([factor], map: "sandbox_toolmfa_fac_ix")
  @@index([userid], map: "sandbox_toolmfa_use_ix")
  @@index([userid, factor, lockcounter], map: "sandbox_toolmfa_usefacloc_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_mfa_auth {
  id           BigInt @id @default(autoincrement())
  userid       BigInt
  lastverified BigInt @default(0)

  @@index([userid], map: "sandbox_toolmfaauth_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_mfa_secrets {
  id          BigInt  @id @default(autoincrement())
  userid      BigInt
  factor      String  @default("") @db.VarChar(100)
  secret      String  @default("") @db.VarChar(1333)
  timecreated BigInt
  expiry      BigInt
  revoked     Boolean @default(false)
  sessionid   String? @db.VarChar(100)

  @@index([expiry], map: "sandbox_toolmfasecr_exp_ix")
  @@index([factor], map: "sandbox_toolmfasecr_fac_ix")
  @@index([userid], map: "sandbox_toolmfasecr_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_monitor_events {
  id                BigInt @id @default(autoincrement())
  eventname         String @default("") @db.VarChar(254)
  contextid         BigInt
  contextlevel      BigInt
  contextinstanceid BigInt
  link              String @default("") @db.VarChar(254)
  courseid          BigInt
  timecreated       BigInt

  @@index([contextinstanceid], map: "sandbox_toolmonieven_con2_ix")
  @@index([contextid], map: "sandbox_toolmonieven_con_ix")
  @@index([courseid], map: "sandbox_toolmonieven_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_monitor_history {
  id       BigInt @id @default(autoincrement())
  sid      BigInt
  userid   BigInt
  timesent BigInt

  @@unique([sid, userid, timesent], map: "sandbox_toolmonihist_sidus_uix")
  @@index([sid], map: "sandbox_toolmonihist_sid_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_monitor_rules {
  id                BigInt  @id @default(autoincrement())
  description       String? @db.LongText
  descriptionformat Boolean
  name              String  @default("") @db.VarChar(254)
  userid            BigInt
  courseid          BigInt
  plugin            String  @default("") @db.VarChar(254)
  eventname         String  @default("") @db.VarChar(254)
  template          String  @db.LongText
  templateformat    Boolean
  frequency         Int     @db.SmallInt
  timewindow        Int     @db.MediumInt
  timemodified      BigInt
  timecreated       BigInt

  @@index([courseid, userid], map: "sandbox_toolmonirule_couuse_ix")
  @@index([eventname], map: "sandbox_toolmonirule_eve_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_monitor_subscriptions {
  id                   BigInt @id @default(autoincrement())
  courseid             BigInt
  ruleid               BigInt
  cmid                 BigInt
  userid               BigInt
  timecreated          BigInt
  lastnotificationsent BigInt @default(0)
  inactivedate         BigInt @default(0)

  @@index([courseid, userid], map: "sandbox_toolmonisubs_couuse_ix")
  @@index([ruleid], map: "sandbox_toolmonisubs_rul_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_policy {
  id               BigInt  @id @default(autoincrement())
  sortorder        Int     @default(999) @db.MediumInt
  currentversionid BigInt?

  @@index([currentversionid], map: "sandbox_toolpoli_cur_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_policy_acceptances {
  id              BigInt   @id @default(autoincrement())
  policyversionid BigInt
  userid          BigInt
  status          Boolean?
  lang            String   @default("") @db.VarChar(30)
  usermodified    BigInt
  timecreated     BigInt
  timemodified    BigInt
  note            String?  @db.LongText

  @@unique([policyversionid, userid], map: "sandbox_toolpoliacce_polus_uix")
  @@index([policyversionid], map: "sandbox_toolpoliacce_pol_ix")
  @@index([usermodified], map: "sandbox_toolpoliacce_use2_ix")
  @@index([userid], map: "sandbox_toolpoliacce_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_policy_versions {
  id             BigInt @id @default(autoincrement())
  name           String @default("") @db.VarChar(1333)
  type           Int    @default(0) @db.SmallInt
  audience       Int    @default(0) @db.SmallInt
  archived       Int    @default(0) @db.SmallInt
  usermodified   BigInt
  timecreated    BigInt
  timemodified   BigInt
  policyid       BigInt
  agreementstyle Int    @default(0) @db.SmallInt
  optional       Int    @default(0) @db.SmallInt
  revision       String @default("") @db.VarChar(1333)
  summary        String @db.LongText
  summaryformat  Int    @db.SmallInt
  content        String @db.LongText
  contentformat  Int    @db.SmallInt

  @@index([policyid], map: "sandbox_toolpolivers_pol_ix")
  @@index([usermodified], map: "sandbox_toolpolivers_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_recyclebin_category {
  id          BigInt @id @default(autoincrement())
  categoryid  BigInt
  shortname   String @default("") @db.VarChar(255)
  fullname    String @default("") @db.VarChar(255)
  timecreated BigInt

  @@index([categoryid], map: "sandbox_toolrecycate_cat_ix")
  @@index([timecreated], map: "sandbox_toolrecycate_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_recyclebin_course {
  id          BigInt  @id @default(autoincrement())
  courseid    BigInt
  section     BigInt
  module      BigInt
  name        String? @db.VarChar(255)
  timecreated BigInt  @default(0)

  @@index([courseid], map: "sandbox_toolrecycour_cou_ix")
  @@index([timecreated], map: "sandbox_toolrecycour_tim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_usertours_steps {
  id            BigInt  @id @default(autoincrement())
  tourid        BigInt
  title         String? @db.LongText
  content       String? @db.LongText
  contentformat Int     @default(0) @db.SmallInt
  targettype    Int     @db.TinyInt
  targetvalue   String  @db.LongText
  sortorder     BigInt  @default(0)
  configdata    String  @db.LongText

  @@index([tourid], map: "sandbox_tooluserstep_tou_ix")
  @@index([tourid, sortorder], map: "sandbox_tooluserstep_tousor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_tool_usertours_tours {
  id                 BigInt  @id @default(autoincrement())
  name               String  @default("") @db.VarChar(255)
  description        String? @db.LongText
  pathmatch          String? @db.VarChar(255)
  enabled            Boolean @default(false)
  sortorder          BigInt  @default(0)
  endtourlabel       String? @db.VarChar(255)
  configdata         String  @db.LongText
  displaystepnumbers Boolean @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_upgrade_log {
  id            BigInt  @id @default(autoincrement())
  type          BigInt
  plugin        String? @db.VarChar(100)
  version       String? @db.VarChar(100)
  targetversion String? @db.VarChar(100)
  info          String  @default("") @db.VarChar(255)
  details       String? @db.LongText
  backtrace     String? @db.LongText
  userid        BigInt
  timemodified  BigInt

  @@index([timemodified], map: "sandbox_upgrlog_tim_ix")
  @@index([type, timemodified], map: "sandbox_upgrlog_typtim_ix")
  @@index([userid], map: "sandbox_upgrlog_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_url {
  id             BigInt  @id @default(autoincrement())
  course         BigInt  @default(0)
  name           String  @default("") @db.VarChar(255)
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  externalurl    String  @db.LongText
  display        Int     @default(0) @db.SmallInt
  displayoptions String? @db.LongText
  parameters     String? @db.LongText
  timemodified   BigInt  @default(0)

  @@index([course], map: "sandbox_url_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user {
  id                BigInt  @id @default(autoincrement())
  auth              String  @default("manual") @db.VarChar(20)
  confirmed         Boolean @default(false)
  policyagreed      Boolean @default(false)
  deleted           Boolean @default(false)
  suspended         Boolean @default(false)
  mnethostid        BigInt  @default(0)
  username          String  @default("") @db.VarChar(100)
  password          String  @default("") @db.VarChar(255)
  idnumber          String  @default("") @db.VarChar(255)
  firstname         String  @default("") @db.VarChar(100)
  lastname          String  @default("") @db.VarChar(100)
  email             String  @default("") @db.VarChar(100)
  emailstop         Boolean @default(false)
  phone1            String  @default("") @db.VarChar(20)
  phone2            String  @default("") @db.VarChar(20)
  institution       String  @default("") @db.VarChar(255)
  department        String  @default("") @db.VarChar(255)
  address           String  @default("") @db.VarChar(255)
  city              String  @default("") @db.VarChar(120)
  country           String  @default("") @db.VarChar(2)
  lang              String  @default("en") @db.VarChar(30)
  calendartype      String  @default("gregorian") @db.VarChar(30)
  theme             String  @default("") @db.VarChar(50)
  timezone          String  @default("99") @db.VarChar(100)
  firstaccess       BigInt  @default(0)
  lastaccess        BigInt  @default(0)
  lastlogin         BigInt  @default(0)
  currentlogin      BigInt  @default(0)
  lastip            String  @default("") @db.VarChar(45)
  secret            String  @default("") @db.VarChar(15)
  picture           BigInt  @default(0)
  description       String? @db.LongText
  descriptionformat Int     @default(1) @db.TinyInt
  mailformat        Boolean @default(true)
  maildigest        Boolean @default(false)
  maildisplay       Int     @default(2) @db.TinyInt
  autosubscribe     Boolean @default(true)
  trackforums       Boolean @default(false)
  timecreated       BigInt  @default(0)
  timemodified      BigInt  @default(0)
  trustbitmask      BigInt  @default(0)
  imagealt          String? @db.VarChar(255)
  lastnamephonetic  String? @db.VarChar(255)
  firstnamephonetic String? @db.VarChar(255)
  middlename        String? @db.VarChar(255)
  alternatename     String? @db.VarChar(255)
  moodlenetprofile  String? @db.VarChar(255)

  @@unique([mnethostid, username], map: "sandbox_user_mneuse_uix")
  @@index([alternatename], map: "sandbox_user_alt_ix")
  @@index([auth], map: "sandbox_user_aut_ix")
  @@index([city], map: "sandbox_user_cit_ix")
  @@index([confirmed], map: "sandbox_user_con_ix")
  @@index([country], map: "sandbox_user_cou_ix")
  @@index([deleted], map: "sandbox_user_del_ix")
  @@index([email], map: "sandbox_user_ema_ix")
  @@index([firstnamephonetic], map: "sandbox_user_fir2_ix")
  @@index([firstname], map: "sandbox_user_fir_ix")
  @@index([idnumber], map: "sandbox_user_idn_ix")
  @@index([lastaccess], map: "sandbox_user_las2_ix")
  @@index([lastnamephonetic], map: "sandbox_user_las3_ix")
  @@index([lastname], map: "sandbox_user_las_ix")
  @@index([middlename], map: "sandbox_user_mid_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_devices {
  id           BigInt  @id @default(autoincrement())
  userid       BigInt  @default(0)
  appid        String  @default("") @db.VarChar(128)
  name         String  @default("") @db.VarChar(32)
  model        String  @default("") @db.VarChar(32)
  platform     String  @default("") @db.VarChar(32)
  version      String  @default("") @db.VarChar(32)
  pushid       String  @default("") @db.VarChar(255)
  uuid         String  @default("") @db.VarChar(255)
  publickey    String? @db.LongText
  timecreated  BigInt
  timemodified BigInt

  @@unique([pushid, userid], map: "sandbox_userdevi_pususe_uix")
  @@index([userid], map: "sandbox_userdevi_use_ix")
  @@index([uuid, userid], map: "sandbox_userdevi_uuiuse_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_enrolments {
  id           BigInt @id @default(autoincrement())
  status       BigInt @default(0)
  enrolid      BigInt
  userid       BigInt
  timestart    BigInt @default(0)
  timeend      BigInt @default(2147483647)
  modifierid   BigInt @default(0)
  timecreated  BigInt @default(0)
  timemodified BigInt @default(0)

  @@unique([enrolid, userid], map: "sandbox_userenro_enruse_uix")
  @@index([enrolid], map: "sandbox_userenro_enr_ix")
  @@index([modifierid], map: "sandbox_userenro_mod_ix")
  @@index([userid], map: "sandbox_userenro_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_info_category {
  id        BigInt @id @default(autoincrement())
  name      String @default("") @db.VarChar(255)
  sortorder BigInt @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_info_data {
  id         BigInt @id @default(autoincrement())
  userid     BigInt @default(0)
  fieldid    BigInt @default(0)
  data       String @db.LongText
  dataformat Int    @default(0) @db.TinyInt

  @@unique([userid, fieldid], map: "sandbox_userinfodata_usefi_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_info_field {
  id                BigInt  @id @default(autoincrement())
  shortname         String  @default("shortname") @db.VarChar(255)
  name              String  @db.LongText
  datatype          String  @default("") @db.VarChar(255)
  description       String? @db.LongText
  descriptionformat Int     @default(0) @db.TinyInt
  categoryid        BigInt  @default(0)
  sortorder         BigInt  @default(0)
  required          Int     @default(0) @db.TinyInt
  locked            Int     @default(0) @db.TinyInt
  visible           Int     @default(0) @db.SmallInt
  forceunique       Int     @default(0) @db.TinyInt
  signup            Int     @default(0) @db.TinyInt
  defaultdata       String? @db.LongText
  defaultdataformat Int     @default(0) @db.TinyInt
  param1            String? @db.LongText
  param2            String? @db.LongText
  param3            String? @db.LongText
  param4            String? @db.LongText
  param5            String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_lastaccess {
  id         BigInt @id @default(autoincrement())
  userid     BigInt @default(0)
  courseid   BigInt @default(0)
  timeaccess BigInt @default(0)

  @@unique([userid, courseid], map: "sandbox_userlast_usecou_uix")
  @@index([courseid], map: "sandbox_userlast_cou_ix")
  @@index([userid], map: "sandbox_userlast_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_password_history {
  id          BigInt @id @default(autoincrement())
  userid      BigInt
  hash        String @default("") @db.VarChar(255)
  timecreated BigInt

  @@index([userid], map: "sandbox_userpasshist_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_password_resets {
  id              BigInt @id @default(autoincrement())
  userid          BigInt
  timerequested   BigInt
  timererequested BigInt @default(0)
  token           String @default("") @db.VarChar(32)

  @@index([userid], map: "sandbox_userpassrese_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_preferences {
  id     BigInt @id @default(autoincrement())
  userid BigInt @default(0)
  name   String @default("") @db.VarChar(255)
  value  String @default("") @db.VarChar(1333)

  @@unique([userid, name], map: "sandbox_userpref_usenam_uix")
  @@index([name], map: "sandbox_userpref_nam_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_user_private_key {
  id            BigInt  @id @default(autoincrement())
  script        String  @default("") @db.VarChar(128)
  value         String  @default("") @db.VarChar(128)
  userid        BigInt
  instance      BigInt?
  iprestriction String? @db.VarChar(255)
  validuntil    BigInt?
  timecreated   BigInt?

  @@index([script, value], map: "sandbox_userprivkey_scrval_ix")
  @@index([userid], map: "sandbox_userprivkey_use_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_wiki {
  id             BigInt  @id @default(autoincrement())
  course         BigInt  @default(0)
  name           String  @default("Wiki") @db.VarChar(255)
  intro          String? @db.LongText
  introformat    Int     @default(0) @db.SmallInt
  timecreated    BigInt  @default(0)
  timemodified   BigInt  @default(0)
  firstpagetitle String  @default("First Page") @db.VarChar(255)
  wikimode       String  @default("collaborative") @db.VarChar(20)
  defaultformat  String  @default("creole") @db.VarChar(20)
  forceformat    Boolean @default(true)
  editbegin      BigInt  @default(0)
  editend        BigInt? @default(0)

  @@index([course], map: "sandbox_wiki_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_wiki_links {
  id            BigInt  @id @default(autoincrement())
  subwikiid     BigInt  @default(0)
  frompageid    BigInt  @default(0)
  topageid      BigInt  @default(0)
  tomissingpage String? @db.VarChar(255)

  @@index([frompageid], map: "sandbox_wikilink_fro_ix")
  @@index([subwikiid], map: "sandbox_wikilink_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_wiki_locks {
  id          BigInt  @id @default(autoincrement())
  pageid      BigInt  @default(0)
  sectionname String? @db.VarChar(255)
  userid      BigInt  @default(0)
  lockedat    BigInt  @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_wiki_pages {
  id            BigInt  @id @default(autoincrement())
  subwikiid     BigInt  @default(0)
  title         String  @default("title") @db.VarChar(255)
  cachedcontent String  @db.LongText
  timecreated   BigInt  @default(0)
  timemodified  BigInt  @default(0)
  timerendered  BigInt  @default(0)
  userid        BigInt  @default(0)
  pageviews     BigInt  @default(0)
  readonly      Boolean @default(false)

  @@unique([subwikiid, title, userid], map: "sandbox_wikipage_subtituse_uix")
  @@index([subwikiid], map: "sandbox_wikipage_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_wiki_subwikis {
  id      BigInt @id @default(autoincrement())
  wikiid  BigInt @default(0)
  groupid BigInt @default(0)
  userid  BigInt @default(0)

  @@unique([wikiid, groupid, userid], map: "sandbox_wikisubw_wikgrouse_uix")
  @@index([wikiid], map: "sandbox_wikisubw_wik_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_wiki_synonyms {
  id          BigInt @id @default(autoincrement())
  subwikiid   BigInt @default(0)
  pageid      BigInt @default(0)
  pagesynonym String @default("Pagesynonym") @db.VarChar(255)

  @@unique([pageid, pagesynonym], map: "sandbox_wikisyno_pagpag_uix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_wiki_versions {
  id            BigInt @id @default(autoincrement())
  pageid        BigInt @default(0)
  content       String @db.LongText
  contentformat String @default("creole") @db.VarChar(20)
  version       Int    @default(0) @db.MediumInt
  timecreated   BigInt @default(0)
  userid        BigInt @default(0)

  @@index([pageid], map: "sandbox_wikivers_pag_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshop {
  id                       BigInt   @id @default(autoincrement())
  course                   BigInt
  name                     String   @default("") @db.VarChar(255)
  intro                    String?  @db.LongText
  introformat              Int      @default(0) @db.SmallInt
  instructauthors          String?  @db.LongText
  instructauthorsformat    Int      @default(0) @db.SmallInt
  instructreviewers        String?  @db.LongText
  instructreviewersformat  Int      @default(0) @db.SmallInt
  timemodified             BigInt
  phase                    Int?     @default(0) @db.SmallInt
  useexamples              Int?     @default(0) @db.TinyInt
  usepeerassessment        Int?     @default(0) @db.TinyInt
  useselfassessment        Int?     @default(0) @db.TinyInt
  grade                    Decimal? @default(80.00000) @db.Decimal(10, 5)
  gradinggrade             Decimal? @default(20.00000) @db.Decimal(10, 5)
  strategy                 String   @default("") @db.VarChar(30)
  evaluation               String   @default("") @db.VarChar(30)
  gradedecimals            Int?     @default(0) @db.SmallInt
  submissiontypetext       Boolean  @default(true)
  submissiontypefile       Boolean  @default(true)
  nattachments             Int?     @default(1) @db.SmallInt
  submissionfiletypes      String?  @db.VarChar(255)
  latesubmissions          Int?     @default(0) @db.TinyInt
  maxbytes                 BigInt?  @default(100000)
  examplesmode             Int?     @default(0) @db.SmallInt
  submissionstart          BigInt?  @default(0)
  submissionend            BigInt?  @default(0)
  assessmentstart          BigInt?  @default(0)
  assessmentend            BigInt?  @default(0)
  phaseswitchassessment    Int      @default(0) @db.TinyInt
  conclusion               String?  @db.LongText
  conclusionformat         Int      @default(1) @db.SmallInt
  overallfeedbackmode      Int?     @default(1) @db.SmallInt
  overallfeedbackfiles     Int?     @default(0) @db.SmallInt
  overallfeedbackfiletypes String?  @db.VarChar(255)
  overallfeedbackmaxbytes  BigInt?  @default(100000)

  @@index([course], map: "sandbox_work_cou_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshop_aggregations {
  id           BigInt   @id @default(autoincrement())
  workshopid   BigInt
  userid       BigInt
  gradinggrade Decimal? @db.Decimal(10, 5)
  timegraded   BigInt?

  @@unique([workshopid, userid], map: "sandbox_workaggr_woruse_uix")
  @@index([userid], map: "sandbox_workaggr_use_ix")
  @@index([workshopid], map: "sandbox_workaggr_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshop_assessments {
  id                       BigInt   @id @default(autoincrement())
  submissionid             BigInt
  reviewerid               BigInt
  weight                   BigInt   @default(1)
  timecreated              BigInt?  @default(0)
  timemodified             BigInt?  @default(0)
  grade                    Decimal? @db.Decimal(10, 5)
  gradinggrade             Decimal? @db.Decimal(10, 5)
  gradinggradeover         Decimal? @db.Decimal(10, 5)
  gradinggradeoverby       BigInt?
  feedbackauthor           String?  @db.LongText
  feedbackauthorformat     Int?     @default(0) @db.SmallInt
  feedbackauthorattachment Int?     @default(0) @db.SmallInt
  feedbackreviewer         String?  @db.LongText
  feedbackreviewerformat   Int?     @default(0) @db.SmallInt

  @@index([gradinggradeoverby], map: "sandbox_workasse_gra_ix")
  @@index([reviewerid], map: "sandbox_workasse_rev_ix")
  @@index([submissionid], map: "sandbox_workasse_sub_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshop_grades {
  id                BigInt   @id @default(autoincrement())
  assessmentid      BigInt
  strategy          String   @default("") @db.VarChar(30)
  dimensionid       BigInt
  grade             Decimal? @db.Decimal(10, 5)
  peercomment       String?  @db.LongText
  peercommentformat Int?     @default(0) @db.SmallInt

  @@unique([assessmentid, strategy, dimensionid], map: "sandbox_workgrad_assstrdim_uix")
  @@index([assessmentid], map: "sandbox_workgrad_ass_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshop_submissions {
  id                   BigInt   @id @default(autoincrement())
  workshopid           BigInt
  example              Int?     @default(0) @db.TinyInt
  authorid             BigInt
  timecreated          BigInt
  timemodified         BigInt
  title                String   @default("") @db.VarChar(255)
  content              String?  @db.LongText
  contentformat        Int      @default(0) @db.SmallInt
  contenttrust         Int      @default(0) @db.SmallInt
  attachment           Int?     @default(0) @db.TinyInt
  grade                Decimal? @db.Decimal(10, 5)
  gradeover            Decimal? @db.Decimal(10, 5)
  gradeoverby          BigInt?
  feedbackauthor       String?  @db.LongText
  feedbackauthorformat Int?     @default(0) @db.SmallInt
  timegraded           BigInt?
  published            Int?     @default(0) @db.TinyInt
  late                 Int      @default(0) @db.TinyInt

  @@index([authorid], map: "sandbox_worksubm_aut_ix")
  @@index([gradeoverby], map: "sandbox_worksubm_gra_ix")
  @@index([workshopid], map: "sandbox_worksubm_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopallocation_scheduled {
  id            BigInt  @id @default(autoincrement())
  workshopid    BigInt  @unique(map: "sandbox_worksche_wor_uix")
  enabled       Int     @default(0) @db.TinyInt
  submissionend BigInt
  timeallocated BigInt?
  settings      String? @db.LongText
  resultstatus  BigInt?
  resultmessage String? @db.VarChar(1333)
  resultlog     String? @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopeval_best_settings {
  id         BigInt @id @default(autoincrement())
  workshopid BigInt @unique(map: "sandbox_workbestsett_wor_uix")
  comparison Int?   @default(5) @db.SmallInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopform_accumulative {
  id                BigInt  @id @default(autoincrement())
  workshopid        BigInt
  sort              BigInt? @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt
  grade             BigInt
  weight            Int?    @default(1) @db.MediumInt

  @@index([workshopid], map: "sandbox_workaccu_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopform_comments {
  id                BigInt  @id @default(autoincrement())
  workshopid        BigInt
  sort              BigInt? @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt

  @@index([workshopid], map: "sandbox_workcomm_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopform_numerrors {
  id                BigInt  @id @default(autoincrement())
  workshopid        BigInt
  sort              BigInt? @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt
  descriptiontrust  BigInt?
  grade0            String? @db.VarChar(50)
  grade1            String? @db.VarChar(50)
  weight            Int?    @default(1) @db.MediumInt

  @@index([workshopid], map: "sandbox_worknume_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopform_numerrors_map {
  id         BigInt  @id @default(autoincrement())
  workshopid BigInt
  nonegative BigInt
  grade      Decimal @db.Decimal(10, 5)

  @@unique([workshopid, nonegative], map: "sandbox_worknumemap_wornon_uix")
  @@index([workshopid], map: "sandbox_worknumemap_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopform_rubric {
  id                BigInt  @id @default(autoincrement())
  workshopid        BigInt
  sort              BigInt? @default(0)
  description       String? @db.LongText
  descriptionformat Int?    @default(0) @db.SmallInt

  @@index([workshopid], map: "sandbox_workrubr_wor_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopform_rubric_config {
  id         BigInt  @id @default(autoincrement())
  workshopid BigInt  @unique(map: "sandbox_workrubrconf_wor_uix")
  layout     String? @default("list") @db.VarChar(30)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_workshopform_rubric_levels {
  id               BigInt  @id @default(autoincrement())
  dimensionid      BigInt
  grade            Decimal @db.Decimal(10, 5)
  definition       String? @db.LongText
  definitionformat Int?    @default(0) @db.SmallInt

  @@index([dimensionid], map: "sandbox_workrubrleve_dim_ix")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sandbox_xapi_states {
  id           BigInt  @id @default(autoincrement())
  component    String  @default("") @db.VarChar(255)
  userid       BigInt?
  itemid       BigInt
  stateid      String  @default("") @db.VarChar(255)
  statedata    String? @db.LongText
  registration String? @db.VarChar(255)
  timecreated  BigInt
  timemodified BigInt?

  @@index([component, itemid], map: "sandbox_xapistat_comite_ix")
  @@index([timemodified], map: "sandbox_xapistat_tim_ix")
  @@index([userid], map: "sandbox_xapistat_use_ix")
}

model scoolter_additional_services {
  id                                   String                                   @id
  name                                 String                                   @db.VarChar(255)
  description                          String?                                  @db.Text
  price                                Float
  type                                 scoolter_additional_services_type
  charge_type                          scoolter_additional_services_charge_type
  is_active                            Boolean                                  @default(true)
  created_at                           DateTime                                 @default(now())
  updated_at                           DateTime                                 @default(now())
  scoolter_booking_additional_services scoolter_booking_additional_services[]
}

model scoolter_booking_additional_services {
  id                           String                       @id
  booking_id                   String
  additional_service_id        String
  quantity                     Int                          @default(1)
  unit_price                   Float
  total_price                  Float
  created_at                   DateTime                     @default(now())
  updated_at                   DateTime                     @default(now())
  scoolter_bookings            scoolter_bookings            @relation(fields: [booking_id], references: [id], onDelete: Cascade, map: "scoolter_booking_additional_services_ibfk_1")
  scoolter_additional_services scoolter_additional_services @relation(fields: [additional_service_id], references: [id], onDelete: Cascade, map: "scoolter_booking_additional_services_ibfk_2")

  @@unique([booking_id, additional_service_id], map: "scoolter_booking_additional_services_booking_id_as_id_key")
  @@index([additional_service_id], map: "scoolter_booking_additional_services_ibfk_2")
}

model scoolter_booking_discounts {
  id                String                                   @id
  booking_id        String                                   @unique
  discount_type     scoolter_booking_discounts_discount_type
  amount            Float
  percentage        Float?
  reason            scoolter_booking_discounts_reason
  notes             String?                                  @db.Text
  applied_by        String
  created_at        DateTime                                 @default(now())
  updated_at        DateTime                                 @default(now())
  scoolter_bookings scoolter_bookings                        @relation(fields: [booking_id], references: [id], map: "scoolter_booking_discounts_ibfk_1")
  scoolter_users    scoolter_users                           @relation(fields: [applied_by], references: [id], map: "scoolter_booking_discounts_ibfk_2")

  @@index([applied_by], map: "applied_by")
}

model scoolter_booking_relocations {
  id                   String               @id
  booking_id           String
  relocation_id        String
  price                Float
  created_at           DateTime             @default(now())
  updated_at           DateTime             @default(now())
  scoolter_bookings    scoolter_bookings    @relation(fields: [booking_id], references: [id], onDelete: Cascade, map: "scoolter_booking_relocations_ibfk_1")
  scoolter_relocations scoolter_relocations @relation(fields: [relocation_id], references: [id], onDelete: Cascade, map: "scoolter_booking_relocations_ibfk_2")

  @@unique([booking_id, relocation_id], map: "booking_id_relocation_id_unique")
  @@index([relocation_id], map: "relocation_id")
}

model scoolter_bookings {
  id                                                                          String                                 @id
  scoolter_number                                                             String                                 @default("2025-000") @db.VarChar(10)
  reference_code                                                              String                                 @unique @default("AAA111") @db.Char(6)
  user_id                                                                     String
  type_id                                                                     String
  inventory_id                                                                String?
  start_date                                                                  DateTime                               @default(now())
  end_date                                                                    DateTime                               @default(now())
  pickup_location_id                                                          String
  return_location_id                                                          String
  motorcycle_price                                                            Float                                  @default(0)
  location_price                                                              Decimal?                               @default(0.00) @db.Decimal(10, 2)
  relocation_price                                                            Decimal?                               @default(0.00) @db.Decimal(10, 2)
  additional_services_price                                                   Float                                  @default(0)
  subtotal_price                                                              Float                                  @default(0)
  discount_amount                                                             Float                                  @default(0)
  total_price                                                                 Float                                  @default(0)
  deposit_amount                                                              Float                                  @default(0)
  deposit_status                                                              scoolter_bookings_deposit_status       @default(PENDING)
  fuel_charge                                                                 Float                                  @default(0)
  status                                                                      scoolter_bookings_status               @default(ONGOING)
  number_of_passengers                                                        Int                                    @default(1)
  driver_license_front                                                        String                                 @default("file") @db.VarChar(255)
  driver_license_back                                                         String                                 @default("file") @db.VarChar(255)
  comments                                                                    String?                                @db.Text
  created_at                                                                  DateTime                               @default(now())
  updated_at                                                                  DateTime                               @default(now())
  scoolter_booking_additional_services                                        scoolter_booking_additional_services[]
  scoolter_booking_discounts                                                  scoolter_booking_discounts?
  scoolter_booking_relocations                                                scoolter_booking_relocations[]
  scoolter_motorcycle_inventory                                               scoolter_motorcycle_inventory?         @relation(fields: [inventory_id], references: [id], onDelete: Restrict, map: "fk_bookings_inventory_item")
  scoolter_users                                                              scoolter_users                         @relation(fields: [user_id], references: [id], map: "scoolter_bookings_ibfk_1")
  scoolter_locations_scoolter_bookings_pickup_location_idToscoolter_locations scoolter_locations                     @relation("scoolter_bookings_pickup_location_idToscoolter_locations", fields: [pickup_location_id], references: [id], map: "scoolter_bookings_ibfk_3")
  scoolter_locations_scoolter_bookings_return_location_idToscoolter_locations scoolter_locations                     @relation("scoolter_bookings_return_location_idToscoolter_locations", fields: [return_location_id], references: [id], map: "scoolter_bookings_ibfk_4")
  scoolter_inspections                                                        scoolter_inspections?
  scoolter_payments                                                           scoolter_payments[]

  @@index([inventory_id], map: "fk_bookings_inventory_item")
  @@index([user_id], map: "scoolter_bookings_ibfk_1")
  @@index([pickup_location_id], map: "scoolter_bookings_ibfk_3")
  @@index([return_location_id], map: "scoolter_bookings_ibfk_4")
}

model scoolter_bookings_old {
  id                 Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  booking_ref        String   @db.VarChar(10)
  booking_date       DateTime @db.DateTime(0)
  status             String   @db.VarChar(45)
  remote_ip          String   @db.VarChar(15)
  lang               String   @db.VarChar(2)
  first_name         String   @db.VarChar(45)
  last_name          String   @db.VarChar(45)
  email              String   @db.VarChar(128)
  country_phone_code Int
  phone              String   @db.VarChar(15)
  country_iso_code   String   @db.VarChar(2)
  motorbike_type     String   @db.VarChar(10)
  helmet             String?  @db.VarChar(3)
  plate              String?  @db.VarChar(10)
  starting_date      DateTime @db.DateTime(0)
  ending_date        DateTime @db.DateTime(0)
  days_rental        Int
  collect            String   @db.VarChar(45)
  pickup             String   @db.VarChar(45)
  license_front      String?  @db.VarChar(200)
  license_back       String?  @db.VarChar(200)
  rental_fee         Decimal  @db.Decimal(9, 2)
  discount           Decimal  @default(0.00) @db.Decimal(9, 2)
  collect_fee        Decimal  @default(0.00) @db.Decimal(9, 2)
  pickup_fee         Decimal  @default(0.00) @db.Decimal(9, 2)
  helmet_fee         Decimal  @default(0.00) @db.Decimal(9, 2)
  fuel_surcharges    Decimal  @default(0.00) @db.Decimal(9, 2)
  damages_fee        Decimal  @db.Decimal(9, 2)
  relocation_fee     Decimal  @default(0.00) @db.Decimal(9, 2)
  relocation_start   String?  @db.VarChar(45)
  relocation_end     String?  @db.VarChar(45)
  rental_total       Decimal  @db.Decimal(9, 2)
  payment_method     String?  @db.VarChar(10)
  deposit            Decimal? @default(200.00) @db.Decimal(9, 2)
  invoice_status     String?  @db.VarChar(10)
  user_comment       String?  @db.VarChar(450)
  observations       String?  @db.VarChar(450)
}

model scoolter_countries {
  id         Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  phone_code String @db.VarChar(4)
  iso_code   String @db.VarChar(2)
  name       String @db.VarChar(45)
}

model scoolter_deposit_rules {
  id                        String                    @id
  motorcycle_type_id        String
  location_id               String
  min_days                  Int
  max_days                  Int
  deposit_amount            Float
  is_active                 Boolean                   @default(true)
  created_at                DateTime                  @default(now())
  updated_at                DateTime                  @default(now())
  scoolter_motorcycle_types scoolter_motorcycle_types @relation(fields: [motorcycle_type_id], references: [id], map: "fk_deposit_rules_motorcycle_type")
  scoolter_locations        scoolter_locations        @relation(fields: [location_id], references: [id], map: "scoolter_deposit_rules_ibfk_2")

  @@unique([motorcycle_type_id, location_id, min_days, max_days], map: "deposit_rule_unique_key")
  @@index([location_id], map: "location_id")
}

model scoolter_extra_services {
  id         Int                                @id @unique(map: "id_UNIQUE") @default(autoincrement())
  concept    String                             @db.VarChar(45)
  type       String                             @db.VarChar(45)
  fee        Decimal                            @db.Decimal(9, 2)
  recurrence scoolter_extra_services_recurrence
}

model scoolter_inspections {
  id                String            @id
  booking_id        String            @unique
  inspection_date   DateTime          @default(now())
  inspector_id      String
  has_damages       Boolean           @default(false)
  damage_details    String?           @db.Text
  damage_charges    Float?
  photos            String?           @db.Text
  notes             String?           @db.Text
  created_at        DateTime          @default(now())
  updated_at        DateTime          @default(now())
  scoolter_bookings scoolter_bookings @relation(fields: [booking_id], references: [id], map: "scoolter_inspections_ibfk_1")
  scoolter_users    scoolter_users    @relation(fields: [inspector_id], references: [id], map: "scoolter_inspections_ibfk_2")

  @@index([inspector_id], map: "inspector_id")
}

model scoolter_locations {
  id                                                                                    String                          @id
  list_order                                                                            Int?
  city                                                                                  String                          @db.VarChar(255)
  name                                                                                  String                          @db.VarChar(255)
  type                                                                                  scoolter_locations_type
  delivery_fee                                                                          Float
  pickup_fee                                                                            Float
  is_active                                                                             Boolean                         @default(true)
  created_at                                                                            DateTime                        @default(now())
  updated_at                                                                            DateTime                        @default(now())
  scoolter_bookings_scoolter_bookings_pickup_location_idToscoolter_locations            scoolter_bookings[]             @relation("scoolter_bookings_pickup_location_idToscoolter_locations")
  scoolter_bookings_scoolter_bookings_return_location_idToscoolter_locations            scoolter_bookings[]             @relation("scoolter_bookings_return_location_idToscoolter_locations")
  scoolter_deposit_rules                                                                scoolter_deposit_rules[]
  scoolter_motorcycle_inventory                                                         scoolter_motorcycle_inventory[]
  scoolter_relocations_scoolter_relocations_origin_location_idToscoolter_locations      scoolter_relocations[]          @relation("scoolter_relocations_origin_location_idToscoolter_locations")
  scoolter_relocations_scoolter_relocations_destination_location_idToscoolter_locations scoolter_relocations[]          @relation("scoolter_relocations_destination_location_idToscoolter_locations")
}

model scoolter_motorbike_inventory {
  id     String @id @unique(map: "id_UNIQUE")
  typeid String
  plate  String @db.VarChar(10)
  status String @db.VarChar(45)
}

model scoolter_motorbike_types {
  id           Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  engine       String   @db.VarChar(15)
  transmission String   @db.VarChar(15)
  rental_fee   Decimal  @db.Decimal(9, 2)
  deposit_fee  Decimal? @db.Decimal(9, 2)
}

model scoolter_motorcycle_images {
  id                        String                    @id
  motorcycle_type_id        String
  url                       String                    @db.Text
  is_primary                Boolean                   @default(false)
  created_at                DateTime                  @default(now())
  updated_at                DateTime                  @default(now())
  scoolter_motorcycle_types scoolter_motorcycle_types @relation(fields: [motorcycle_type_id], references: [id], map: "scoolter_motorcycle_images_ibfk_1")

  @@index([motorcycle_type_id], map: "motorcycle_type_id")
}

model scoolter_motorcycle_inventory {
  id                        String                               @id
  motorcycle_type_id        String
  license_plate             String                               @unique
  current_location_id       String
  status                    scoolter_motorcycle_inventory_status @default(AVAILABLE)
  created_at                DateTime                             @default(now())
  updated_at                DateTime                             @default(now())
  scoolter_bookings         scoolter_bookings[]
  scoolter_motorcycle_types scoolter_motorcycle_types            @relation(fields: [motorcycle_type_id], references: [id], map: "scoolter_motorcycle_inventory_ibfk_1")
  scoolter_locations        scoolter_locations                   @relation(fields: [current_location_id], references: [id], map: "scoolter_motorcycle_inventory_ibfk_2")

  @@index([current_location_id], map: "current_location_id")
  @@index([motorcycle_type_id], map: "motorcycle_type_id")
}

model scoolter_motorcycle_types {
  id                            String                          @id
  model                         String                          @db.VarChar(255)
  type                          String                          @db.VarChar(255)
  engine_size                   Int
  description                   String                          @db.Text
  base_price                    Float
  fuel_charge                   Float
  is_available                  Boolean                         @default(true)
  created_at                    DateTime                        @default(now())
  updated_at                    DateTime                        @default(now())
  scoolter_deposit_rules        scoolter_deposit_rules[]
  scoolter_motorcycle_images    scoolter_motorcycle_images[]
  scoolter_motorcycle_inventory scoolter_motorcycle_inventory[]
}

model scoolter_payments {
  id                String                   @id
  booking_id        String
  amount            Float
  type              scoolter_payments_type
  status            scoolter_payments_status @default(PENDING)
  transaction_id    String?                  @db.VarChar(255)
  created_at        DateTime                 @default(now())
  updated_at        DateTime                 @default(now())
  scoolter_bookings scoolter_bookings        @relation(fields: [booking_id], references: [id], map: "scoolter_payments_ibfk_1")

  @@index([booking_id], map: "booking_id")
}

model scoolter_relocations {
  id                                                                                  String                         @id
  name                                                                                String                         @db.VarChar(255)
  description                                                                         String?                        @db.Text
  origin_location_id                                                                  String
  destination_location_id                                                             String
  price                                                                               Float
  is_active                                                                           Boolean                        @default(true)
  created_at                                                                          DateTime                       @default(now())
  updated_at                                                                          DateTime                       @default(now())
  scoolter_booking_relocations                                                        scoolter_booking_relocations[]
  scoolter_locations_scoolter_relocations_origin_location_idToscoolter_locations      scoolter_locations             @relation("scoolter_relocations_origin_location_idToscoolter_locations", fields: [origin_location_id], references: [id], onDelete: Cascade, map: "scoolter_relocations_ibfk_1")
  scoolter_locations_scoolter_relocations_destination_location_idToscoolter_locations scoolter_locations             @relation("scoolter_relocations_destination_location_idToscoolter_locations", fields: [destination_location_id], references: [id], onDelete: Cascade, map: "scoolter_relocations_ibfk_2")

  @@index([destination_location_id], map: "destination_location_id")
  @@index([origin_location_id], map: "origin_location_id")
}

model scoolter_users {
  id                         String                       @id
  email                      String                       @unique
  given_name                 String                       @db.VarChar(255)
  family_name                String?                      @db.VarChar(255)
  country_code               String                       @db.Char(2)
  phone_number               String                       @db.VarChar(255)
  role                       scoolter_users_role          @default(CUSTOMER)
  created_at                 DateTime                     @default(now())
  updated_at                 DateTime                     @default(now())
  password_hash              String?                      @db.VarChar(255)
  scoolter_booking_discounts scoolter_booking_discounts[]
  scoolter_bookings          scoolter_bookings[]
  scoolter_inspections       scoolter_inspections[]
}

model wpa360_actionscheduler_actions {
  action_id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  hook                 String
  status               String    @db.VarChar(20)
  scheduled_date_gmt   DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  scheduled_date_local DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  args                 String?
  schedule             String?   @db.LongText
  group_id             BigInt    @default(0) @db.UnsignedBigInt
  attempts             Int       @default(0)
  last_attempt_gmt     DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  last_attempt_local   DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  claim_id             BigInt    @default(0) @db.UnsignedBigInt
  extended_args        String?   @db.VarChar(8000)
  priority             Int       @default(10) @db.UnsignedTinyInt

  @@index([args], map: "args")
  @@index([claim_id], map: "claim_id")
  @@index([claim_id, status, scheduled_date_gmt], map: "claim_id_status_scheduled_date_gmt")
  @@index([group_id], map: "group_id")
  @@index([hook], map: "hook")
  @@index([last_attempt_gmt], map: "last_attempt_gmt")
  @@index([scheduled_date_gmt], map: "scheduled_date_gmt")
  @@index([status], map: "status")
}

model wpa360_actionscheduler_claims {
  claim_id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  date_created_gmt DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@index([date_created_gmt], map: "date_created_gmt")
}

model wpa360_actionscheduler_groups {
  group_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  slug     String @db.VarChar(255)

  @@index([slug(length: 191)], map: "slug")
}

model wpa360_actionscheduler_logs {
  log_id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  action_id      BigInt    @db.UnsignedBigInt
  message        String    @db.Text
  log_date_gmt   DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  log_date_local DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@index([action_id], map: "action_id")
  @@index([log_date_gmt], map: "log_date_gmt")
}

model wpa360_aioseo_cache {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  key        String    @unique(map: "ndx_aioseo_cache_key") @db.VarChar(80)
  value      String    @db.LongText
  expiration DateTime? @db.DateTime(0)
  created    DateTime  @db.DateTime(0)
  updated    DateTime  @db.DateTime(0)

  @@index([expiration], map: "ndx_aioseo_cache_expiration")
}

model wpa360_commentmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  comment_id BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([comment_id], map: "comment_id")
  @@index([meta_key(length: 191)], map: "meta_key")
}

model wpa360_comments {
  comment_ID           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  comment_post_ID      BigInt   @default(0) @db.UnsignedBigInt
  comment_author       String   @db.TinyText
  comment_author_email String   @default("") @db.VarChar(100)
  comment_author_url   String   @default("") @db.VarChar(200)
  comment_author_IP    String   @default("") @db.VarChar(100)
  comment_date         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_date_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_content      String   @db.Text
  comment_karma        Int      @default(0)
  comment_approved     String   @default("1") @db.VarChar(20)
  comment_agent        String   @default("") @db.VarChar(255)
  comment_type         String   @default("comment") @db.VarChar(20)
  comment_parent       BigInt   @default(0) @db.UnsignedBigInt
  user_id              BigInt   @default(0) @db.UnsignedBigInt

  @@index([comment_approved, comment_date_gmt], map: "comment_approved_date_gmt")
  @@index([comment_author_email(length: 10)], map: "comment_author_email")
  @@index([comment_date_gmt], map: "comment_date_gmt")
  @@index([comment_parent], map: "comment_parent")
  @@index([comment_post_ID], map: "comment_post_ID")
  @@index([comment_type], map: "woo_idx_comment_type")
}

model wpa360_e_events {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  event_data String?  @db.Text
  created_at DateTime @db.DateTime(0)

  @@index([created_at], map: "created_at_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpa360_e_notes {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  route_url           String?   @db.Text
  route_title         String?   @db.VarChar(255)
  route_post_id       BigInt?   @db.UnsignedBigInt
  post_id             BigInt?   @db.UnsignedBigInt
  element_id          String?   @db.VarChar(60)
  parent_id           BigInt    @default(0) @db.UnsignedBigInt
  author_id           BigInt?   @db.UnsignedBigInt
  author_display_name String?   @db.VarChar(250)
  status              String    @default("publish") @db.VarChar(20)
  position            String?   @db.Text
  content             String?   @db.LongText
  is_resolved         Boolean   @default(false)
  is_public           Boolean   @default(true)
  last_activity_at    DateTime? @db.DateTime(0)
  created_at          DateTime  @db.DateTime(0)
  updated_at          DateTime  @db.DateTime(0)

  @@index([author_id], map: "author_id_index")
  @@index([created_at], map: "created_at_index")
  @@index([element_id], map: "element_id_index")
  @@index([is_public], map: "is_public_index")
  @@index([is_resolved], map: "is_resolved_index")
  @@index([last_activity_at], map: "last_activity_at_index")
  @@index([parent_id], map: "parent_id_index")
  @@index([post_id], map: "post_id_index")
  @@index([route_url(length: 191)], map: "route_url_index")
  @@index([status], map: "status_index")
  @@index([updated_at], map: "updated_at_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpa360_e_notes_users_relations {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  type       String   @db.VarChar(60)
  note_id    BigInt   @db.UnsignedBigInt
  user_id    BigInt   @db.UnsignedBigInt
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@index([note_id], map: "note_id_index")
  @@index([type], map: "type_index")
  @@index([user_id], map: "user_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpa360_e_submissions {
  id                      BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  type                    String?  @db.VarChar(60)
  hash_id                 String   @unique(map: "hash_id_unique_index") @db.VarChar(60)
  main_meta_id            BigInt   @db.UnsignedBigInt
  post_id                 BigInt   @db.UnsignedBigInt
  referer                 String   @db.VarChar(500)
  referer_title           String?  @db.VarChar(300)
  element_id              String   @db.VarChar(20)
  form_name               String   @db.VarChar(60)
  campaign_id             BigInt   @db.UnsignedBigInt
  user_id                 BigInt?  @db.UnsignedBigInt
  user_ip                 String   @db.VarChar(46)
  user_agent              String   @db.Text
  actions_count           Int?     @default(0)
  actions_succeeded_count Int?     @default(0)
  status                  String   @db.VarChar(20)
  is_read                 Boolean  @default(false)
  meta                    String?  @db.Text
  created_at_gmt          DateTime @db.DateTime(0)
  updated_at_gmt          DateTime @db.DateTime(0)
  created_at              DateTime @db.DateTime(0)
  updated_at              DateTime @db.DateTime(0)

  @@index([campaign_id], map: "campaign_id_index")
  @@index([created_at_gmt], map: "created_at_gmt_index")
  @@index([created_at], map: "created_at_index")
  @@index([element_id], map: "element_id_index")
  @@index([hash_id], map: "hash_id_index")
  @@index([is_read], map: "is_read_index")
  @@index([main_meta_id], map: "main_meta_id_index")
  @@index([post_id], map: "post_id_index")
  @@index([referer(length: 191)], map: "referer_index")
  @@index([referer_title(length: 191)], map: "referer_title_index")
  @@index([status], map: "status_index")
  @@index([type], map: "type_index")
  @@index([updated_at_gmt], map: "updated_at_gmt_index")
  @@index([updated_at], map: "updated_at_index")
  @@index([user_id], map: "user_id_index")
  @@index([user_ip], map: "user_ip_index")
}

model wpa360_e_submissions_actions_log {
  id             BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  submission_id  BigInt   @db.UnsignedBigInt
  action_name    String   @db.VarChar(60)
  action_label   String?  @db.VarChar(60)
  status         String   @db.VarChar(20)
  log            String?  @db.Text
  created_at_gmt DateTime @db.DateTime(0)
  updated_at_gmt DateTime @db.DateTime(0)
  created_at     DateTime @db.DateTime(0)
  updated_at     DateTime @db.DateTime(0)

  @@index([action_name], map: "action_name_index")
  @@index([created_at_gmt], map: "created_at_gmt_index")
  @@index([created_at], map: "created_at_index")
  @@index([status], map: "status_index")
  @@index([submission_id], map: "submission_id_index")
  @@index([updated_at_gmt], map: "updated_at_gmt_index")
  @@index([updated_at], map: "updated_at_index")
}

model wpa360_e_submissions_values {
  id            BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  submission_id BigInt  @default(0) @db.UnsignedBigInt
  key           String? @db.VarChar(60)
  value         String? @db.LongText

  @@index([key], map: "key_index")
  @@index([submission_id], map: "submission_id_index")
}

model wpa360_elfsight_instagram_feed_cache {
  id         Int    @id @default(autoincrement()) @db.UnsignedInt
  key        String @db.Text
  data       String @db.LongText
  updated_at Int
}

model wpa360_elfsight_instagram_feed_ig_user {
  id         Int    @id @default(autoincrement()) @db.UnsignedInt
  username   String @db.VarChar(255)
  data       String @db.LongText
  updated_at Int
}

model wpa360_elfsight_instagram_feed_widgets {
  id           Int    @id @default(autoincrement()) @db.UnsignedInt
  name         String @db.VarChar(255)
  time_created String @db.VarChar(10)
  time_updated String @db.VarChar(10)
  active       Int    @default(1)
  options      String @db.LongText
}

model wpa360_learnpress_order_itemmeta {
  meta_id                  BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  learnpress_order_item_id BigInt @default(0) @db.UnsignedBigInt
  meta_key                 String @default("") @db.VarChar(45)
  meta_value               String @db.LongText
}

model wpa360_learnpress_order_items {
  order_item_id   BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  order_item_name String @db.LongText
  order_id        BigInt @default(0) @db.UnsignedBigInt
}

model wpa360_learnpress_question_answermeta {
  meta_id                       BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  learnpress_question_answer_id BigInt @db.UnsignedBigInt
  meta_key                      String @default("") @db.VarChar(45)
  meta_value                    String @db.Text
}

model wpa360_learnpress_question_answers {
  question_answer_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  question_id        BigInt @default(0) @db.UnsignedBigInt
  answer_data        String @db.Text
  answer_order       BigInt @default(0) @db.UnsignedBigInt
}

model wpa360_learnpress_quiz_questions {
  quiz_question_id BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  quiz_id          BigInt  @default(0) @db.UnsignedBigInt
  question_id      BigInt  @default(0) @db.UnsignedBigInt
  question_order   BigInt  @default(1) @db.UnsignedBigInt
  params           String? @db.LongText
}

model wpa360_learnpress_review_logs {
  review_log_id BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  course_id     BigInt   @default(0) @db.UnsignedBigInt
  user_id       BigInt   @default(0) @db.UnsignedBigInt
  message       String   @db.Text
  date          DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  status        String   @default("") @db.VarChar(45)
  user_type     String   @default("") @db.VarChar(45)
}

model wpa360_learnpress_section_items {
  section_item_id BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  section_id      BigInt  @default(0) @db.UnsignedBigInt
  item_id         BigInt  @default(0) @db.UnsignedBigInt
  item_order      BigInt  @default(0) @db.UnsignedBigInt
  item_type       String? @db.VarChar(45)
}

model wpa360_learnpress_sections {
  section_id          BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  section_name        String @default("") @db.VarChar(255)
  section_course_id   BigInt @default(0) @db.UnsignedBigInt
  section_order       BigInt @default(0) @db.UnsignedBigInt
  section_description String @db.LongText
}

model wpa360_learnpress_sessions {
  session_id     BigInt @unique(map: "session_id") @default(autoincrement())
  session_key    String @id @db.Char(32)
  session_value  String @db.LongText
  session_expiry BigInt
}

model wpa360_learnpress_user_itemmeta {
  meta_id                 BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  learnpress_user_item_id BigInt @db.UnsignedBigInt
  meta_key                String @default("") @db.VarChar(45)
  meta_value              String @db.Text
}

model wpa360_learnpress_user_items {
  user_item_id   BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_id        BigInt   @default(0) @db.UnsignedBigInt
  item_id        BigInt   @default(0) @db.UnsignedBigInt
  start_time     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  start_time_gmt DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  end_time       DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  end_time_gmt   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  item_type      String   @default("") @db.VarChar(45)
  status         String   @default("") @db.VarChar(45)
  ref_id         BigInt   @default(0) @db.UnsignedBigInt
  ref_type       String?  @default("") @db.VarChar(45)
  parent_id      BigInt   @default(0) @db.UnsignedBigInt
}

model wpa360_links {
  link_id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  link_url         String   @default("") @db.VarChar(255)
  link_name        String   @default("") @db.VarChar(255)
  link_image       String   @default("") @db.VarChar(255)
  link_target      String   @default("") @db.VarChar(25)
  link_description String   @default("") @db.VarChar(255)
  link_visible     String   @default("Y") @db.VarChar(20)
  link_owner       BigInt   @default(1) @db.UnsignedBigInt
  link_rating      Int      @default(0)
  link_updated     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  link_rel         String   @default("") @db.VarChar(255)
  link_notes       String   @db.MediumText
  link_rss         String   @default("") @db.VarChar(255)

  @@index([link_visible], map: "link_visible")
}

model wpa360_options {
  option_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  option_name  String @unique(map: "option_name") @default("")
  option_value String @db.LongText
  autoload     String @default("yes") @db.VarChar(20)

  @@index([autoload], map: "autoload")
}

model wpa360_pmpro_discount_codes {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  code    String   @unique(map: "code") @db.VarChar(32)
  starts  DateTime @db.Date
  expires DateTime @db.Date
  uses    Int

  @@index([expires], map: "expires")
  @@index([starts], map: "starts")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpa360_pmpro_discount_codes_levels {
  code_id           Int                                                  @db.UnsignedInt
  level_id          Int                                                  @db.UnsignedInt
  initial_payment   Decimal                                              @default(0.00000000) @db.Decimal(18, 8)
  billing_amount    Decimal                                              @default(0.00000000) @db.Decimal(18, 8)
  cycle_number      Int                                                  @default(0)
  cycle_period      wpa360_pmpro_discount_codes_levels_cycle_period?     @default(Month)
  billing_limit     Int
  trial_amount      Decimal                                              @default(0.00000000) @db.Decimal(18, 8)
  trial_limit       Int                                                  @default(0)
  expiration_number Int                                                  @db.UnsignedInt
  expiration_period wpa360_pmpro_discount_codes_levels_expiration_period

  @@id([code_id, level_id])
  @@index([initial_payment], map: "initial_payment")
}

model wpa360_pmpro_discount_codes_uses {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  code_id   Int      @db.UnsignedInt
  user_id   Int      @db.UnsignedInt
  order_id  Int      @db.UnsignedInt
  timestamp DateTime @default(now()) @db.Timestamp(0)

  @@index([timestamp], map: "timestamp")
  @@index([user_id], map: "user_id")
}

model wpa360_pmpro_membership_levelmeta {
  meta_id                   Int     @id @default(autoincrement()) @db.UnsignedInt
  pmpro_membership_level_id Int     @db.UnsignedInt
  meta_key                  String  @db.VarChar(255)
  meta_value                String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([pmpro_membership_level_id], map: "pmpro_membership_level_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpa360_pmpro_membership_levels {
  id                Int                                              @id @default(autoincrement()) @db.UnsignedInt
  name              String                                           @db.VarChar(255)
  description       String                                           @db.LongText
  confirmation      String                                           @db.LongText
  initial_payment   Decimal                                          @default(0.00000000) @db.Decimal(18, 8)
  billing_amount    Decimal                                          @default(0.00000000) @db.Decimal(18, 8)
  cycle_number      Int                                              @default(0)
  cycle_period      wpa360_pmpro_membership_levels_cycle_period?     @default(Month)
  billing_limit     Int
  trial_amount      Decimal                                          @default(0.00000000) @db.Decimal(18, 8)
  trial_limit       Int                                              @default(0)
  allow_signups     Int                                              @default(1) @db.TinyInt
  expiration_number Int                                              @db.UnsignedInt
  expiration_period wpa360_pmpro_membership_levels_expiration_period

  @@index([allow_signups], map: "allow_signups")
  @@index([initial_payment], map: "initial_payment")
  @@index([name(length: 191)], map: "name")
}

model wpa360_pmpro_membership_orders {
  id                          Int      @id @default(autoincrement()) @db.UnsignedInt
  code                        String   @unique(map: "code") @db.VarChar(32)
  session_id                  String   @default("") @db.VarChar(64)
  user_id                     Int      @default(0) @db.UnsignedInt
  membership_id               Int      @default(0) @db.UnsignedInt
  paypal_token                String   @default("") @db.VarChar(64)
  billing_name                String   @default("") @db.VarChar(128)
  billing_street              String   @default("") @db.VarChar(128)
  billing_city                String   @default("") @db.VarChar(128)
  billing_state               String   @default("") @db.VarChar(32)
  billing_zip                 String   @default("") @db.VarChar(16)
  billing_country             String   @db.VarChar(128)
  billing_phone               String   @db.VarChar(32)
  subtotal                    String   @default("") @db.VarChar(16)
  tax                         String   @default("") @db.VarChar(16)
  couponamount                String   @default("") @db.VarChar(16)
  checkout_id                 Int      @default(0)
  certificate_id              Int      @default(0)
  certificateamount           String   @default("") @db.VarChar(16)
  total                       String   @default("") @db.VarChar(16)
  payment_type                String   @default("") @db.VarChar(64)
  cardtype                    String   @default("") @db.VarChar(32)
  accountnumber               String   @default("") @db.VarChar(32)
  expirationmonth             String   @default("") @db.Char(2)
  expirationyear              String   @default("") @db.VarChar(4)
  status                      String   @default("") @db.VarChar(32)
  gateway                     String   @db.VarChar(64)
  gateway_environment         String   @db.VarChar(64)
  payment_transaction_id      String   @db.VarChar(64)
  subscription_transaction_id String   @db.VarChar(32)
  timestamp                   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  affiliate_id                String   @db.VarChar(32)
  affiliate_subid             String   @db.VarChar(32)
  notes                       String   @db.Text

  @@index([affiliate_id], map: "affiliate_id")
  @@index([affiliate_subid], map: "affiliate_subid")
  @@index([checkout_id], map: "checkout_id")
  @@index([gateway], map: "gateway")
  @@index([gateway_environment], map: "gateway_environment")
  @@index([membership_id], map: "membership_id")
  @@index([payment_transaction_id], map: "payment_transaction_id")
  @@index([session_id], map: "session_id")
  @@index([status], map: "status")
  @@index([subscription_transaction_id], map: "subscription_transaction_id")
  @@index([timestamp], map: "timestamp")
  @@index([user_id], map: "user_id")
}

model wpa360_pmpro_memberships_categories {
  membership_id Int      @db.UnsignedInt
  category_id   Int      @db.UnsignedInt
  modified      DateTime @default(now()) @db.Timestamp(0)

  @@unique([category_id, membership_id], map: "category_membership")
  @@unique([membership_id, category_id], map: "membership_category")
}

model wpa360_pmpro_memberships_pages {
  membership_id Int      @db.UnsignedInt
  page_id       Int      @db.UnsignedInt
  modified      DateTime @default(now()) @db.Timestamp(0)

  @@unique([page_id, membership_id], map: "category_membership")
  @@unique([membership_id, page_id], map: "membership_page")
}

model wpa360_pmpro_memberships_users {
  id              BigInt                                      @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         Int                                         @db.UnsignedInt
  membership_id   Int                                         @db.UnsignedInt
  code_id         Int                                         @db.UnsignedInt
  initial_payment Decimal                                     @db.Decimal(18, 8)
  billing_amount  Decimal                                     @db.Decimal(18, 8)
  cycle_number    Int
  cycle_period    wpa360_pmpro_memberships_users_cycle_period @default(Month)
  billing_limit   Int
  trial_amount    Decimal                                     @db.Decimal(18, 8)
  trial_limit     Int
  status          String                                      @default("active") @db.VarChar(20)
  startdate       DateTime                                    @db.DateTime(0)
  enddate         DateTime?                                   @db.DateTime(0)
  modified        DateTime                                    @default(now()) @db.Timestamp(0)

  @@index([code_id], map: "code_id")
  @@index([enddate], map: "enddate")
  @@index([membership_id], map: "membership_id")
  @@index([modified], map: "modified")
  @@index([status], map: "status")
  @@index([user_id], map: "user_id")
}

model wpa360_postmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  post_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([post_id], map: "post_id")
}

model wpa360_posts {
  ID                    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  post_author           BigInt   @default(0) @db.UnsignedBigInt
  post_date             DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_date_gmt         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content          String   @db.LongText
  post_title            String   @db.Text
  post_excerpt          String   @db.Text
  post_status           String   @default("publish") @db.VarChar(20)
  comment_status        String   @default("open") @db.VarChar(20)
  ping_status           String   @default("open") @db.VarChar(20)
  post_password         String   @default("") @db.VarChar(255)
  post_name             String   @default("") @db.VarChar(200)
  to_ping               String   @db.Text
  pinged                String   @db.Text
  post_modified         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_modified_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content_filtered String   @db.LongText
  post_parent           BigInt   @default(0) @db.UnsignedBigInt
  guid                  String   @default("") @db.VarChar(255)
  menu_order            Int      @default(0)
  post_type             String   @default("post") @db.VarChar(20)
  post_mime_type        String   @default("") @db.VarChar(100)
  comment_count         BigInt   @default(0)

  @@index([post_author], map: "post_author")
  @@index([post_name(length: 191)], map: "post_name")
  @@index([post_parent], map: "post_parent")
  @@index([post_type, post_status, post_date, ID], map: "type_status_date")
}

model wpa360_revslider_css {
  id       Int     @unique(map: "id") @default(autoincrement())
  handle   String  @db.Text
  settings String? @db.LongText
  hover    String? @db.LongText
  advanced String? @db.LongText
  params   String  @db.LongText
}

model wpa360_revslider_css_bkp {
  id       Int     @unique(map: "id") @default(autoincrement())
  handle   String  @db.Text
  settings String? @db.LongText
  hover    String? @db.LongText
  advanced String? @db.LongText
  params   String  @db.LongText
}

model wpa360_revslider_layer_animations {
  id       Int     @unique(map: "id") @default(autoincrement())
  handle   String  @db.Text
  params   String  @db.Text
  settings String? @db.Text
}

model wpa360_revslider_layer_animations_bkp {
  id       Int     @unique(map: "id") @default(autoincrement())
  handle   String  @db.Text
  params   String  @db.Text
  settings String? @db.Text
}

model wpa360_revslider_navigations {
  id       Int     @unique(map: "id") @default(autoincrement())
  name     String
  handle   String
  type     String
  css      String  @db.LongText
  markup   String  @db.LongText
  settings String? @db.LongText
}

model wpa360_revslider_navigations_bkp {
  id       Int     @unique(map: "id") @default(autoincrement())
  name     String
  handle   String
  type     String
  css      String  @db.LongText
  markup   String  @db.LongText
  settings String? @db.LongText
}

model wpa360_revslider_sliders {
  id       Int     @unique(map: "id") @default(autoincrement())
  title    String  @db.TinyText
  alias    String? @db.TinyText
  params   String  @db.LongText
  settings String? @db.Text
  type     String  @default("")
}

model wpa360_revslider_sliders_bkp {
  id       Int     @unique(map: "id") @default(autoincrement())
  title    String  @db.TinyText
  alias    String? @db.TinyText
  params   String  @db.LongText
  settings String? @db.Text
  type     String  @default("")
}

model wpa360_revslider_slides {
  id          Int    @unique(map: "id") @default(autoincrement())
  slider_id   Int
  slide_order Int
  params      String @db.LongText
  layers      String @db.LongText
  settings    String @db.Text
}

model wpa360_revslider_slides_bkp {
  id          Int    @unique(map: "id") @default(autoincrement())
  slider_id   Int
  slide_order Int
  params      String @db.LongText
  layers      String @db.LongText
  settings    String @db.Text
}

model wpa360_revslider_static_slides {
  id        Int    @unique(map: "id") @default(autoincrement())
  slider_id Int
  params    String @db.LongText
  layers    String @db.LongText
  settings  String @db.Text
}

model wpa360_revslider_static_slides_bkp {
  id        Int    @unique(map: "id") @default(autoincrement())
  slider_id Int
  params    String @db.LongText
  layers    String @db.LongText
  settings  String @db.Text
}

model wpa360_term_relationships {
  object_id        BigInt @default(0) @db.UnsignedBigInt
  term_taxonomy_id BigInt @default(0) @db.UnsignedBigInt
  term_order       Int    @default(0)

  @@id([object_id, term_taxonomy_id])
  @@index([term_taxonomy_id], map: "term_taxonomy_id")
}

model wpa360_term_taxonomy {
  term_taxonomy_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  term_id          BigInt @default(0) @db.UnsignedBigInt
  taxonomy         String @default("") @db.VarChar(32)
  description      String @db.LongText
  parent           BigInt @default(0) @db.UnsignedBigInt
  count            BigInt @default(0)

  @@unique([term_id, taxonomy], map: "term_id_taxonomy")
  @@index([taxonomy], map: "taxonomy")
}

model wpa360_termmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  term_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([term_id], map: "term_id")
}

model wpa360_terms {
  term_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name       String @default("") @db.VarChar(200)
  slug       String @default("") @db.VarChar(200)
  term_group BigInt @default(0)

  @@index([name(length: 191)], map: "name")
  @@index([slug(length: 191)], map: "slug")
}

model wpa360_usermeta {
  umeta_id   BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([user_id], map: "user_id")
}

model wpa360_users {
  ID                  BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_login          String   @default("") @db.VarChar(60)
  user_pass           String   @default("") @db.VarChar(255)
  user_nicename       String   @default("") @db.VarChar(50)
  user_email          String   @default("") @db.VarChar(100)
  user_url            String   @default("") @db.VarChar(100)
  user_registered     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user_activation_key String   @default("") @db.VarChar(255)
  user_status         Int      @default(0)
  display_name        String   @default("") @db.VarChar(250)

  @@index([user_email], map: "user_email")
  @@index([user_login], map: "user_login_key")
  @@index([user_nicename], map: "user_nicename")
}

model wpa360_wc_admin_note_actions {
  action_id     BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  note_id       BigInt  @db.UnsignedBigInt
  name          String  @db.VarChar(255)
  label         String  @db.VarChar(255)
  query         String  @db.LongText
  status        String  @db.VarChar(255)
  is_primary    Boolean @default(false)
  actioned_text String  @db.VarChar(255)

  @@index([note_id], map: "note_id")
}

model wpa360_wc_admin_notes {
  note_id       BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name          String    @db.VarChar(255)
  type          String    @db.VarChar(20)
  locale        String    @db.VarChar(20)
  title         String    @db.LongText
  content       String    @db.LongText
  content_data  String?   @db.LongText
  status        String    @db.VarChar(200)
  source        String    @db.VarChar(200)
  date_created  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_reminder DateTime? @db.DateTime(0)
  is_snoozable  Boolean   @default(false)
  layout        String    @default("") @db.VarChar(20)
  image         String?   @db.VarChar(200)
  is_deleted    Boolean   @default(false)
  icon          String    @default("info") @db.VarChar(200)
}

model wpa360_wc_category_lookup {
  category_tree_id BigInt @db.UnsignedBigInt
  category_id      BigInt @db.UnsignedBigInt

  @@id([category_tree_id, category_id])
}

model wpa360_wc_customer_lookup {
  customer_id      BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id          BigInt?   @unique(map: "user_id") @db.UnsignedBigInt
  username         String    @default("") @db.VarChar(60)
  first_name       String    @db.VarChar(255)
  last_name        String    @db.VarChar(255)
  email            String?   @db.VarChar(100)
  date_last_active DateTime? @db.Timestamp(0)
  date_registered  DateTime? @db.Timestamp(0)
  country          String    @default("") @db.Char(2)
  postcode         String    @default("") @db.VarChar(20)
  city             String    @default("") @db.VarChar(100)
  state            String    @default("") @db.VarChar(100)

  @@index([email], map: "email")
}

model wpa360_wc_download_log {
  download_log_id BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  timestamp       DateTime @db.DateTime(0)
  permission_id   BigInt   @db.UnsignedBigInt
  user_id         BigInt?  @db.UnsignedBigInt
  user_ip_address String?  @default("") @db.VarChar(100)

  @@index([permission_id], map: "permission_id")
  @@index([timestamp], map: "timestamp")
}

model wpa360_wc_order_coupon_lookup {
  order_id        BigInt   @db.UnsignedBigInt
  coupon_id       BigInt
  date_created    DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  discount_amount Float    @default(0)

  @@id([order_id, coupon_id])
  @@index([coupon_id], map: "coupon_id")
  @@index([date_created], map: "date_created")
}

model wpa360_wc_order_product_lookup {
  order_item_id         BigInt   @id @db.UnsignedBigInt
  order_id              BigInt   @db.UnsignedBigInt
  product_id            BigInt   @db.UnsignedBigInt
  variation_id          BigInt   @db.UnsignedBigInt
  customer_id           BigInt?  @db.UnsignedBigInt
  date_created          DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  product_qty           Int
  product_net_revenue   Float    @default(0)
  product_gross_revenue Float    @default(0)
  coupon_amount         Float    @default(0)
  tax_amount            Float    @default(0)
  shipping_amount       Float    @default(0)
  shipping_tax_amount   Float    @default(0)

  @@index([customer_id], map: "customer_id")
  @@index([date_created], map: "date_created")
  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model wpa360_wc_order_stats {
  order_id           BigInt   @id @db.UnsignedBigInt
  parent_id          BigInt   @default(0) @db.UnsignedBigInt
  date_created       DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_created_gmt   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  num_items_sold     Int      @default(0)
  total_sales        Float    @default(0)
  tax_total          Float    @default(0)
  shipping_total     Float    @default(0)
  net_total          Float    @default(0)
  returning_customer Boolean?
  status             String   @db.VarChar(200)
  customer_id        BigInt   @db.UnsignedBigInt

  @@index([customer_id], map: "customer_id")
  @@index([date_created], map: "date_created")
  @@index([status(length: 191)], map: "status")
}

model wpa360_wc_order_tax_lookup {
  order_id     BigInt   @db.UnsignedBigInt
  tax_rate_id  BigInt   @db.UnsignedBigInt
  date_created DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  shipping_tax Float    @default(0)
  order_tax    Float    @default(0)
  total_tax    Float    @default(0)

  @@id([order_id, tax_rate_id])
  @@index([date_created], map: "date_created")
  @@index([tax_rate_id], map: "tax_rate_id")
}

model wpa360_wc_product_meta_lookup {
  product_id     BigInt   @id
  sku            String?  @default("") @db.VarChar(100)
  virtual        Boolean? @default(false)
  downloadable   Boolean? @default(false)
  min_price      Decimal? @db.Decimal(19, 4)
  max_price      Decimal? @db.Decimal(19, 4)
  onsale         Boolean? @default(false)
  stock_quantity Float?
  stock_status   String?  @default("instock") @db.VarChar(100)
  rating_count   BigInt?  @default(0)
  average_rating Decimal? @default(0.00) @db.Decimal(3, 2)
  total_sales    BigInt?  @default(0)
  tax_status     String?  @default("taxable") @db.VarChar(100)
  tax_class      String?  @default("") @db.VarChar(100)

  @@index([downloadable], map: "downloadable")
  @@index([min_price, max_price], map: "min_max_price")
  @@index([onsale], map: "onsale")
  @@index([stock_quantity], map: "stock_quantity")
  @@index([stock_status], map: "stock_status")
  @@index([virtual], map: "virtual")
}

model wpa360_wc_reserved_stock {
  order_id       BigInt
  product_id     BigInt
  stock_quantity Float    @default(0)
  timestamp      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  expires        DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@id([order_id, product_id])
}

model wpa360_wc_tax_rate_classes {
  tax_rate_class_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name              String @default("") @db.VarChar(200)
  slug              String @unique(map: "slug", length: 191) @default("") @db.VarChar(200)
}

model wpa360_wc_webhooks {
  webhook_id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  status            String   @db.VarChar(200)
  name              String   @db.Text
  user_id           BigInt   @db.UnsignedBigInt
  delivery_url      String   @db.Text
  secret            String   @db.Text
  topic             String   @db.VarChar(200)
  date_created      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_created_gmt  DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_modified     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_modified_gmt DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  api_version       Int      @db.SmallInt
  failure_count     Int      @default(0) @db.SmallInt
  pending_delivery  Boolean  @default(false)

  @@index([user_id], map: "user_id")
}

model wpa360_wfblockediplog {
  IP          Bytes  @default(dbgenerated("0x")) @db.Binary(16)
  countryCode String @db.VarChar(2)
  blockCount  Int    @default(0) @db.UnsignedInt
  unixday     Int    @db.UnsignedInt
  blockType   String @default("generic") @db.VarChar(50)

  @@id([IP, unixday, blockType])
}

model wpa360_wfblocks7 {
  id          BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  type        Int     @default(0) @db.UnsignedInt
  IP          Bytes   @default(dbgenerated("0x")) @db.Binary(16)
  blockedTime BigInt
  reason      String  @db.VarChar(255)
  lastAttempt Int?    @default(0) @db.UnsignedInt
  blockedHits Int?    @default(0) @db.UnsignedInt
  expiration  BigInt  @default(0) @db.UnsignedBigInt
  parameters  String? @db.Text

  @@index([IP], map: "IP")
  @@index([expiration], map: "expiration")
  @@index([type], map: "type")
}

model wpa360_wfconfig {
  name     String                   @id @db.VarChar(100)
  val      Bytes?
  autoload wpa360_wfconfig_autoload @default(yes)
}

model wpa360_wfcrawlers {
  IP         Bytes   @default(dbgenerated("0x")) @db.Binary(16)
  patternSig Bytes   @db.Binary(16)
  status     String  @db.Char(8)
  lastUpdate Int     @db.UnsignedInt
  PTR        String? @default("") @db.VarChar(255)

  @@id([IP, patternSig])
}

model wpa360_wffilechanges {
  filenameHash String @id @db.Char(64)
  file         String @db.VarChar(1000)
  md5          String @db.Char(32)
}

model wpa360_wffilemods {
  filenameMD5        Bytes  @id @db.Binary(16)
  filename           String @db.VarChar(1000)
  knownFile          Int    @db.UnsignedTinyInt
  oldMD5             Bytes  @db.Binary(16)
  newMD5             Bytes  @db.Binary(16)
  SHAC               Bytes  @default(dbgenerated("0x")) @db.Binary(32)
  stoppedOnSignature String @default("") @db.VarChar(255)
  stoppedOnPosition  Int    @default(0) @db.UnsignedInt
  isSafeFile         String @default("?") @db.VarChar(1)
}

model wpa360_wfhits {
  id                Int     @id @default(autoincrement()) @db.UnsignedInt
  attackLogTime     Float
  ctime             Float
  IP                Bytes?  @db.Binary(16)
  jsRun             Int?    @default(0) @db.TinyInt
  statusCode        Int     @default(200)
  isGoogle          Int     @db.TinyInt
  userID            Int     @db.UnsignedInt
  newVisit          Int     @db.UnsignedTinyInt
  URL               String? @db.Text
  referer           String? @db.Text
  UA                String? @db.Text
  action            String  @default("") @db.VarChar(64)
  actionDescription String? @db.Text
  actionData        String? @db.Text

  @@index([attackLogTime], map: "attackLogTime")
  @@index([ctime], map: "k1")
  @@index([IP, ctime], map: "k2")
}

model wpa360_wfhoover {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  owner   String? @db.Text
  host    String? @db.Text
  path    String? @db.Text
  hostKey Bytes?  @db.VarBinary(124)

  @@index([hostKey], map: "k2")
}

model wpa360_wfissues {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  time        Int     @db.UnsignedInt
  lastUpdated Int     @db.UnsignedInt
  status      String  @db.VarChar(10)
  type        String  @db.VarChar(20)
  severity    Int     @db.UnsignedTinyInt
  ignoreP     String  @db.Char(32)
  ignoreC     String  @db.Char(32)
  shortMsg    String  @db.VarChar(255)
  longMsg     String? @db.Text
  data        String? @db.Text

  @@index([ignoreC], map: "ignoreC")
  @@index([ignoreP], map: "ignoreP")
  @@index([lastUpdated], map: "lastUpdated")
  @@index([status], map: "status")
}

model wpa360_wfknownfilelist {
  id   Int    @id @default(autoincrement()) @db.UnsignedInt
  path String @db.Text
}

model wpa360_wflivetraffichuman {
  IP         Bytes @default(dbgenerated("0x")) @db.Binary(16)
  identifier Bytes @default(dbgenerated("0x")) @db.Binary(32)
  expiration Int   @db.UnsignedInt

  @@id([IP, identifier])
  @@index([expiration], map: "expiration")
}

model wpa360_wflocs {
  IP          Bytes   @id @default(dbgenerated("0x")) @db.Binary(16)
  ctime       Int     @db.UnsignedInt
  failed      Int     @db.UnsignedTinyInt
  city        String? @default("") @db.VarChar(255)
  region      String? @default("") @db.VarChar(255)
  countryName String? @default("") @db.VarChar(255)
  countryCode String? @default("") @db.Char(2)
  lat         Float?  @default(0.0000000) @db.Float
  lon         Float?  @default(0.0000000) @db.Float
}

model wpa360_wflogins {
  id       Int     @id @default(autoincrement()) @db.UnsignedInt
  hitID    Int?
  ctime    Float
  fail     Int     @db.UnsignedTinyInt
  action   String  @db.VarChar(40)
  username String  @db.VarChar(255)
  userID   Int     @db.UnsignedInt
  IP       Bytes?  @db.Binary(16)
  UA       String? @db.Text

  @@index([hitID], map: "hitID")
  @@index([IP, fail], map: "k1")
}

model wpa360_wfls_2fa_secrets {
  id       Int                          @id @default(autoincrement()) @db.UnsignedInt
  user_id  BigInt                       @db.UnsignedBigInt
  secret   Bytes                        @db.TinyBlob
  recovery Bytes                        @db.Blob
  ctime    Int                          @db.UnsignedInt
  vtime    Int                          @db.UnsignedInt
  mode     wpa360_wfls_2fa_secrets_mode @default(authenticator)

  @@index([user_id], map: "user_id")
}

model wpa360_wfls_settings {
  name     String                        @id @default("")
  value    Bytes?
  autoload wpa360_wfls_settings_autoload @default(yes)
}

model wpa360_wfnotifications {
  id       String @id @default("") @db.VarChar(32)
  new      Int    @default(1) @db.UnsignedTinyInt
  category String @db.VarChar(255)
  priority Int    @default(1000)
  ctime    Int    @db.UnsignedInt
  html     String @db.Text
  links    String @db.Text
}

model wpa360_wfpendingissues {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  time        Int     @db.UnsignedInt
  lastUpdated Int     @db.UnsignedInt
  status      String  @db.VarChar(10)
  type        String  @db.VarChar(20)
  severity    Int     @db.UnsignedTinyInt
  ignoreP     String  @db.Char(32)
  ignoreC     String  @db.Char(32)
  shortMsg    String  @db.VarChar(255)
  longMsg     String? @db.Text
  data        String? @db.Text

  @@index([ignoreC], map: "ignoreC")
  @@index([ignoreP], map: "ignoreP")
  @@index([lastUpdated], map: "lastUpdated")
  @@index([status], map: "status")
}

model wpa360_wfreversecache {
  IP         Bytes  @id @default(dbgenerated("0x")) @db.Binary(16)
  host       String @db.VarChar(255)
  lastUpdate Int    @db.UnsignedInt
}

model wpa360_wfsnipcache {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  IP         String   @default("") @db.VarChar(45)
  expiration DateTime @default(now()) @db.Timestamp(0)
  body       String   @default("") @db.VarChar(255)
  count      Int      @default(0) @db.UnsignedInt
  type       Int      @default(0) @db.UnsignedInt

  @@index([IP], map: "IP")
  @@index([expiration], map: "expiration")
  @@index([type], map: "type")
}

model wpa360_wfstatus {
  id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  ctime Float
  level Int    @db.UnsignedTinyInt
  type  String @db.Char(5)
  msg   String @db.VarChar(1000)

  @@index([ctime], map: "k1")
  @@index([type], map: "k2")
}

model wpa360_wftrafficrates {
  eMin    Int                           @db.UnsignedInt
  IP      Bytes                         @default(dbgenerated("0x")) @db.Binary(16)
  hitType wpa360_wftrafficrates_hitType @default(hit)
  hits    Int                           @db.UnsignedInt

  @@id([eMin, IP, hitType])
}

model wpa360_woocommerce_api_keys {
  key_id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         BigInt    @db.UnsignedBigInt
  description     String?   @db.VarChar(200)
  permissions     String    @db.VarChar(10)
  consumer_key    String    @db.Char(64)
  consumer_secret String    @db.Char(43)
  nonces          String?   @db.LongText
  truncated_key   String    @db.Char(7)
  last_access     DateTime? @db.DateTime(0)

  @@index([consumer_key], map: "consumer_key")
  @@index([consumer_secret], map: "consumer_secret")
}

model wpa360_woocommerce_attribute_taxonomies {
  attribute_id      BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  attribute_name    String  @db.VarChar(200)
  attribute_label   String? @db.VarChar(200)
  attribute_type    String  @db.VarChar(20)
  attribute_orderby String  @db.VarChar(20)
  attribute_public  Int     @default(1)

  @@index([attribute_name(length: 20)], map: "attribute_name")
}

model wpa360_woocommerce_downloadable_product_permissions {
  permission_id       BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  download_id         String    @db.VarChar(36)
  product_id          BigInt    @db.UnsignedBigInt
  order_id            BigInt    @default(0) @db.UnsignedBigInt
  order_key           String    @db.VarChar(200)
  user_email          String    @db.VarChar(200)
  user_id             BigInt?   @db.UnsignedBigInt
  downloads_remaining String?   @db.VarChar(9)
  access_granted      DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  access_expires      DateTime? @db.DateTime(0)
  download_count      BigInt    @default(0) @db.UnsignedBigInt

  @@index([product_id, order_id, order_key(length: 16), download_id], map: "download_order_key_product")
  @@index([download_id, order_id, product_id], map: "download_order_product")
  @@index([order_id], map: "order_id")
  @@index([user_id, order_id, downloads_remaining, access_expires], map: "user_order_remaining_expires")
}

model wpa360_woocommerce_log {
  log_id    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  timestamp DateTime @db.DateTime(0)
  level     Int      @db.SmallInt
  source    String   @db.VarChar(200)
  message   String   @db.LongText
  context   String?  @db.LongText

  @@index([level], map: "level")
}

model wpa360_woocommerce_order_itemmeta {
  meta_id       BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  order_item_id BigInt  @db.UnsignedBigInt
  meta_key      String? @db.VarChar(255)
  meta_value    String? @db.LongText

  @@index([meta_key(length: 32)], map: "meta_key")
  @@index([order_item_id], map: "order_item_id")
}

model wpa360_woocommerce_order_items {
  order_item_id   BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  order_item_name String @db.Text
  order_item_type String @default("") @db.VarChar(200)
  order_id        BigInt @db.UnsignedBigInt

  @@index([order_id], map: "order_id")
}

model wpa360_woocommerce_payment_tokenmeta {
  meta_id          BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  payment_token_id BigInt  @db.UnsignedBigInt
  meta_key         String? @db.VarChar(255)
  meta_value       String? @db.LongText

  @@index([meta_key(length: 32)], map: "meta_key")
  @@index([payment_token_id], map: "payment_token_id")
}

model wpa360_woocommerce_payment_tokens {
  token_id   BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  gateway_id String  @db.VarChar(200)
  token      String  @db.Text
  user_id    BigInt  @default(0) @db.UnsignedBigInt
  type       String  @db.VarChar(200)
  is_default Boolean @default(false)

  @@index([user_id], map: "user_id")
}

model wpa360_woocommerce_sessions {
  session_id     BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  session_key    String @unique(map: "session_key") @db.Char(32)
  session_value  String @db.LongText
  session_expiry BigInt @db.UnsignedBigInt
}

model wpa360_woocommerce_shipping_zone_locations {
  location_id   BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  zone_id       BigInt @db.UnsignedBigInt
  location_code String @db.VarChar(200)
  location_type String @db.VarChar(40)

  @@index([location_id], map: "location_id")
  @@index([location_type(length: 10), location_code(length: 20)], map: "location_type_code")
}

model wpa360_woocommerce_shipping_zone_methods {
  zone_id      BigInt  @db.UnsignedBigInt
  instance_id  BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  method_id    String  @db.VarChar(200)
  method_order BigInt  @db.UnsignedBigInt
  is_enabled   Boolean @default(true)
}

model wpa360_woocommerce_shipping_zones {
  zone_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  zone_name  String @db.VarChar(200)
  zone_order BigInt @db.UnsignedBigInt
}

model wpa360_woocommerce_tax_rate_locations {
  location_id   BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  location_code String @db.VarChar(200)
  tax_rate_id   BigInt @db.UnsignedBigInt
  location_type String @db.VarChar(40)

  @@index([location_type(length: 10), location_code(length: 20)], map: "location_type_code")
  @@index([tax_rate_id], map: "tax_rate_id")
}

model wpa360_woocommerce_tax_rates {
  tax_rate_id       BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  tax_rate_country  String @default("") @db.VarChar(2)
  tax_rate_state    String @default("") @db.VarChar(200)
  tax_rate          String @default("") @db.VarChar(8)
  tax_rate_name     String @default("") @db.VarChar(200)
  tax_rate_priority BigInt @db.UnsignedBigInt
  tax_rate_compound Int    @default(0)
  tax_rate_shipping Int    @default(1)
  tax_rate_order    BigInt @db.UnsignedBigInt
  tax_rate_class    String @default("") @db.VarChar(200)

  @@index([tax_rate_class(length: 10)], map: "tax_rate_class")
  @@index([tax_rate_country], map: "tax_rate_country")
  @@index([tax_rate_priority], map: "tax_rate_priority")
  @@index([tax_rate_state(length: 2)], map: "tax_rate_state")
}

model wpa360_wpfm_backup {
  id          Int     @id @default(autoincrement())
  backup_name String? @db.Text
  backup_date String? @db.Text
}

model wpa360_wpforms_logs {
  id        BigInt   @id @default(autoincrement())
  title     String   @db.VarChar(255)
  message   String   @db.LongText
  types     String   @db.VarChar(255)
  create_at DateTime @db.DateTime(0)
  form_id   BigInt?
  entry_id  BigInt?
  user_id   BigInt?
}

model wpa360_wpforms_payment_meta {
  id         BigInt  @id @default(autoincrement())
  payment_id BigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([meta_value(length: 191)], map: "meta_value")
  @@index([payment_id], map: "payment_id")
}

model wpa360_wpforms_payments {
  id                  BigInt   @id @default(autoincrement())
  form_id             BigInt
  status              String   @default("") @db.VarChar(10)
  subtotal_amount     Decimal  @default(0.00000000) @db.Decimal(26, 8)
  discount_amount     Decimal  @default(0.00000000) @db.Decimal(26, 8)
  total_amount        Decimal  @default(0.00000000) @db.Decimal(26, 8)
  currency            String   @default("") @db.VarChar(3)
  entry_id            BigInt   @default(0)
  gateway             String   @default("") @db.VarChar(20)
  type                String   @default("") @db.VarChar(12)
  mode                String   @default("") @db.VarChar(4)
  transaction_id      String   @default("") @db.VarChar(40)
  customer_id         String   @default("") @db.VarChar(40)
  subscription_id     String   @default("") @db.VarChar(40)
  subscription_status String   @default("") @db.VarChar(10)
  title               String   @default("") @db.VarChar(255)
  date_created_gmt    DateTime @db.DateTime(0)
  date_updated_gmt    DateTime @db.DateTime(0)
  is_published        Boolean  @default(true)

  @@index([customer_id(length: 32)], map: "customer_id")
  @@index([form_id], map: "form_id")
  @@index([status(length: 8)], map: "status")
  @@index([subscription_id(length: 32)], map: "subscription_id")
  @@index([subscription_status(length: 8)], map: "subscription_status")
  @@index([title(length: 64)], map: "title")
  @@index([total_amount], map: "total_amount")
  @@index([transaction_id(length: 32)], map: "transaction_id")
  @@index([type(length: 8)], map: "type")
}

model wpa360_wpforms_tasks_meta {
  id     BigInt   @id @default(autoincrement())
  action String   @db.VarChar(255)
  data   String   @db.LongText
  date   DateTime @db.DateTime(0)
}

model wpa360_wpmailsmtp_debug_events {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  content    String?  @db.Text
  initiator  String?  @db.Text
  event_type Int      @default(0) @db.UnsignedTinyInt
  created_at DateTime @default(now()) @db.Timestamp(0)
}

model wpa360_wpmailsmtp_tasks_meta {
  id     BigInt   @id @default(autoincrement())
  action String   @db.VarChar(255)
  data   String   @db.LongText
  date   DateTime @db.DateTime(0)
}

model wpa360_yoast_indexable {
  id                             Int       @id @default(autoincrement()) @db.UnsignedInt
  permalink                      String?   @db.LongText
  permalink_hash                 String?   @db.VarChar(40)
  object_id                      BigInt?
  object_type                    String    @db.VarChar(32)
  object_sub_type                String?   @db.VarChar(32)
  author_id                      BigInt?
  post_parent                    BigInt?
  title                          String?   @db.Text
  description                    String?   @db.MediumText
  breadcrumb_title               String?   @db.Text
  post_status                    String?   @db.VarChar(20)
  is_public                      Boolean?
  is_protected                   Boolean?  @default(false)
  has_public_posts               Boolean?
  number_of_pages                Int?      @db.UnsignedInt
  canonical                      String?   @db.LongText
  primary_focus_keyword          String?
  primary_focus_keyword_score    Int?
  readability_score              Int?
  is_cornerstone                 Boolean?  @default(false)
  is_robots_noindex              Boolean?  @default(false)
  is_robots_nofollow             Boolean?  @default(false)
  is_robots_noarchive            Boolean?  @default(false)
  is_robots_noimageindex         Boolean?  @default(false)
  is_robots_nosnippet            Boolean?  @default(false)
  twitter_title                  String?   @db.Text
  twitter_image                  String?   @db.LongText
  twitter_description            String?   @db.LongText
  twitter_image_id               String?
  twitter_image_source           String?   @db.Text
  open_graph_title               String?   @db.Text
  open_graph_description         String?   @db.LongText
  open_graph_image               String?   @db.LongText
  open_graph_image_id            String?
  open_graph_image_source        String?   @db.Text
  open_graph_image_meta          String?   @db.MediumText
  link_count                     Int?
  incoming_link_count            Int?
  prominent_words_version        Int?      @db.UnsignedInt
  created_at                     DateTime? @db.DateTime(0)
  updated_at                     DateTime  @default(now()) @db.Timestamp(0)
  blog_id                        BigInt    @default(1)
  language                       String?   @db.VarChar(32)
  region                         String?   @db.VarChar(32)
  schema_page_type               String?   @db.VarChar(64)
  schema_article_type            String?   @db.VarChar(64)
  has_ancestors                  Boolean?  @default(false)
  estimated_reading_time_minutes Int?
  version                        Int?      @default(1)
  object_last_modified           DateTime? @db.DateTime(0)
  object_published_at            DateTime? @db.DateTime(0)
  inclusive_language_score       Int?

  @@index([object_id, object_type], map: "object_id_and_type")
  @@index([object_type, object_sub_type], map: "object_type_and_sub_type")
  @@index([permalink_hash, object_type], map: "permalink_hash_and_object_type")
  @@index([prominent_words_version, object_type, object_sub_type, post_status], map: "prominent_words")
  @@index([object_published_at, is_robots_noindex, object_type, object_sub_type], map: "published_sitemap_index")
  @@index([post_parent, object_type, post_status, object_id], map: "subpages")
}

model wpa360_yoast_indexable_hierarchy {
  indexable_id Int    @default(0) @db.UnsignedInt
  ancestor_id  Int    @default(0) @db.UnsignedInt
  depth        Int?   @db.UnsignedInt
  blog_id      BigInt @default(1)

  @@id([indexable_id, ancestor_id])
  @@index([ancestor_id], map: "ancestor_id")
  @@index([depth], map: "depth")
  @@index([indexable_id], map: "indexable_id")
}

model wpa360_yoast_migrations {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  version String? @unique(map: "wpxw_yoast_migrations_version")
}

model wpa360_yoast_primary_term {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  post_id    BigInt?
  term_id    BigInt?
  taxonomy   String    @db.VarChar(32)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  blog_id    BigInt    @default(1)

  @@index([post_id, taxonomy], map: "post_taxonomy")
  @@index([post_id, term_id], map: "post_term")
}

model wpa360_yoast_seo_links {
  id                  BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  url                 String  @db.VarChar(255)
  post_id             BigInt  @db.UnsignedBigInt
  target_post_id      BigInt  @db.UnsignedBigInt
  type                String  @db.VarChar(8)
  indexable_id        Int?    @db.UnsignedInt
  target_indexable_id Int?    @db.UnsignedInt
  height              Int?    @db.UnsignedInt
  width               Int?    @db.UnsignedInt
  size                Int?    @db.UnsignedInt
  language            String? @db.VarChar(32)
  region              String? @db.VarChar(32)

  @@index([indexable_id, type], map: "indexable_link_direction")
  @@index([post_id, type], map: "link_direction")
}

model wpa360_yoast_seo_meta {
  object_id           BigInt @unique(map: "object_id") @db.UnsignedBigInt
  internal_link_count Int?   @db.UnsignedInt
  incoming_link_count Int?   @db.UnsignedInt
}

model wpgenia_commentmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  comment_id BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([comment_id], map: "comment_id")
  @@index([meta_key(length: 191)], map: "meta_key")
}

model wpgenia_comments {
  comment_ID           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  comment_post_ID      BigInt   @default(0) @db.UnsignedBigInt
  comment_author       String   @db.TinyText
  comment_author_email String   @default("") @db.VarChar(100)
  comment_author_url   String   @default("") @db.VarChar(200)
  comment_author_IP    String   @default("") @db.VarChar(100)
  comment_date         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_date_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_content      String   @db.Text
  comment_karma        Int      @default(0)
  comment_approved     String   @default("1") @db.VarChar(20)
  comment_agent        String   @default("") @db.VarChar(255)
  comment_type         String   @default("comment") @db.VarChar(20)
  comment_parent       BigInt   @default(0) @db.UnsignedBigInt
  user_id              BigInt   @default(0) @db.UnsignedBigInt

  @@index([comment_approved, comment_date_gmt], map: "comment_approved_date_gmt")
  @@index([comment_author_email(length: 10)], map: "comment_author_email")
  @@index([comment_date_gmt], map: "comment_date_gmt")
  @@index([comment_parent], map: "comment_parent")
  @@index([comment_post_ID], map: "comment_post_ID")
}

model wpgenia_e_events {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  event_data String?  @db.Text
  created_at DateTime @db.DateTime(0)

  @@index([created_at], map: "created_at_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpgenia_e_notes {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  route_url           String?   @db.Text
  route_title         String?   @db.VarChar(255)
  route_post_id       BigInt?   @db.UnsignedBigInt
  post_id             BigInt?   @db.UnsignedBigInt
  element_id          String?   @db.VarChar(60)
  parent_id           BigInt    @default(0) @db.UnsignedBigInt
  author_id           BigInt?   @db.UnsignedBigInt
  author_display_name String?   @db.VarChar(250)
  status              String    @default("publish") @db.VarChar(20)
  position            String?   @db.Text
  content             String?   @db.LongText
  is_resolved         Boolean   @default(false)
  is_public           Boolean   @default(true)
  last_activity_at    DateTime? @db.DateTime(0)
  created_at          DateTime  @db.DateTime(0)
  updated_at          DateTime  @db.DateTime(0)

  @@index([author_id], map: "author_id_index")
  @@index([created_at], map: "created_at_index")
  @@index([element_id], map: "element_id_index")
  @@index([is_public], map: "is_public_index")
  @@index([is_resolved], map: "is_resolved_index")
  @@index([last_activity_at], map: "last_activity_at_index")
  @@index([parent_id], map: "parent_id_index")
  @@index([post_id], map: "post_id_index")
  @@index([route_url(length: 191)], map: "route_url_index")
  @@index([status], map: "status_index")
  @@index([updated_at], map: "updated_at_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpgenia_e_notes_users_relations {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  type       String   @db.VarChar(60)
  note_id    BigInt   @db.UnsignedBigInt
  user_id    BigInt   @db.UnsignedBigInt
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@index([note_id], map: "note_id_index")
  @@index([type], map: "type_index")
  @@index([user_id], map: "user_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpgenia_e_submissions {
  id                      BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  type                    String?  @db.VarChar(60)
  hash_id                 String   @unique(map: "hash_id_unique_index") @db.VarChar(60)
  main_meta_id            BigInt   @db.UnsignedBigInt
  post_id                 BigInt   @db.UnsignedBigInt
  referer                 String   @db.VarChar(500)
  referer_title           String?  @db.VarChar(300)
  element_id              String   @db.VarChar(20)
  form_name               String   @db.VarChar(60)
  campaign_id             BigInt   @db.UnsignedBigInt
  user_id                 BigInt?  @db.UnsignedBigInt
  user_ip                 String   @db.VarChar(46)
  user_agent              String   @db.Text
  actions_count           Int?     @default(0)
  actions_succeeded_count Int?     @default(0)
  status                  String   @db.VarChar(20)
  is_read                 Boolean  @default(false)
  meta                    String?  @db.Text
  created_at_gmt          DateTime @db.DateTime(0)
  updated_at_gmt          DateTime @db.DateTime(0)
  created_at              DateTime @db.DateTime(0)
  updated_at              DateTime @db.DateTime(0)

  @@index([campaign_id], map: "campaign_id_index")
  @@index([created_at_gmt], map: "created_at_gmt_index")
  @@index([created_at], map: "created_at_index")
  @@index([element_id], map: "element_id_index")
  @@index([hash_id], map: "hash_id_index")
  @@index([is_read], map: "is_read_index")
  @@index([main_meta_id], map: "main_meta_id_index")
  @@index([post_id], map: "post_id_index")
  @@index([referer(length: 191)], map: "referer_index")
  @@index([referer_title(length: 191)], map: "referer_title_index")
  @@index([status], map: "status_index")
  @@index([type], map: "type_index")
  @@index([updated_at_gmt], map: "updated_at_gmt_index")
  @@index([updated_at], map: "updated_at_index")
  @@index([user_id], map: "user_id_index")
  @@index([user_ip], map: "user_ip_index")
}

model wpgenia_e_submissions_actions_log {
  id             BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  submission_id  BigInt   @db.UnsignedBigInt
  action_name    String   @db.VarChar(60)
  action_label   String?  @db.VarChar(60)
  status         String   @db.VarChar(20)
  log            String?  @db.Text
  created_at_gmt DateTime @db.DateTime(0)
  updated_at_gmt DateTime @db.DateTime(0)
  created_at     DateTime @db.DateTime(0)
  updated_at     DateTime @db.DateTime(0)

  @@index([action_name], map: "action_name_index")
  @@index([created_at_gmt], map: "created_at_gmt_index")
  @@index([created_at], map: "created_at_index")
  @@index([status], map: "status_index")
  @@index([submission_id], map: "submission_id_index")
  @@index([updated_at_gmt], map: "updated_at_gmt_index")
  @@index([updated_at], map: "updated_at_index")
}

model wpgenia_e_submissions_values {
  id            BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  submission_id BigInt  @default(0) @db.UnsignedBigInt
  key           String? @db.VarChar(60)
  value         String? @db.LongText

  @@index([key], map: "key_index")
  @@index([submission_id], map: "submission_id_index")
}

model wpgenia_jetpack_sync_queue {
  ID            BigInt   @id @default(autoincrement())
  queue_id      String   @db.VarChar(50)
  event_id      String   @db.VarChar(100)
  event_payload String   @db.LongText
  timestamp     DateTime @default(now()) @db.Timestamp(0)

  @@index([event_id], map: "event_id")
  @@index([queue_id], map: "queue_id")
  @@index([queue_id, event_id], map: "queue_id_event_id")
  @@index([timestamp], map: "timestamp")
}

model wpgenia_links {
  link_id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  link_url         String   @default("") @db.VarChar(255)
  link_name        String   @default("") @db.VarChar(255)
  link_image       String   @default("") @db.VarChar(255)
  link_target      String   @default("") @db.VarChar(25)
  link_description String   @default("") @db.VarChar(255)
  link_visible     String   @default("Y") @db.VarChar(20)
  link_owner       BigInt   @default(1) @db.UnsignedBigInt
  link_rating      Int      @default(0)
  link_updated     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  link_rel         String   @default("") @db.VarChar(255)
  link_notes       String   @db.MediumText
  link_rss         String   @default("") @db.VarChar(255)

  @@index([link_visible], map: "link_visible")
}

model wpgenia_options {
  option_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  option_name  String @unique(map: "option_name") @default("")
  option_value String @db.LongText
  autoload     String @default("yes") @db.VarChar(20)

  @@index([autoload], map: "autoload")
}

model wpgenia_postmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  post_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([post_id], map: "post_id")
}

model wpgenia_posts {
  ID                    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  post_author           BigInt   @default(0) @db.UnsignedBigInt
  post_date             DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_date_gmt         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content          String   @db.LongText
  post_title            String   @db.Text
  post_excerpt          String   @db.Text
  post_status           String   @default("publish") @db.VarChar(20)
  comment_status        String   @default("open") @db.VarChar(20)
  ping_status           String   @default("open") @db.VarChar(20)
  post_password         String   @default("") @db.VarChar(255)
  post_name             String   @default("") @db.VarChar(200)
  to_ping               String   @db.Text
  pinged                String   @db.Text
  post_modified         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_modified_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content_filtered String   @db.LongText
  post_parent           BigInt   @default(0) @db.UnsignedBigInt
  guid                  String   @default("") @db.VarChar(255)
  menu_order            Int      @default(0)
  post_type             String   @default("post") @db.VarChar(20)
  post_mime_type        String   @default("") @db.VarChar(100)
  comment_count         BigInt   @default(0)

  @@index([post_author], map: "post_author")
  @@index([post_name(length: 191)], map: "post_name")
  @@index([post_parent], map: "post_parent")
  @@index([post_type, post_status, post_date, ID], map: "type_status_date")
}

model wpgenia_term_relationships {
  object_id        BigInt @default(0) @db.UnsignedBigInt
  term_taxonomy_id BigInt @default(0) @db.UnsignedBigInt
  term_order       Int    @default(0)

  @@id([object_id, term_taxonomy_id])
  @@index([term_taxonomy_id], map: "term_taxonomy_id")
}

model wpgenia_term_taxonomy {
  term_taxonomy_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  term_id          BigInt @default(0) @db.UnsignedBigInt
  taxonomy         String @default("") @db.VarChar(32)
  description      String @db.LongText
  parent           BigInt @default(0) @db.UnsignedBigInt
  count            BigInt @default(0)

  @@unique([term_id, taxonomy], map: "term_id_taxonomy")
  @@index([taxonomy], map: "taxonomy")
}

model wpgenia_termmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  term_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([term_id], map: "term_id")
}

model wpgenia_terms {
  term_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name       String @default("") @db.VarChar(200)
  slug       String @default("") @db.VarChar(200)
  term_group BigInt @default(0)

  @@index([name(length: 191)], map: "name")
  @@index([slug(length: 191)], map: "slug")
}

model wpgenia_usermeta {
  umeta_id   BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([user_id], map: "user_id")
}

model wpgenia_users {
  ID                  BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_login          String   @default("") @db.VarChar(60)
  user_pass           String   @default("") @db.VarChar(255)
  user_nicename       String   @default("") @db.VarChar(50)
  user_email          String   @default("") @db.VarChar(100)
  user_url            String   @default("") @db.VarChar(100)
  user_registered     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user_activation_key String   @default("") @db.VarChar(255)
  user_status         Int      @default(0)
  display_name        String   @default("") @db.VarChar(250)

  @@index([user_email], map: "user_email")
  @@index([user_login], map: "user_login_key")
  @@index([user_nicename], map: "user_nicename")
}

model wpgenia_wpc_accesslocks {
  accesslock_ID   BigInt   @id @default(autoincrement())
  user_id         BigInt
  accesslock_date DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  release_date    DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  accesslock_IP   String   @default("") @db.VarChar(100)
  reason          String?  @db.VarChar(200)
  unlocked        Int      @default(0) @db.SmallInt
}

model wpgenia_wpc_login_fails {
  login_attempt_ID   BigInt   @id @default(autoincrement())
  user_id            BigInt
  login_attempt_date DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  login_attempt_IP   String   @default("") @db.VarChar(100)
  failed_user        String   @default("") @db.VarChar(200)
  failed_pass        String   @default("") @db.VarChar(200)
  reason             String?  @db.VarChar(200)
}

model wpscoolter_actionscheduler_actions {
  action_id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  hook                 String
  status               String    @db.VarChar(20)
  scheduled_date_gmt   DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  scheduled_date_local DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  priority             Int       @default(10) @db.UnsignedTinyInt
  args                 String?
  schedule             String?   @db.LongText
  group_id             BigInt    @default(0) @db.UnsignedBigInt
  attempts             Int       @default(0)
  last_attempt_gmt     DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  last_attempt_local   DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  claim_id             BigInt    @default(0) @db.UnsignedBigInt
  extended_args        String?   @db.VarChar(8000)

  @@index([args], map: "args")
  @@index([claim_id, status, scheduled_date_gmt], map: "claim_id_status_scheduled_date_gmt")
  @@index([group_id], map: "group_id")
  @@index([hook(length: 163), status, scheduled_date_gmt], map: "hook_status_scheduled_date_gmt")
  @@index([last_attempt_gmt], map: "last_attempt_gmt")
  @@index([scheduled_date_gmt], map: "scheduled_date_gmt")
  @@index([status, scheduled_date_gmt], map: "status_scheduled_date_gmt")
}

model wpscoolter_actionscheduler_claims {
  claim_id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  date_created_gmt DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@index([date_created_gmt], map: "date_created_gmt")
}

model wpscoolter_actionscheduler_groups {
  group_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  slug     String @db.VarChar(255)

  @@index([slug(length: 191)], map: "slug")
}

model wpscoolter_actionscheduler_logs {
  log_id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  action_id      BigInt    @db.UnsignedBigInt
  message        String    @db.Text
  log_date_gmt   DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  log_date_local DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@index([action_id], map: "action_id")
  @@index([log_date_gmt], map: "log_date_gmt")
}

model wpscoolter_commentmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  comment_id BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([comment_id], map: "comment_id")
  @@index([meta_key(length: 191)], map: "meta_key")
}

model wpscoolter_comments {
  comment_ID           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  comment_post_ID      BigInt   @default(0) @db.UnsignedBigInt
  comment_author       String   @db.TinyText
  comment_author_email String   @default("") @db.VarChar(100)
  comment_author_url   String   @default("") @db.VarChar(200)
  comment_author_IP    String   @default("") @db.VarChar(100)
  comment_date         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_date_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_content      String   @db.Text
  comment_karma        Int      @default(0)
  comment_approved     String   @default("1") @db.VarChar(20)
  comment_agent        String   @default("") @db.VarChar(255)
  comment_type         String   @default("comment") @db.VarChar(20)
  comment_parent       BigInt   @default(0) @db.UnsignedBigInt
  user_id              BigInt   @default(0) @db.UnsignedBigInt

  @@index([comment_approved, comment_date_gmt], map: "comment_approved_date_gmt")
  @@index([comment_author_email(length: 10)], map: "comment_author_email")
  @@index([comment_date_gmt], map: "comment_date_gmt")
  @@index([comment_parent], map: "comment_parent")
  @@index([comment_post_ID], map: "comment_post_ID")
  @@index([comment_type], map: "woo_idx_comment_type")
}

model wpscoolter_e_events {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  event_data String?  @db.Text
  created_at DateTime @db.DateTime(0)

  @@index([created_at], map: "created_at_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpscoolter_e_notes {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  route_url           String?   @db.Text
  route_title         String?   @db.VarChar(255)
  route_post_id       BigInt?   @db.UnsignedBigInt
  post_id             BigInt?   @db.UnsignedBigInt
  element_id          String?   @db.VarChar(60)
  parent_id           BigInt    @default(0) @db.UnsignedBigInt
  author_id           BigInt?   @db.UnsignedBigInt
  author_display_name String?   @db.VarChar(250)
  status              String    @default("publish") @db.VarChar(20)
  position            String?   @db.Text
  content             String?   @db.LongText
  is_resolved         Boolean   @default(false)
  is_public           Boolean   @default(true)
  last_activity_at    DateTime? @db.DateTime(0)
  created_at          DateTime  @db.DateTime(0)
  updated_at          DateTime  @db.DateTime(0)

  @@index([author_id], map: "author_id_index")
  @@index([created_at], map: "created_at_index")
  @@index([element_id], map: "element_id_index")
  @@index([is_public], map: "is_public_index")
  @@index([is_resolved], map: "is_resolved_index")
  @@index([last_activity_at], map: "last_activity_at_index")
  @@index([parent_id], map: "parent_id_index")
  @@index([post_id], map: "post_id_index")
  @@index([route_url(length: 191)], map: "route_url_index")
  @@index([status], map: "status_index")
  @@index([updated_at], map: "updated_at_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpscoolter_e_notes_users_relations {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  type       String   @db.VarChar(60)
  note_id    BigInt   @db.UnsignedBigInt
  user_id    BigInt   @db.UnsignedBigInt
  created_at DateTime @db.DateTime(0)
  updated_at DateTime @db.DateTime(0)

  @@index([note_id], map: "note_id_index")
  @@index([type], map: "type_index")
  @@index([user_id], map: "user_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpscoolter_e_submissions {
  id                      BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  type                    String?  @db.VarChar(60)
  hash_id                 String   @unique(map: "hash_id_unique_index") @db.VarChar(60)
  main_meta_id            BigInt   @db.UnsignedBigInt
  post_id                 BigInt   @db.UnsignedBigInt
  referer                 String   @db.VarChar(500)
  referer_title           String?  @db.VarChar(300)
  element_id              String   @db.VarChar(20)
  form_name               String   @db.VarChar(60)
  campaign_id             BigInt   @db.UnsignedBigInt
  user_id                 BigInt?  @db.UnsignedBigInt
  user_ip                 String   @db.VarChar(46)
  user_agent              String   @db.Text
  actions_count           Int?     @default(0)
  actions_succeeded_count Int?     @default(0)
  status                  String   @db.VarChar(20)
  is_read                 Boolean  @default(false)
  meta                    String?  @db.Text
  created_at_gmt          DateTime @db.DateTime(0)
  updated_at_gmt          DateTime @db.DateTime(0)
  created_at              DateTime @db.DateTime(0)
  updated_at              DateTime @db.DateTime(0)

  @@index([campaign_id], map: "campaign_id_index")
  @@index([created_at_gmt], map: "created_at_gmt_index")
  @@index([created_at], map: "created_at_index")
  @@index([element_id], map: "element_id_index")
  @@index([hash_id], map: "hash_id_index")
  @@index([is_read], map: "is_read_index")
  @@index([main_meta_id], map: "main_meta_id_index")
  @@index([post_id], map: "post_id_index")
  @@index([referer(length: 191)], map: "referer_index")
  @@index([referer_title(length: 191)], map: "referer_title_index")
  @@index([status], map: "status_index")
  @@index([type], map: "type_index")
  @@index([updated_at_gmt], map: "updated_at_gmt_index")
  @@index([updated_at], map: "updated_at_index")
  @@index([user_id], map: "user_id_index")
  @@index([user_ip], map: "user_ip_index")
}

model wpscoolter_e_submissions_actions_log {
  id             BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  submission_id  BigInt   @db.UnsignedBigInt
  action_name    String   @db.VarChar(60)
  action_label   String?  @db.VarChar(60)
  status         String   @db.VarChar(20)
  log            String?  @db.Text
  created_at_gmt DateTime @db.DateTime(0)
  updated_at_gmt DateTime @db.DateTime(0)
  created_at     DateTime @db.DateTime(0)
  updated_at     DateTime @db.DateTime(0)

  @@index([action_name], map: "action_name_index")
  @@index([created_at_gmt], map: "created_at_gmt_index")
  @@index([created_at], map: "created_at_index")
  @@index([status], map: "status_index")
  @@index([submission_id], map: "submission_id_index")
  @@index([updated_at_gmt], map: "updated_at_gmt_index")
  @@index([updated_at], map: "updated_at_index")
}

model wpscoolter_e_submissions_values {
  id            BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  submission_id BigInt  @default(0) @db.UnsignedBigInt
  key           String? @db.VarChar(60)
  value         String? @db.LongText

  @@index([key], map: "key_index")
  @@index([submission_id], map: "submission_id_index")
}

model wpscoolter_jetpack_sync_queue {
  ID            BigInt   @id @default(autoincrement())
  queue_id      String   @db.VarChar(50)
  event_id      String   @db.VarChar(100)
  event_payload String   @db.LongText
  timestamp     DateTime @default(now()) @db.Timestamp(0)

  @@index([event_id], map: "event_id")
  @@index([queue_id], map: "queue_id")
  @@index([queue_id, event_id], map: "queue_id_event_id")
  @@index([timestamp], map: "timestamp")
}

model wpscoolter_links {
  link_id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  link_url         String   @default("") @db.VarChar(255)
  link_name        String   @default("") @db.VarChar(255)
  link_image       String   @default("") @db.VarChar(255)
  link_target      String   @default("") @db.VarChar(25)
  link_description String   @default("") @db.VarChar(255)
  link_visible     String   @default("Y") @db.VarChar(20)
  link_owner       BigInt   @default(1) @db.UnsignedBigInt
  link_rating      Int      @default(0)
  link_updated     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  link_rel         String   @default("") @db.VarChar(255)
  link_notes       String   @db.MediumText
  link_rss         String   @default("") @db.VarChar(255)

  @@index([link_visible], map: "link_visible")
}

model wpscoolter_options {
  option_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  option_name  String @unique(map: "option_name") @default("")
  option_value String @db.LongText
  autoload     String @default("yes") @db.VarChar(20)

  @@index([autoload], map: "autoload")
}

model wpscoolter_postmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  post_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([post_id], map: "post_id")
}

model wpscoolter_posts {
  ID                    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  post_author           BigInt   @default(0) @db.UnsignedBigInt
  post_date             DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_date_gmt         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content          String   @db.LongText
  post_title            String   @db.Text
  post_excerpt          String   @db.Text
  post_status           String   @default("publish") @db.VarChar(20)
  comment_status        String   @default("open") @db.VarChar(20)
  ping_status           String   @default("open") @db.VarChar(20)
  post_password         String   @default("") @db.VarChar(255)
  post_name             String   @default("") @db.VarChar(200)
  to_ping               String   @db.Text
  pinged                String   @db.Text
  post_modified         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_modified_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content_filtered String   @db.LongText
  post_parent           BigInt   @default(0) @db.UnsignedBigInt
  guid                  String   @default("") @db.VarChar(255)
  menu_order            Int      @default(0)
  post_type             String   @default("post") @db.VarChar(20)
  post_mime_type        String   @default("") @db.VarChar(100)
  comment_count         BigInt   @default(0)

  @@index([post_author], map: "post_author")
  @@index([post_name(length: 191)], map: "post_name")
  @@index([post_parent], map: "post_parent")
  @@index([post_type, post_status, post_date, ID], map: "type_status_date")
}

model wpscoolter_site_mail_logs {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  api_id     String?  @default("") @db.VarChar(255)
  to         String?  @db.Text
  subject    String?  @default("") @db.VarChar(768)
  headers    String?  @db.Text
  message    String?  @db.Text
  activity   String?  @db.Text
  source     String   @db.Text
  status     String?  @db.VarChar(255)
  opened     Boolean?
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([api_id], map: "api_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpscoolter_site_mail_statuses {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  log_id     String   @db.VarChar(255)
  email      String   @db.VarChar(255)
  type       String?  @default("to") @db.VarChar(3)
  status     String?  @default("pending") @db.VarChar(255)
  opened     Boolean  @default(false)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([log_id], map: "log_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wpscoolter_site_mail_suppressions {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  email      String   @unique(map: "email") @db.VarChar(255)
  reason     String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}

model wpscoolter_term_relationships {
  object_id        BigInt @default(0) @db.UnsignedBigInt
  term_taxonomy_id BigInt @default(0) @db.UnsignedBigInt
  term_order       Int    @default(0)

  @@id([object_id, term_taxonomy_id])
  @@index([term_taxonomy_id], map: "term_taxonomy_id")
}

model wpscoolter_term_taxonomy {
  term_taxonomy_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  term_id          BigInt @default(0) @db.UnsignedBigInt
  taxonomy         String @default("") @db.VarChar(32)
  description      String @db.LongText
  parent           BigInt @default(0) @db.UnsignedBigInt
  count            BigInt @default(0)

  @@unique([term_id, taxonomy], map: "term_id_taxonomy")
  @@index([taxonomy], map: "taxonomy")
}

model wpscoolter_termmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  term_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([term_id], map: "term_id")
}

model wpscoolter_terms {
  term_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name       String @default("") @db.VarChar(200)
  slug       String @default("") @db.VarChar(200)
  term_group BigInt @default(0)

  @@index([name(length: 191)], map: "name")
  @@index([slug(length: 191)], map: "slug")
}

model wpscoolter_usermeta {
  umeta_id   BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([user_id], map: "user_id")
}

model wpscoolter_users {
  ID                  BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_login          String   @default("") @db.VarChar(60)
  user_pass           String   @default("") @db.VarChar(255)
  user_nicename       String   @default("") @db.VarChar(50)
  user_email          String   @default("") @db.VarChar(100)
  user_url            String   @default("") @db.VarChar(100)
  user_registered     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user_activation_key String   @default("") @db.VarChar(255)
  user_status         Int      @default(0)
  display_name        String   @default("") @db.VarChar(250)

  @@index([user_email], map: "user_email")
  @@index([user_login], map: "user_login_key")
  @@index([user_nicename], map: "user_nicename")
}

model wpscoolter_wc_admin_note_actions {
  action_id     BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  note_id       BigInt  @db.UnsignedBigInt
  name          String  @db.VarChar(255)
  label         String  @db.VarChar(255)
  query         String  @db.LongText
  status        String  @db.VarChar(255)
  actioned_text String  @db.VarChar(255)
  nonce_action  String? @db.VarChar(255)
  nonce_name    String? @db.VarChar(255)

  @@index([note_id], map: "note_id")
}

model wpscoolter_wc_admin_notes {
  note_id       BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name          String    @db.VarChar(255)
  type          String    @db.VarChar(20)
  locale        String    @db.VarChar(20)
  title         String    @db.LongText
  content       String    @db.LongText
  content_data  String?   @db.LongText
  status        String    @db.VarChar(200)
  source        String    @db.VarChar(200)
  date_created  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_reminder DateTime? @db.DateTime(0)
  is_snoozable  Boolean   @default(false)
  layout        String    @default("") @db.VarChar(20)
  image         String?   @db.VarChar(200)
  is_deleted    Boolean   @default(false)
  is_read       Boolean   @default(false)
  icon          String    @default("info") @db.VarChar(200)
}

model wpscoolter_wc_category_lookup {
  category_tree_id BigInt @db.UnsignedBigInt
  category_id      BigInt @db.UnsignedBigInt

  @@id([category_tree_id, category_id])
}

model wpscoolter_wc_customer_lookup {
  customer_id      BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id          BigInt?   @unique(map: "user_id") @db.UnsignedBigInt
  username         String    @default("") @db.VarChar(60)
  first_name       String    @db.VarChar(255)
  last_name        String    @db.VarChar(255)
  email            String?   @db.VarChar(100)
  date_last_active DateTime? @db.Timestamp(0)
  date_registered  DateTime? @db.Timestamp(0)
  country          String    @default("") @db.Char(2)
  postcode         String    @default("") @db.VarChar(20)
  city             String    @default("") @db.VarChar(100)
  state            String    @default("") @db.VarChar(100)

  @@index([email], map: "email")
}

model wpscoolter_wc_download_log {
  download_log_id BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  timestamp       DateTime @db.DateTime(0)
  permission_id   BigInt   @db.UnsignedBigInt
  user_id         BigInt?  @db.UnsignedBigInt
  user_ip_address String?  @default("") @db.VarChar(100)

  @@index([permission_id], map: "permission_id")
  @@index([timestamp], map: "timestamp")
}

model wpscoolter_wc_order_addresses {
  id           BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  order_id     BigInt  @db.UnsignedBigInt
  address_type String? @db.VarChar(20)
  first_name   String? @db.Text
  last_name    String? @db.Text
  company      String? @db.Text
  address_1    String? @db.Text
  address_2    String? @db.Text
  city         String? @db.Text
  state        String? @db.Text
  postcode     String? @db.Text
  country      String? @db.Text
  email        String? @db.VarChar(320)
  phone        String? @db.VarChar(100)

  @@unique([address_type, order_id], map: "address_type_order_id")
  @@index([email(length: 191)], map: "email")
  @@index([order_id], map: "order_id")
  @@index([phone], map: "phone")
}

model wpscoolter_wc_order_coupon_lookup {
  order_id        BigInt   @db.UnsignedBigInt
  coupon_id       BigInt
  date_created    DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  discount_amount Float    @default(0)

  @@id([order_id, coupon_id])
  @@index([coupon_id], map: "coupon_id")
  @@index([date_created], map: "date_created")
}

model wpscoolter_wc_order_operational_data {
  id                          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  order_id                    BigInt?   @unique(map: "order_id") @db.UnsignedBigInt
  created_via                 String?   @db.VarChar(100)
  woocommerce_version         String?   @db.VarChar(20)
  prices_include_tax          Boolean?
  coupon_usages_are_counted   Boolean?
  download_permission_granted Boolean?
  cart_hash                   String?   @db.VarChar(100)
  new_order_email_sent        Boolean?
  order_key                   String?   @db.VarChar(100)
  order_stock_reduced         Boolean?
  date_paid_gmt               DateTime? @db.DateTime(0)
  date_completed_gmt          DateTime? @db.DateTime(0)
  shipping_tax_amount         Decimal?  @db.Decimal(26, 8)
  shipping_total_amount       Decimal?  @db.Decimal(26, 8)
  discount_tax_amount         Decimal?  @db.Decimal(26, 8)
  discount_total_amount       Decimal?  @db.Decimal(26, 8)
  recorded_sales              Boolean?

  @@index([order_key], map: "order_key")
}

model wpscoolter_wc_order_product_lookup {
  order_item_id         BigInt   @id @db.UnsignedBigInt
  order_id              BigInt   @db.UnsignedBigInt
  product_id            BigInt   @db.UnsignedBigInt
  variation_id          BigInt   @db.UnsignedBigInt
  customer_id           BigInt?  @db.UnsignedBigInt
  date_created          DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  product_qty           Int
  product_net_revenue   Float    @default(0)
  product_gross_revenue Float    @default(0)
  coupon_amount         Float    @default(0)
  tax_amount            Float    @default(0)
  shipping_amount       Float    @default(0)
  shipping_tax_amount   Float    @default(0)

  @@index([customer_id], map: "customer_id")
  @@index([date_created], map: "date_created")
  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model wpscoolter_wc_order_stats {
  order_id           BigInt    @id @db.UnsignedBigInt
  parent_id          BigInt    @default(0) @db.UnsignedBigInt
  date_created       DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_created_gmt   DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_paid          DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_completed     DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  num_items_sold     Int       @default(0)
  total_sales        Float     @default(0)
  tax_total          Float     @default(0)
  shipping_total     Float     @default(0)
  net_total          Float     @default(0)
  returning_customer Boolean?
  status             String    @db.VarChar(200)
  customer_id        BigInt    @db.UnsignedBigInt

  @@index([customer_id], map: "customer_id")
  @@index([date_created], map: "date_created")
  @@index([status(length: 191)], map: "status")
}

model wpscoolter_wc_order_tax_lookup {
  order_id     BigInt   @db.UnsignedBigInt
  tax_rate_id  BigInt   @db.UnsignedBigInt
  date_created DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  shipping_tax Float    @default(0)
  order_tax    Float    @default(0)
  total_tax    Float    @default(0)

  @@id([order_id, tax_rate_id])
  @@index([date_created], map: "date_created")
  @@index([tax_rate_id], map: "tax_rate_id")
}

model wpscoolter_wc_orders {
  id                   BigInt    @id @db.UnsignedBigInt
  status               String?   @db.VarChar(20)
  currency             String?   @db.VarChar(10)
  type                 String?   @db.VarChar(20)
  tax_amount           Decimal?  @db.Decimal(26, 8)
  total_amount         Decimal?  @db.Decimal(26, 8)
  customer_id          BigInt?   @db.UnsignedBigInt
  billing_email        String?   @db.VarChar(320)
  date_created_gmt     DateTime? @db.DateTime(0)
  date_updated_gmt     DateTime? @db.DateTime(0)
  parent_order_id      BigInt?   @db.UnsignedBigInt
  payment_method       String?   @db.VarChar(100)
  payment_method_title String?   @db.Text
  transaction_id       String?   @db.VarChar(100)
  ip_address           String?   @db.VarChar(100)
  user_agent           String?   @db.Text
  customer_note        String?   @db.Text

  @@index([billing_email(length: 191)], map: "billing_email")
  @@index([customer_id, billing_email(length: 171)], map: "customer_id_billing_email")
  @@index([date_created_gmt], map: "date_created")
  @@index([date_updated_gmt], map: "date_updated")
  @@index([parent_order_id], map: "parent_order_id")
  @@index([status], map: "status")
  @@index([type, status, date_created_gmt], map: "type_status_date")
}

model wpscoolter_wc_orders_meta {
  id         BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  order_id   BigInt? @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.Text

  @@index([meta_key(length: 100), meta_value(length: 82)], map: "meta_key_value")
  @@index([order_id, meta_key(length: 100), meta_value(length: 82)], map: "order_id_meta_key_meta_value")
}

model wpscoolter_wc_product_attributes_lookup {
  product_id             BigInt
  product_or_parent_id   BigInt
  taxonomy               String  @db.VarChar(32)
  term_id                BigInt
  is_variation_attribute Boolean
  in_stock               Boolean

  @@id([product_or_parent_id, term_id, product_id, taxonomy])
  @@index([is_variation_attribute, term_id], map: "is_variation_attribute_term_id")
}

model wpscoolter_wc_product_download_directories {
  url_id  BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  url     String  @db.VarChar(256)
  enabled Boolean @default(false)

  @@index([url(length: 191)], map: "url")
}

model wpscoolter_wc_product_meta_lookup {
  product_id       BigInt   @id
  sku              String?  @default("") @db.VarChar(100)
  virtual          Boolean? @default(false)
  downloadable     Boolean? @default(false)
  min_price        Decimal? @db.Decimal(19, 4)
  max_price        Decimal? @db.Decimal(19, 4)
  onsale           Boolean? @default(false)
  stock_quantity   Float?
  stock_status     String?  @default("instock") @db.VarChar(100)
  rating_count     BigInt?  @default(0)
  average_rating   Decimal? @default(0.00) @db.Decimal(3, 2)
  total_sales      BigInt?  @default(0)
  tax_status       String?  @default("taxable") @db.VarChar(100)
  tax_class        String?  @default("") @db.VarChar(100)
  global_unique_id String?  @default("") @db.VarChar(100)

  @@index([downloadable], map: "downloadable")
  @@index([min_price, max_price], map: "min_max_price")
  @@index([onsale], map: "onsale")
  @@index([sku(length: 50)], map: "sku")
  @@index([stock_quantity], map: "stock_quantity")
  @@index([stock_status], map: "stock_status")
  @@index([virtual], map: "virtual")
}

model wpscoolter_wc_rate_limits {
  rate_limit_id        BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  rate_limit_key       String @unique(map: "rate_limit_key", length: 191) @db.VarChar(200)
  rate_limit_expiry    BigInt @db.UnsignedBigInt
  rate_limit_remaining Int    @default(0) @db.SmallInt
}

model wpscoolter_wc_reserved_stock {
  order_id       BigInt
  product_id     BigInt
  stock_quantity Float    @default(0)
  timestamp      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  expires        DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@id([order_id, product_id])
}

model wpscoolter_wc_tax_rate_classes {
  tax_rate_class_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name              String @default("") @db.VarChar(200)
  slug              String @unique(map: "slug", length: 191) @default("") @db.VarChar(200)
}

model wpscoolter_wc_webhooks {
  webhook_id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  status            String   @db.VarChar(200)
  name              String   @db.Text
  user_id           BigInt   @db.UnsignedBigInt
  delivery_url      String   @db.Text
  secret            String   @db.Text
  topic             String   @db.VarChar(200)
  date_created      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_created_gmt  DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_modified     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  date_modified_gmt DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  api_version       Int      @db.SmallInt
  failure_count     Int      @default(0) @db.SmallInt
  pending_delivery  Boolean  @default(false)

  @@index([user_id], map: "user_id")
}

model wpscoolter_woocommerce_api_keys {
  key_id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         BigInt    @db.UnsignedBigInt
  description     String?   @db.VarChar(200)
  permissions     String    @db.VarChar(10)
  consumer_key    String    @db.Char(64)
  consumer_secret String    @db.Char(43)
  nonces          String?   @db.LongText
  truncated_key   String    @db.Char(7)
  last_access     DateTime? @db.DateTime(0)

  @@index([consumer_key], map: "consumer_key")
  @@index([consumer_secret], map: "consumer_secret")
}

model wpscoolter_woocommerce_attribute_taxonomies {
  attribute_id      BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  attribute_name    String  @db.VarChar(200)
  attribute_label   String? @db.VarChar(200)
  attribute_type    String  @db.VarChar(20)
  attribute_orderby String  @db.VarChar(20)
  attribute_public  Int     @default(1)

  @@index([attribute_name(length: 20)], map: "attribute_name")
}

model wpscoolter_woocommerce_downloadable_product_permissions {
  permission_id       BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  download_id         String    @db.VarChar(36)
  product_id          BigInt    @db.UnsignedBigInt
  order_id            BigInt    @default(0) @db.UnsignedBigInt
  order_key           String    @db.VarChar(200)
  user_email          String    @db.VarChar(200)
  user_id             BigInt?   @db.UnsignedBigInt
  downloads_remaining String?   @db.VarChar(9)
  access_granted      DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  access_expires      DateTime? @db.DateTime(0)
  download_count      BigInt    @default(0) @db.UnsignedBigInt

  @@index([product_id, order_id, order_key(length: 16), download_id], map: "download_order_key_product")
  @@index([download_id, order_id, product_id], map: "download_order_product")
  @@index([order_id], map: "order_id")
  @@index([user_id, order_id, downloads_remaining, access_expires], map: "user_order_remaining_expires")
}

model wpscoolter_woocommerce_log {
  log_id    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  timestamp DateTime @db.DateTime(0)
  level     Int      @db.SmallInt
  source    String   @db.VarChar(200)
  message   String   @db.LongText
  context   String?  @db.LongText

  @@index([level], map: "level")
}

model wpscoolter_woocommerce_order_itemmeta {
  meta_id       BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  order_item_id BigInt  @db.UnsignedBigInt
  meta_key      String? @db.VarChar(255)
  meta_value    String? @db.LongText

  @@index([meta_key(length: 32)], map: "meta_key")
  @@index([order_item_id], map: "order_item_id")
}

model wpscoolter_woocommerce_order_items {
  order_item_id   BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  order_item_name String @db.Text
  order_item_type String @default("") @db.VarChar(200)
  order_id        BigInt @db.UnsignedBigInt

  @@index([order_id], map: "order_id")
}

model wpscoolter_woocommerce_payment_tokenmeta {
  meta_id          BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  payment_token_id BigInt  @db.UnsignedBigInt
  meta_key         String? @db.VarChar(255)
  meta_value       String? @db.LongText

  @@index([meta_key(length: 32)], map: "meta_key")
  @@index([payment_token_id], map: "payment_token_id")
}

model wpscoolter_woocommerce_payment_tokens {
  token_id   BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  gateway_id String  @db.VarChar(200)
  token      String  @db.Text
  user_id    BigInt  @default(0) @db.UnsignedBigInt
  type       String  @db.VarChar(200)
  is_default Boolean @default(false)

  @@index([user_id], map: "user_id")
}

model wpscoolter_woocommerce_sessions {
  session_id     BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  session_key    String @unique(map: "session_key") @db.Char(32)
  session_value  String @db.LongText
  session_expiry BigInt @db.UnsignedBigInt
}

model wpscoolter_woocommerce_shipping_zone_locations {
  location_id   BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  zone_id       BigInt @db.UnsignedBigInt
  location_code String @db.VarChar(200)
  location_type String @db.VarChar(40)

  @@index([location_type(length: 10), location_code(length: 20)], map: "location_type_code")
  @@index([zone_id], map: "zone_id")
}

model wpscoolter_woocommerce_shipping_zone_methods {
  zone_id      BigInt  @db.UnsignedBigInt
  instance_id  BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  method_id    String  @db.VarChar(200)
  method_order BigInt  @db.UnsignedBigInt
  is_enabled   Boolean @default(true)
}

model wpscoolter_woocommerce_shipping_zones {
  zone_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  zone_name  String @db.VarChar(200)
  zone_order BigInt @db.UnsignedBigInt
}

model wpscoolter_woocommerce_tax_rate_locations {
  location_id   BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  location_code String @db.VarChar(200)
  tax_rate_id   BigInt @db.UnsignedBigInt
  location_type String @db.VarChar(40)

  @@index([location_type(length: 10), location_code(length: 20)], map: "location_type_code")
  @@index([tax_rate_id], map: "tax_rate_id")
}

model wpscoolter_woocommerce_tax_rates {
  tax_rate_id       BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  tax_rate_country  String @default("") @db.VarChar(2)
  tax_rate_state    String @default("") @db.VarChar(200)
  tax_rate          String @default("") @db.VarChar(8)
  tax_rate_name     String @default("") @db.VarChar(200)
  tax_rate_priority BigInt @db.UnsignedBigInt
  tax_rate_compound Int    @default(0)
  tax_rate_shipping Int    @default(1)
  tax_rate_order    BigInt @db.UnsignedBigInt
  tax_rate_class    String @default("") @db.VarChar(200)

  @@index([tax_rate_class(length: 10)], map: "tax_rate_class")
  @@index([tax_rate_country], map: "tax_rate_country")
  @@index([tax_rate_priority], map: "tax_rate_priority")
  @@index([tax_rate_state(length: 2)], map: "tax_rate_state")
}

model wpscoolter_wpmailsmtp_debug_events {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  content    String?  @db.Text
  initiator  String?  @db.Text
  event_type Int      @default(0) @db.UnsignedTinyInt
  created_at DateTime @default(now()) @db.Timestamp(0)
}

model wpscoolter_wpmailsmtp_tasks_meta {
  id     BigInt   @id @default(autoincrement())
  action String   @db.VarChar(255)
  data   String   @db.LongText
  date   DateTime @db.DateTime(0)
}

enum inteli_assessment_conversations_message_type {
  student
  ai
}

enum inteli_assessments_disputes_status {
  Pending
  Solved
}

enum scoolter_booking_discounts_discount_type {
  FIXED_AMOUNT
  PERCENTAGE
}

enum wpa360_wfconfig_autoload {
  no
  yes
}

enum wpa360_wfls_settings_autoload {
  no
  yes
}

enum wpa360_wftrafficrates_hitType {
  hit
  // 404 @map("404")
}

enum scoolter_payments_type {
  RENTAL_PAYMENT
  SECURITY_DEPOSIT
  DAMAGE_CHARGE
  FUEL_CHARGE
  REFUND
}

enum scoolter_additional_services_type {
  EQUIPMENT
  DELIVERY
  RELOCATION
  OTHER
}

enum scoolter_extra_services_recurrence {
  Once
  Daily
}

enum scoolter_locations_type {
  PERMANENT_LOCATION
  BUS_AGENCY
  CUSTOM
}

enum scoolter_motorcycle_inventory_status {
  AVAILABLE
  RENTED
  IN_MAINTENANCE
  UNAVAILABLE
}

enum scoolter_payments_status {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum scoolter_additional_services_charge_type {
  PER_DAY
  PER_RENTAL
}

enum scoolter_booking_discounts_reason {
  LONG_TERM_RENTAL
  SPECIAL_PROMOTION
  CUSTOMER_LOYALTY
  VOLUME_BOOKING
  COMPENSATION
  NEGOTIATED
  OTHER
}

enum wpa360_pmpro_discount_codes_levels_cycle_period {
  Day
  Week
  Month
  Year
}

enum inteli_users_role {
  student
  teacher
  clerk
  admin
}

enum scoolter_users_role {
  ADMIN
  STAFF
  CUSTOMER
}

enum wpa360_wfls_2fa_secrets_mode {
  authenticator
}

enum inteli_assessments_attempts_status {
  In_progress @map("In progress")
  Completed
}

enum wpa360_pmpro_membership_levels_cycle_period {
  Day
  Week
  Month
  Year
}

enum wpa360_pmpro_memberships_users_cycle_period {
  Day
  Week
  Month
  Year
}

enum wpa360_pmpro_discount_codes_levels_expiration_period {
  Day
  Week
  Month
  Year
}

enum wpa360_pmpro_membership_levels_expiration_period {
  Day
  Week
  Month
  Year
}

enum inteli_assessments_status {
  Active
  Inactive
}

enum scoolter_bookings_deposit_status {
  PENDING
  HELD
  CAPTURED
  RELEASED
  PARTIALLY_CAPTURED
}

enum scoolter_bookings_status {
  ONGOING
  PENDING
  CONFIRMED
  ACTIVE
  COMPLETED
  CANCELLED
}
